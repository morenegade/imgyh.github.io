<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YH&#39;s Blog</title>
  
  <subtitle>元洪博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gyh.im/"/>
  <updated>2020-07-14T04:38:59.541Z</updated>
  <id>https://gyh.im/</id>
  
  <author>
    <name>郭元洪</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>宝塔搭建UnblockNeteaseMusic</title>
    <link href="https://gyh.im/posts/75146fb8/"/>
    <id>https://gyh.im/posts/75146fb8/</id>
    <published>2020-06-10T10:50:38.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><blockquote><p>UnblockNeteaseMusic 是一个用来解锁网易云音乐客户端变灰歌曲的项目，它具有以下特性：</p><ul><li>使用网易云旧链 / QQ /虾米/百度/酷狗/酷我/咕咪/ JOOX音源替换变灰歌曲链接（默认仅启用前四）</li><li>为请求增加X-Real-IP参数解锁海外限制，支持指定网易云服务器IP，支持设置上游HTTP / HTTPS代理</li><li>完整的流量代理功能（HTTP / HTTPS），可直接作为系统代理（同时支持PAC）</li></ul></blockquote><h1 id="服务端搭建"><a class="markdownIt-Anchor" href="#服务端搭建"></a> 服务端搭建</h1><p>GitHub地址：<a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">https://github.com/nondanee/UnblockNeteaseMusic</a></p><p>由于我有一台阿里云的学生机，在上面搭建比较方便，也可以更多的人使用。</p><ul><li><p>宝塔安装PM2管理器</p></li><li><p>连接SSH运行如下两条命令,克隆项目到本地，你也可以使用宝塔的远程下载。</p></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/nondanee/UnblockNeteaseMusic.git</span><br></pre></td></tr></table></figure><ul><li>修改<code>/root/UnblockNeteaseMusic</code>文件夹中的<code>app.js</code>文件,将<code>16</code>行的<code>8080</code>端口替换为你自定义端口，然后宝塔安全组放行相应端口即可</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200610185725.png"  alt=""></p><ul><li><p>回到<code>PM2管理器</code>中，设置，根据下图添加即可。目录：<code>/root/UnblockNeteaseMusic</code>文件：<code>app.js</code> 名称：<code>UnblockNeteaseMusic</code>(名称可随意)</p></li><li><p>这就可以使用了，如果需要更高级的玩法可参考原作者的<a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">GitHub项目</a></p></li></ul><h1 id="客户端使用"><a class="markdownIt-Anchor" href="#客户端使用"></a> 客户端使用</h1><p>具体参见<a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">GitHub项目</a></p><p><strong>全局代理地址填写服务器地址和端口号即可</strong></p><table><thead><tr><th>平台</th><th>基础设置</th></tr></thead><tbody><tr><td>Windows</td><td>设置 &gt; 工具 &gt; 自定义代理 (客户端内)</td></tr><tr><td>UWP</td><td>Windows 设置 &gt; 网络和 Internet &gt; 代理</td></tr><tr><td>Linux</td><td>系统设置 &gt; 网络 &gt; 网络代理</td></tr><tr><td>macOS</td><td>系统偏好设置 &gt; 网络 &gt; 高级 &gt; 代理</td></tr><tr><td>Android</td><td>WLAN &gt; 修改网络 &gt; 高级选项 &gt; 代理</td></tr><tr><td>iOS</td><td>无线局域网 &gt; HTTP 代理 &gt; 配置代理</td></tr></tbody></table><p>windows直接在客户端内设置IP地址和端口就可以了，安卓只可以在WiFi中设置，数据就不能使用，有一定局限性，可以用下面的方法解决。</p><h1 id="使用goproxy将http代理转换为ss代理"><a class="markdownIt-Anchor" href="#使用goproxy将http代理转换为ss代理"></a> 使用goproxy将http代理转换为ss代理</h1><h2 id="什么是goproxy"><a class="markdownIt-Anchor" href="#什么是goproxy"></a> 什么是goproxy</h2><p>goproxy是golang实现的高性能http,https,websocket,tcp,防污染DNS,socks5代理服务器,支持内网穿透,链式代理,通讯加密,智能HTTP,SOCKS5代理,前置CDN,域名黑白名单,跨平台,KCP协议支持,支持ipv4和ipv6,集成外部API。项目地址：<a href="https://github.com/snail007/goproxy" target="_blank" rel="noopener">https://github.com/snail007/goproxy</a></p><p>goproxy功能强大，本文介绍其中一个功能：<strong>代理协议转换</strong> ，将原本的HTTP协议转换为socket</p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ul><li>下载并解压</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> goproxy &amp;&amp; <span class="keyword">cd</span> goproxy</span><br><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate https:<span class="comment">//github.com/snail007/goproxy/releases/download/v9.7/proxy-linux-amd64.tar.gz</span></span><br><span class="line">tar zxvf proxy-linux-amd64.tar.gz &amp;&amp; <span class="keyword">rm</span> proxy-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><ul><li>运行</li></ul><p>假设以下条件<br>UnblockNeteaseMusic服务器的地址<br>127.0.0.1<br>UnblockNeteaseMusic运行端口(记得放行端口)<br>6666<br>转换后ss的监听端口（记得放行端口）<br>2333<br>转换后ss的加密方式<br>chacha20-ietf<br>转换后ss的密码<br>music</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="built_in">/proxy </span>sps -S http -T tcp -P 127.0.0.1:6666 -t tcp -p :2333 -h chacha20-ietf -j music</span><br></pre></td></tr></table></figure><ul><li>后台运行</li></ul><ol><li>推荐使用：</li></ol><p>编辑文件:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>systemd<span class="regexp">/system/g</span>oproxy.service</span><br></pre></td></tr></table></figure><p>输入以下内容：（<code>/root/goproxy/proxy</code> 根据自己goproxy的路径自行修改，我放在root目录下）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=goproxy</span><br><span class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">ExecStart</span>=/root/goproxy/proxy sps -S http -T tcp -P <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6666</span> -t tcp -p :<span class="number">2333</span> -h chacha20-ietf -j music</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-abort</span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=default.target</span><br></pre></td></tr></table></figure><p>开始启动：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> goproxy</span><br></pre></td></tr></table></figure><p>设置开机自启：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> goproxy</span><br></pre></td></tr></table></figure><p>其他命令：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">重启：systemctl restart goproxy</span><br><span class="line">停止：systemctl <span class="keyword">stop</span> goproxy</span><br><span class="line">状态：systemctl <span class="keyword">status</span> goproxy</span><br></pre></td></tr></table></figure><ol start="2"><li>不推荐使用，不能设置开机自启</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装screen</span></span><br><span class="line">apt-<span class="builtin-name">get</span> install<span class="built_in"> screen </span>/ yum -y install screen</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建一个screen</span></span><br><span class="line">screen -S goproxy</span><br><span class="line"><span class="comment">#在screen下运行goproxy</span></span><br><span class="line">cd goproxy</span><br><span class="line">.<span class="built_in">/proxy </span>sps -S http -T tcp -P 127.0.0.1:6666 -t tcp -p :2333 -h chacha20-ietf -j music</span><br></pre></td></tr></table></figure><h1 id="福利"><a class="markdownIt-Anchor" href="#福利"></a> 福利</h1><p>大家可以试试我搭建的</p><p>Windows端，在网易云音乐设置中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ip</span>: <span class="selector-tag">aliyun</span><span class="selector-class">.0941314</span><span class="selector-class">.xyz</span></span><br><span class="line"><span class="selector-tag">port</span><span class="selector-pseudo">:6666</span></span><br><span class="line">用户名密码不填</span><br></pre></td></tr></table></figure><p>安卓端在ss中输入相应的配置就可以使用了</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip:aliyun<span class="number">.0941314</span>.xyz</span><br><span class="line">port:<span class="number">2333</span></span><br><span class="line">协议：chacha20-ietf</span><br><span class="line">密码：music</span><br><span class="line">用户名不填</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      宝塔搭建UnblockNeteaseMusic
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="NeteaseMusic" scheme="https://gyh.im/tags/NeteaseMusic/"/>
    
  </entry>
  
  <entry>
    <title>解决Leancloud流控导致无法唤醒问题</title>
    <link href="https://gyh.im/posts/ef89201e/"/>
    <id>https://gyh.im/posts/ef89201e/</id>
    <published>2020-05-20T01:36:19.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>由于本博客采用的是 <code>Valine</code> 这一个评论系统，这个评论系统后端完全依赖 <code>Leancloud</code>。最近 <code>Leancloud</code> 对开发版实例自动唤醒采取了流控措施，导致无法通过定时任务唤醒，这样会导致邮件提醒不及时。以下是官方的回应。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200520094246.png"  alt=""></p><p>如果还没设置 <code>Valine</code> 邮件提醒功能的可参考以下文章：</p><a href="/posts/caa4f244/" title="Valine配置评论提醒服务">Valine配置评论提醒服务</a><h1 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法</h1><p>首先看一下 <code>Leancloud</code> 的<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134" target="_blank" rel="noopener">休眠策略</a></p><ul><li>如果应用最近一段时间（半小时）没有任何外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动。访问者的体验是第一个请求响应时间是 5 ~ 30 秒（视实例启动时间而定），后续访问响应速度恢复正常。</li><li>强制休眠：如果最近 24 小时内累计运行超过 18 小时，则强制休眠。此时新的请求会收到 503 的错误响应码，该错误可在 <code>云引擎 &gt; 统计</code> 中查看。</li></ul><p>根据他这个休眠策略，可以没30分钟访问一次实例，就可以解决了。</p><p><code>GitHub</code> 提供了 <code>Action</code> 服务，所以可以使用 <code>Action</code> 实现定时唤醒。</p><p>方法步骤：</p><ul><li><p>首先 <code>fork</code> 一份我的代码：<a href="https://github.com/imgyh/Wake_Leancloud" target="_blank" rel="noopener">https://github.com/imgyh/Wake_Leancloud</a></p></li><li><p>修改 <code>main.py</code> 里面的 <code>get_status(&quot;https://valine.0941314.xyz/&quot;)</code> 改成你自己的 <code>Valine</code> 评论后台管理地址</p></li><li><p>之后他就会在北京时间的 7-23 点，每隔25min执行一次 <code>main.py</code> 来唤醒一次 <code>Valine</code> 的实例。</p></li></ul><h1 id="实现原理"><a class="markdownIt-Anchor" href="#实现原理"></a> 实现原理</h1><p>实现原理很简单，就用了 <code>python</code> 的 <code>requests</code> 库，几行代码就搞定了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_status</span><span class="params">(url)</span>:</span></span><br><span class="line">    </span><br><span class="line">    r=requests.get(url=url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r.status_code</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    status=get_status(<span class="string">"https://valine.0941314.xyz/"</span>) <span class="comment">#修改为自己的valine评论地址</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> status==<span class="number">200</span>:</span><br><span class="line">        print(<span class="string">"激活成功！HTTP状态码为："</span>,status)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"激活失败！HTTP状态码为："</span>,status)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>由于自己使用，这已经完全能满足了。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      解决Leancloud流控导致无法唤醒问题
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="LeanCloud" scheme="https://gyh.im/tags/LeanCloud/"/>
    
      <category term="Valine" scheme="https://gyh.im/tags/Valine/"/>
    
  </entry>
  
  <entry>
    <title>Github_Action:SSH自动部署到Coding和Github</title>
    <link href="https://gyh.im/posts/6f63f859/"/>
    <id>https://gyh.im/posts/6f63f859/</id>
    <published>2020-04-24T08:07:38.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>这篇文章介绍了通过访问令牌的的方式去推送<code>hexo</code>到 <code>GitHub Page</code> 和 <code>Coding Page</code> 但是是使用<code>git</code>强制推送上去的，由于我使用了百度推送，所以需要使用 <code>hexo d</code>的方式推送，才能保证百度推送工作。</p><h1 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h1><p>首先要安装插件，这个插件只要是在本地使用<code>hexo d</code>这个命令都装上了的吧。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>同时在Hexo项目根目录配置文件<code>_config.yaml</code>中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">        <span class="attr">github:</span> <span class="string">git@github.com:GitHub用户名/GitHub用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment">#百度推送，如果你安装了推送的插件就写上，没有就不用管</span></span><br></pre></td></tr></table></figure><h1 id="密钥准备"><a class="markdownIt-Anchor" href="#密钥准备"></a> 密钥准备</h1><p>为了方便运行 <code>GitHub Actions</code> 时登录 <code>GitHub</code> 账号，我们使用<code>SSH</code>方式登录。就是要把设备的私钥交给<code>GitHub Actions</code>，公钥交给<code>GitHub</code>，需要去<code>Settings</code>里去配置。</p><p>使用<code>ssh-keygen</code>生成一组公私秘钥对</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"Github 的邮箱地址"</span></span><br><span class="line"></span><br><span class="line">如 ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"123123123@gmail.com"</span></span><br></pre></td></tr></table></figure><ul><li><p>配置公钥，应该已经配好，不然如何上到的项目资源，配置路径：<code>github网站–&gt;Settings–&gt;SSH and GPG keys</code></p></li><li><p>配置私钥，blog源码仓库的<code>Settings-&gt;Secrets</code>里添加私钥，名称为<code>HEXO_DEPLOY_PRIVATE_KEY</code></p></li></ul><div class="note success"><p>请直接跳到，<code>推送到Coding和Github</code> 这一步骤。</p></div><h1 id="配置github-actions"><a class="markdownIt-Anchor" href="#配置github-actions"></a> 配置GitHub Actions</h1><p>由于这个配置文件无法推送到 <code>Coding</code> 所以大家就不要管这一步了</p><p>在blog源码仓库的 <code>Actions</code> 选项卡下点击 <code>新建workflow</code> ，名称默认或者自定义修改，编写如下配置。</p><p>这样就可以推送到<code>Github</code>了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># workflow name</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span> <span class="string">Hexo</span> <span class="string">Blog</span> <span class="string">Deploy</span> <span class="string">LTS</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># master branch on push, auto run</span></span><br><span class="line"><span class="attr">on:</span> </span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> </span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> </span><br><span class="line">        </span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="comment"># check it to your workflow can access it</span></span><br><span class="line">    <span class="comment"># from: https://github.com/actions/checkout</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Repository</span> <span class="string">master</span> <span class="string">branch</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@master</span> </span><br><span class="line">      </span><br><span class="line">    <span class="comment"># from: https://github.com/actions/setup-node  </span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span> </span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">"10.x"</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span>    </span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Deploy</span> <span class="string">Private</span> <span class="string">Key</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">HEXO_DEPLOY_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">"$HEXO_DEPLOY_PRIVATE_KEY"</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span> </span><br><span class="line">        <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span> </span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">'Github用户名'</span> </span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">'Github邮箱'</span>  </span><br><span class="line">     </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> </span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">generate</span> </span><br><span class="line">        <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h1 id="推送到coding和github"><a class="markdownIt-Anchor" href="#推送到coding和github"></a> 推送到Coding和Github</h1><p>上面的方法，可以实现推送到 <code>Github</code> 和 百度链接的推送。当时我想的是在 <code>_config.yaml</code> 增加<code>Coding</code>的推送，但是经过实验好像，推送到 <code>Coding</code> 一直不成功。所以我可以 <code>Github</code> 和 百度推送 使用 <code>hexo d</code> , <code>Coding</code> 采取上一篇文章中的强制推送。</p><a href="/posts/9d3b758e/" title="Github-Action自动构建Hexo实现Coding和Github双部署">Github-Action自动构建Hexo实现Coding和Github双部署</a><p>参考这一篇文章，获取<code>coding</code>访问令牌(不需要<code>Github</code>的访问令牌，<code>Github</code>推送使用<code>ssh</code>方式)，获取并添加 <code>Username_Coding</code> 和 <code>token_CodingAPI</code> 的环境变量。</p><ul><li>还是在blog源码仓库的<code>Settings-&gt;Secrets</code>里添加<code>Username_Coding</code> 和 <code>token_CodingAPI</code> 的环境变量</li></ul><p>在blog源码仓库的 <code>Actions</code> 选项卡下点击 <code>新建workflow</code> ，名称默认或者自定义修改，编写如下配置。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># workflow name</span></span><br><span class="line"><span class="attr">name</span>: <span class="string">CI Hexo Blog Deploy LTS</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># master branch on push, auto run</span></span><br><span class="line"><span class="attr">on</span>: <span class="string"></span></span><br><span class="line">  <span class="attr">push</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">branches</span>:<span class="string"></span></span><br><span class="line">      <span class="meta">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">build</span>: <span class="string"></span></span><br><span class="line">    <span class="meta">runs-on</span>: <span class="string">ubuntu-latest </span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">steps</span>:<span class="string"></span></span><br><span class="line"><span class="comment">    # check it to your workflow can access it</span></span><br><span class="line"><span class="comment">    # from: https://github.com/actions/checkout</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Checkout Repository master branch</span></span><br><span class="line">      <span class="attr">uses</span>: <span class="string">actions/checkout@master </span></span><br><span class="line">      </span><br><span class="line"><span class="comment">    # from: https://github.com/actions/setup-node  </span></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Node.js 10.x </span></span><br><span class="line">      <span class="attr">uses</span>: <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with</span>:<span class="string"></span></span><br><span class="line">        <span class="meta">node-version</span>: <span class="string">"10.x"</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Hexo Dependencies</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">npm</span> <span class="string">install hexo-cli -g</span></span><br><span class="line">        <span class="attr">npm</span> <span class="string">install    </span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Deploy Private Key</span></span><br><span class="line">      <span class="attr">env</span>:<span class="string"></span></span><br><span class="line">        <span class="attr">HEXO_DEPLOY_PRIVATE_KEY</span>: <span class="string">$&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125;</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">mkdir</span> <span class="string">-p ~/.ssh/</span></span><br><span class="line">        <span class="attr">echo</span> <span class="string">"$HEXO_DEPLOY_PRIVATE_KEY" &gt; ~/.ssh/id_rsa </span></span><br><span class="line">        <span class="attr">chmod</span> <span class="string">600 ~/.ssh/id_rsa</span></span><br><span class="line">        <span class="meta">ssh-keyscan</span> <span class="string">github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Git Infomation</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">| </span></span><br><span class="line">        <span class="attr">git</span> <span class="string">config --global user.name 'Github用户名' </span></span><br><span class="line">        <span class="attr">git</span> <span class="string">config --global user.email 'Github邮箱'  </span></span><br><span class="line">       </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Get Latest Commit Message </span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">log --pretty=format:"%s from Github Actions at `date +"%Y-%m-%d %H:%M:%S"`" --date=short -n 1  &gt; commit-message.log</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Deploy  To Github and Baidu</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="attr">hexo</span> <span class="string">generate </span></span><br><span class="line">        <span class="attr">hexo</span> <span class="string">deploy </span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Deploy To Coding Pages </span></span><br><span class="line">      <span class="attr">env</span>:<span class="string"></span></span><br><span class="line">        <span class="attr">Coding_Pages</span>: <span class="string">e.coding.net/guoyuanhong/hexo/hexo.git</span></span><br><span class="line">        <span class="attr">Coding_Token</span>: <span class="string">$&#123;&#123; secrets.token_CodingAPI &#125;&#125;</span></span><br><span class="line">        <span class="attr">Coding_Username</span>: <span class="string">$&#123;&#123; secrets.Username_Coding &#125;&#125;</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">clone https://$&#123;Coding_Username&#125;:$&#123;Coding_Token&#125;@$&#123;Coding_Pages&#125; .coding_pages</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">.coding_pages</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">checkout master</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">../</span></span><br><span class="line">        <span class="attr">mv</span> <span class="string">.coding_pages/.git/ ./public/</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">./public/</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">add .</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">commit -F ../commit-message.log</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">push --force --quiet "https://$&#123;Coding_Username&#125;:$&#123;Coding_Token&#125;@$&#123;Coding_Pages&#125;" master:master</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Github_Action:SSH自动部署到Coding和Github
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Cloudflare面板使用教程</title>
    <link href="https://gyh.im/posts/7f071992/"/>
    <id>https://gyh.im/posts/7f071992/</id>
    <published>2020-04-21T07:28:50.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="概述面板"><a class="markdownIt-Anchor" href="#概述面板"></a> 概述面板</h1><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153012.png"  alt=""></p><p>概述面板顾名思义，就是让你了解一下你网站的大概运行情况，这里的几个名词我解释一下，我的解释不一定准确哈。 <strong>概述的时候可以选择观察时间是24小时还是7天还是一个月。</strong></p><ul><li><p>独立访问者：指IP，当天有多少个IP访问你的网站，一个人用一台电脑访问就是一个IP，他不管浏览了你多少个网页，都只算一个独立访问者。</p></li><li><p>请求总数：指当天有多少网页被别人打开了，一个用户用一台电脑打开了你100个网页，“独立访问者”只算1，但是请求总数算100。</p></li><li><p>已缓存的百分比： <strong>cloudflare在做CDN的时候，会缓存一些静态资源，这样别人下一次读取这些静态资源的时候，cloudflare就没必要再回源到你的服务器去取回数据，直接从cloudflare的存储里面读取就好，能加快网站的访问速度。</strong> 已缓存的百分比就是cloudflare缓存的部分和网站总的数据量的比值。</p></li><li><p>已提供的数据总计：指你有多少流量经过了cloudflare，相当于你这个网站今天使用了多少的流量</p></li><li><p>已缓存数据：和“已缓存百分比”差不多，指的是cloudflare到底缓存了多大的数据量</p></li><li><p>右面的“Under Attack 模式”： <strong>打开这个模式后，别人访问你的网页就会有俗称的“五秒盾”，指的是这个网页有几秒钟的打开时间来检验，不通过的还会有验证码，在防止别人CC攻击的时候有奇效，但是有时候“五秒盾”不止会卡主别人五秒，卡主1分多钟然后跳出个验证码也是正常的，网站没被攻击的会后最好别开。</strong> 或者调试一下，网站被攻击的时候自动开启这个模式，这就得自己去百度如何操作了。</p></li><li><p>右边的“开发模式”：因为cf的数据缓存，所有网站内有些东西在你修改了之后，访问网站并不是你修改后的内容，因为cf的缓存是每隔一段时间去源站缓存一次的。打开这个之后，会暂时的绕过缓存，方便开发者对网站进行修改。</p></li><li><p>在往下拉还有“API”和“账户ID”等等，这些咱们一般人都用不到</p></li><li><p>最后有个“高级操作”，能暂停你的站点和从CF删除你站点的信息。</p></li></ul><h1 id="analytics面板"><a class="markdownIt-Anchor" href="#analytics面板"></a> analytics面板</h1><p>这里的功能太多了，这就是Cloudflare的强大之处，我大概给大家看看有什么吧</p><h2 id="流量"><a class="markdownIt-Anchor" href="#流量"></a> 流量</h2><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153323.png"  alt=""></p><p>这里能看24小时内的访问数，以及别人访问的内容有多少被缓存了，有多少人访问了你未缓存的内容。下面的“带宽”也是这个道理</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153548.png"  alt=""></p><p>后面还有访问你网站的人，来自不同国家的排名， <strong>以及cloudflare在上个月到底帮你节省了多少流量（缓存的好处），处理了多少SSL访问以及帮你挨了多少次揍</strong></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153635.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153701.png"  alt=""></p><h2 id="安全性"><a class="markdownIt-Anchor" href="#安全性"></a> 安全性</h2><p>这里就是显示最近你被多少人揍过，因为最近没人揍我，这里也没有图给你们展示了。</p><p>这里还会显示来你网站的爬虫信息，这是个好东西，做站的我相信90%的人不会拒绝搜索引擎爬虫的来访的，这里能显示哪家的爬虫来了多少个。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153749.png"  alt=""></p><h2 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> 性能</h2><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421153847.png"  alt=""></p><p>这里没啥好讲的，概述里面显示了一下来访你网站的http版本，cloudflare帮你节省了多少的带宽以及过去的时间内，别人访问你网站主要访问的内容</p><p>上面的访问时间等优化的功能叫“Argo”这个是花钱的，咱们用不着。</p><h2 id="dns"><a class="markdownIt-Anchor" href="#dns"></a> DNS</h2><p>没啥好讲的，DNS的响应次数，没啥意义。</p><h2 id="wokers"><a class="markdownIt-Anchor" href="#wokers"></a> wokers</h2><p>这里是cloudflare workers的统计，和网页是分开的，咱们用不着。想玩玩cloudflare workers的可以去百度搜搜，玩法还是很多的。</p><h1 id="dns面板"><a class="markdownIt-Anchor" href="#dns面板"></a> DNS面板</h1><p>这里和一般的域名解析商没有区别，就是个解析域名的地方，推荐使用cloudflare partner接入。</p><h1 id="ssltls面板"><a class="markdownIt-Anchor" href="#ssltls面板"></a> SSL/TLS面板</h1><h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2><p>这个是比较重点的，HTTPS 是做站必不可少的因素之一，现在基本没有网站不开启https了，不知道什么是HTTPS的可以去百度，具体点说就是开了HTTPS货拖累网站加载速度，但是安全性会上升。并且有很多浏览器（比如谷歌）网站不是https的会提示不安全，甚至听说火狐下个版本将会屏蔽HTTP的内容，只显示HTTPS的内容。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421154123.png"  alt=""></p><p>四种加密方式依次为（加密就是HTTPS）</p><ul><li>不加密：你——cloudflare是HTTP，cloudclare——源IP也是HTTP</li><li>灵活：你——cloudflare是HTTPS，cloudflare——源IP HTTP，也有说是灵活的，可能走HTTPS，但是我没遇见过，<strong>这种模式是又安全又快的</strong></li><li>完全：你——cloudflare是HTTPS，cloudflare——源IP也是HTTPS</li><li>完全（严格）：你——cloudflare是HTTPS，cloudflare——源IP也是HTTPS，<strong>但是源IP上的证书必须是cloudflare认定的CA证书或者是cloudflare origin.ca证书，一般不用这个模式</strong></li></ul><p>下面也是显示过去24小时内，别人http客户端的形式，现在走tls1.2的还是挺多的，论速度还是比较新的tls1.3比较快。</p><h2 id="边缘证书"><a class="markdownIt-Anchor" href="#边缘证书"></a> 边缘证书</h2><p>这里首先显示的是你每个子域名，cloudflare给你发布的不同证书。</p><p>下面的几个功能比较重要</p><ul><li><p>始终使用 HTTPS：这个功能我始终是开着的，为了大家访问方便以及我网站的安全性，<strong>这个是让所有HTTP的访问跳转到HTTPS</strong></p></li><li><p>HTTP 严格传输安全 (HSTS)：“HTTP 严格传输安全（HSTS）功能使 Web 服务器告知浏览器绝不使用 HTTP 访问，在浏览器端自动将所有到该站点的 HTTP 访问替换为 HTTPS 访问”，<strong>这个功能使用比较麻烦，取消也麻烦，觉得麻烦的就别开启了。</strong></p></li><li><p>最低 TLS 版本：这个可以限制tls的版本，可以设置tls1.3访问，但是tls1.1和tls1.2的用户就没办法访问你网站了，所以我建议，<strong>保持默认的最低tls1.0</strong></p></li><li><p>随机加密：不建议开启，虽说用了比http本来更好的http/2，<strong>但是浏览器将继续在地址栏中显示 “http”，而不是 “https”。</strong></p></li><li><p>TLS 1.3：启用最新版本的 TLS 协议，以提高安全性和性能。<strong>建议开启</strong></p></li><li><p>自动 HTTPS 重写：自动 HTTPS 重写通过将可以使用 HTTPS 提供服务的网站上所有资源或链接的 “http” 更改为 “https” 来帮助修正混合内容。<strong>强烈建议开启</strong></p></li><li><p>最底下俩功能一个得花钱，另一个没必要。</p></li></ul><p>如果懒得看上面那一段话，并且你也是希望你源站开启https。那么直接设置成和我一样的就行了</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421155032.png"  alt=""></p><h2 id="源服务器"><a class="markdownIt-Anchor" href="#源服务器"></a> 源服务器</h2><p>没啥好看的，不用管。</p><h2 id="自定义主机名"><a class="markdownIt-Anchor" href="#自定义主机名"></a> 自定义主机名</h2><p>一般建站没啥用，而且还得花钱，不玩。</p><h1 id="防火墙"><a class="markdownIt-Anchor" href="#防火墙"></a> 防火墙</h1><p>这部分我没有开启，我也玩不明白，可以自建防火墙规则，设置部分地区的人能访问，可以CloudFlare 防火墙策略 危险IP设置验证码访问设置“”，或者“通过 CLOUDFLARE 的防火墙减少恶意流量和攻击”。这些都属于高级玩法了，<strong>如果有需要的可以去百度“cloudflare 防火墙”。可以看到很多关于防火墙的知识，这也是cloudflare的强大之处。</strong></p><h1 id="access"><a class="markdownIt-Anchor" href="#access"></a> Access</h1><p>在没有 VPN 的情况下使远程用户连接到企业应用程序。9 月 1 日前免费。</p><p>Access 通过向您已经使用的标识提供程序进行身份验证来保护内部资源。使用 Access，可以控制哪些用户和群组可以在没有 VPN 或者不对您的站点代码进行任何更改的情况下访问敏感资料。</p><h1 id="速度"><a class="markdownIt-Anchor" href="#速度"></a> 速度</h1><h2 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h2><p>就是看一下cloudflare帮你提高了多少速度，还有具体的时间。</p><h2 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化</h2><p>这个地方能免费用的功能不多，能免费开启的都开启吧。下面三个都是能开启的</p><ul><li>Auto Minify</li></ul><p>减小网站上源代码的文件大小。注意：清除缓存可使更改立即生效。<strong>JS CSS HTML三个优化都建议打开</strong></p><ul><li>Brotli</li></ul><p>应用 Brotli 压缩，加快访问者的 HTTPS 流量的页面加载时间。<strong>建议打开</strong></p><ul><li>Rocket Loader™</li></ul><p>缩短包含 JavaScript 的页面的绘制时间。<strong>不！不建议打开</strong></p><ul><li>AMP 真实 URL：<strong>不建议打开</strong></li></ul><p>这部分还有个收费的Railgun，有钱的话可以去看看，网页加速效果挺明显的</p><h2 id="browser-insights"><a class="markdownIt-Anchor" href="#browser-insights"></a> Browser Insights</h2><p>从用户角度量测网站效能的工具，帮助开发者了解网页变慢的地方、时机以及原因。</p><p>我的也是刚才开启的，没有图，所以从网上找了几张。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421155607.png"  alt=""></p><h1 id="缓存"><a class="markdownIt-Anchor" href="#缓存"></a> 缓存</h1><p>这里好多功能收费，有几个值得开启的功能我给大家看一下</p><ul><li><p>清除缓存：这里可以清除缓存，你网站有变动的时候可以清除一下缓存，重新缓存</p></li><li><p>缓存级别：默认的标准就行</p></li><li><p>浏览器缓存 TTL：随便，我个人建议是几小时</p></li><li><p>Always Online™：如果你设置自定义缓存了，我比较建议开启，并且我也建议开启自定义缓存把除了动态页面（后台，在线演示等）的内容全部缓存</p></li><li><p>开发模式：和首页概览的开发者模式是一样的</p></li></ul><h1 id="workers"><a class="markdownIt-Anchor" href="#workers"></a> workers</h1><p>在全球数以百计的 Cloudflare 数据中心中运行 JavaScript Service Workers。修改站点的 HTTP 请求和响应，发出并行请求或从边缘生成响应。俺玩不明白，路由？还是cf 的另一个worker功能？ 因为名字和cf 的另一个workers一样,网上的教程也基本没有，如果站点不是面向全球用户的，那么这个功能应该用不到</p><h1 id="页面规则"><a class="markdownIt-Anchor" href="#页面规则"></a> 页面规则</h1><p>页面规则用于控制针对给定的 URL 触发哪些 Cloudflare 设置。针对每个 URL 仅触发一个页面规则，因此，如果您按照优先级顺序对页面规则进行排序，则这非常有用，请尽可能将 URL 模式设置得具体些。</p><p>能有效改善网而言加载速度，还能有效的防止CC攻击</p><h1 id="网络"><a class="markdownIt-Anchor" href="#网络"></a> 网络</h1><p>这里能开的尽量都开一下</p><ul><li><p>HTTP/2：加快页面速度，<strong>建议开启</strong></p></li><li><p>HTTP/3（使用 QUIC）：使用 QUIC 加速 HTTP 请求，QUIC 提供比 TCP 和 TLS 更高的加密和性能 <strong>建议开启</strong></p></li><li><p>0-RTT 连接恢复：提高之前已连接到您网站的客户端的性能 不了解怎么个原理，<strong>建议开启</strong></p></li><li><p>IPv6 兼容性：<strong>建议开启</strong></p></li><li><p>WebSocket：允许与您的源服务器建立 WebSocket 连接 <strong>建议开启</strong></p></li><li><p>洋葱路由：洋葱路由允许通过 Cloudflare 的洋葱服务而不是退出节点路由来自 Tor 网络上合法用户的流量，从而改善用户的隐私并实现更细化的保护。 <strong>建议开启</strong></p></li><li><p>IP 地理位置：包含访问者位置的国家/地区代码和所有发送到您网站的请求。 <strong>建议开启</strong></p></li><li><p>后面还有俩收费的功能，没钱没钱。</p></li></ul><h1 id="流量-2"><a class="markdownIt-Anchor" href="#流量-2"></a> 流量</h1><p>这一栏都是收费的，溜了溜了，没钱。</p><h1 id="stream"><a class="markdownIt-Anchor" href="#stream"></a> Stream</h1><p>这一栏也是收费的，溜了溜了。</p><h1 id="自定义页面"><a class="markdownIt-Anchor" href="#自定义页面"></a> 自定义页面</h1><p>这一栏也是收费的。。。。。</p><h1 id="apps"><a class="markdownIt-Anchor" href="#apps"></a> apps</h1><p>这里的程序我没用过，但是听说有很多有用的，比如cf默认支持5个端口，有些应用程序能修改端口的，没见过几个玩cf的应用程序的。</p><h1 id="scrape-shield"><a class="markdownIt-Anchor" href="#scrape-shield"></a> Scrape Shield</h1><p>保护站点上的内容</p><ul><li>电子邮件地址混淆技术</li></ul><p>在您的网站上显示经过模糊处理的电子邮件地址，以防止机自动程序和垃圾邮件制造者获取该地址，而对于人类访问者，则不会对地址进行任何可见更改。<strong>建议开启</strong></p><ul><li>服务器端排除</li></ul><p>自动隐藏特定内容以防声誉不好的访问者查看，<strong>建议开启</strong></p><ul><li>Hotlink 保护</li></ul><p>防止站外链接指向您的图像。<strong>防盗链，建议开启</strong></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Cloudflare面板使用教程
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Cloudflare" scheme="https://gyh.im/tags/Cloudflare/"/>
    
      <category term="CDN" scheme="https://gyh.im/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>Github_Action自动构建Hexo实现Coding和Github双部署</title>
    <link href="https://gyh.im/posts/9d3b758e/"/>
    <id>https://gyh.im/posts/9d3b758e/</id>
    <published>2020-04-21T04:33:06.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>以前使用过Coding_CI部署Hexo博客，但是由于我的博客源代码是在Github，使用Coding_CI经常拉取源码失败。所以今天再折腾下使用Github_Action来自动构建Hexo博客</p><a href="/posts/51df657a/" title="基于Coding-CI实现Hexo的持续集成与Github和Coding的同步部署">基于Coding-CI实现Hexo的持续集成与Github和Coding的同步部署</a><div class="note info"><p>Hexo源代码仓库(私有): <a href="https://github.com/imgyh/hexo.git" target="_blank" rel="noopener">https://github.com/imgyh/hexo.git</a><br>Github_Page: <a href="https://github.com/imgyh/imgyh.github.io.git" target="_blank" rel="noopener">https://github.com/imgyh/imgyh.github.io.git</a><br>Coding_Page: <a href="https://e.coding.net/guoyuanhong/hexo/hexo.git" target="_blank" rel="noopener">https://e.coding.net/guoyuanhong/hexo/hexo.git</a></p></div><h1 id="api申请"><a class="markdownIt-Anchor" href="#api申请"></a> API申请</h1><h2 id="coding"><a class="markdownIt-Anchor" href="#coding"></a> Coding</h2><p>在coding的个人设置中，找到访问令牌，并创建它<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174003.png"  alt=""></p><p>点击创建访问令牌，描述可以随便填写，勾选<code>project:depot</code>的复选框即可。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174219.png"  alt=""></p><p>密钥只显示一次，请将获取到的密钥复制保存下来，并记录用户名。</p><h2 id="github"><a class="markdownIt-Anchor" href="#github"></a> Github</h2><p>和coding类似，在<code>Settings-&gt;Developer settings-&gt;Personal access tokens</code>创建<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">github访问令牌</a></p><p>点击创建令牌<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174649.png"  alt=""></p><p>名称随意，勾选<code>reop</code>复选框<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221175002.png"  alt=""></p><p>密钥只显示一次，请将获取到的密钥复制保存下来。</p><h1 id="api-密钥添加"><a class="markdownIt-Anchor" href="#api-密钥添加"></a> API 密钥添加</h1><p>配置仓库私钥，hexo私有仓库的 <code>Settings –&gt; Secrets</code> 里添加私钥<code>Secrets</code>，以下面名称命名，输入对应的值</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">token_CodingAPI</span></span><br><span class="line"><span class="attribute">token_GithubAPI</span></span><br><span class="line"><span class="attribute">Username_Coding</span></span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200421124607.png"  alt=""></p><h1 id="配置github-actions"><a class="markdownIt-Anchor" href="#配置github-actions"></a> 配置GitHub Actions</h1><p>GitHub Actions 有一些自己的术语。</p><ul><li>workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。</li><li>job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</li><li>step（步骤）：每个 job 由多个 step 构成，一步步完成。</li><li>action （动作）：每个 step 可以依次执行一个或多个命令（action）。</li></ul><p>在hexo仓库的Actions选项卡下点击新建workflow，名称默认或者自定义修改，编写如下配置。</p><div class="note info"><p>注意修改下面的配置成自己的信息。修改完成后，会生成 <code>.github/workflows/main.yml</code>, 你需要在本地<code>git pull</code>一下，把这个文件拉去下来。</p></div><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># workflow name</span></span><br><span class="line"><span class="attr">name</span>: <span class="string">CI Hexo Blog Deploy LTS</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># master branch on push, auto run</span></span><br><span class="line"><span class="attr">on</span>: <span class="string"></span></span><br><span class="line">  <span class="attr">push</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">branches</span>:<span class="string"></span></span><br><span class="line">      <span class="meta">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs</span>:<span class="string"></span></span><br><span class="line">  <span class="meta">Deploy-Pages</span>: <span class="string"></span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">Deploy Hexo Public To Pages</span></span><br><span class="line">    <span class="meta">runs-on</span>: <span class="string">ubuntu-latest </span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">steps</span>:<span class="string"></span></span><br><span class="line"><span class="comment">    # check it to your workflow can access it</span></span><br><span class="line"><span class="comment">    # from: https://github.com/actions/checkout</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Checkout Repository master branch</span></span><br><span class="line">      <span class="attr">uses</span>: <span class="string">actions/checkout@master </span></span><br><span class="line">      </span><br><span class="line"><span class="comment">    # from: https://github.com/actions/setup-node  </span></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Node.js 10.x </span></span><br><span class="line">      <span class="attr">uses</span>: <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with</span>:<span class="string"></span></span><br><span class="line">        <span class="meta">node-version</span>: <span class="string">"10.x"</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Git Infomation</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">| </span></span><br><span class="line">        <span class="attr">git</span> <span class="string">config --global user.name '用户名' </span></span><br><span class="line">        <span class="attr">git</span> <span class="string">config --global user.email '邮箱'  </span></span><br><span class="line"> </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Get Latest Commit Message </span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">log --pretty=format:"%s from Github Actions at `date +"%Y-%m-%d %H:%M:%S"`" --date=short -n 1  &gt; commit-message.log</span></span><br><span class="line">        </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Setup Hexo Dependencies</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">npm</span> <span class="string">install hexo-cli -g</span></span><br><span class="line">        <span class="attr">npm</span> <span class="string">install</span></span><br><span class="line">        </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Generate public files</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="attr">hexo</span> <span class="string">generate </span></span><br><span class="line">        </span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Deploy To Github Pages </span></span><br><span class="line">      <span class="attr">env</span>:<span class="string"></span></span><br><span class="line">        <span class="attr">Github_Pages</span>: <span class="string">github.com/用户名/用户名.github.io</span></span><br><span class="line">        <span class="attr">Github_Token</span>: <span class="string">$&#123;&#123; secrets.token_GithubAPI &#125;&#125;</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|  </span></span><br><span class="line">        <span class="attr">git</span> <span class="string">clone https://$&#123;Github_Pages&#125; .github_pages</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">.github_pages</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">checkout master</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">../</span></span><br><span class="line">        <span class="attr">mv</span> <span class="string">.github_pages/.git/ ./public/</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">./public/</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">add .</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">commit -F ../commit-message.log</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">push --force --quiet "https://$&#123;Github_Token&#125;@$&#123;Github_Pages&#125;" master:master</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">-</span> <span class="string">name: Deploy To Coding Pages </span></span><br><span class="line">      <span class="attr">env</span>:<span class="string"></span></span><br><span class="line">        <span class="attr">Coding_Pages</span>: <span class="string">e.coding.net/用户名/项目名/仓库名.git</span></span><br><span class="line">        <span class="attr">Coding_Token</span>: <span class="string">$&#123;&#123; secrets.token_CodingAPI &#125;&#125;</span></span><br><span class="line">        <span class="attr">Coding_Username</span>: <span class="string">$&#123;&#123; secrets.Username_Coding &#125;&#125;</span></span><br><span class="line">      <span class="attr">run</span>: <span class="string">|</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">clone https://$&#123;Coding_Username&#125;:$&#123;Coding_Token&#125;@$&#123;Coding_Pages&#125; .coding_pages</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">.coding_pages</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">checkout master</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">../</span></span><br><span class="line">        <span class="attr">rm</span> <span class="string">-r ./public/.git/</span></span><br><span class="line">        <span class="attr">mv</span> <span class="string">.coding_pages/.git/ ./public/</span></span><br><span class="line">        <span class="attr">cd</span> <span class="string">./public/</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">add .</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">commit -F ../commit-message.log</span></span><br><span class="line">        <span class="attr">git</span> <span class="string">push --force --quiet "https://$&#123;Coding_Username&#125;:$&#123;Coding_Token&#125;@$&#123;Coding_Pages&#125;" master:master</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Github_Action自动构建Hexo实现Coding和Github双部署
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Rclone挂载googledrive</title>
    <link href="https://gyh.im/posts/e4b3ef62/"/>
    <id>https://gyh.im/posts/e4b3ef62/</id>
    <published>2020-04-19T08:03:00.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><p>先登录<code>VPS</code>,再安装<code>Rclone</code>，使用命令：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">https:</span><span class="comment">//rclone.org/install.sh | bash</span></span><br></pre></td></tr></table></figure><p>开始配置，使用命令：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone <span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>会出现以下信息：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">n) New remote</span><br><span class="line">s) <span class="builtin-name">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n/s/q&gt; n</span><br><span class="line">name&gt; googledrive  #配置名称，随便填</span><br><span class="line">Type of storage <span class="keyword">to</span> configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> your own value</span><br><span class="line"> 1 / 1Fichier</span><br><span class="line">   \ <span class="string">"fichier"</span></span><br><span class="line"> 2 / Alias <span class="keyword">for</span> an existing remote</span><br><span class="line">   \ <span class="string">"alias"</span></span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ <span class="string">"amazon cloud drive"</span></span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ <span class="string">"s3"</span></span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ <span class="string">"b2"</span></span><br><span class="line"> 6 / Box</span><br><span class="line">   \ <span class="string">"box"</span></span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ <span class="string">"cache"</span></span><br><span class="line"> 8 / Dropbox</span><br><span class="line">   \ <span class="string">"dropbox"</span></span><br><span class="line"> 9 / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">"crypt"</span></span><br><span class="line">10 / FTP Connection</span><br><span class="line">   \ <span class="string">"ftp"</span></span><br><span class="line">11 / Google Cloud Storage (this is <span class="keyword">not</span> Google Drive)</span><br><span class="line">   \ <span class="string">"google cloud storage"</span></span><br><span class="line">12 / Google Drive</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line">13 / Google Photos</span><br><span class="line">   \ <span class="string">"google photos"</span></span><br><span class="line">14 / Hubic</span><br><span class="line">   \ <span class="string">"hubic"</span></span><br><span class="line">15 / JottaCloud</span><br><span class="line">   \ <span class="string">"jottacloud"</span></span><br><span class="line">16 / Koofr</span><br><span class="line">   \ <span class="string">"koofr"</span></span><br><span class="line">17 / Local Disk</span><br><span class="line">   \ <span class="string">"local"</span></span><br><span class="line">18 / Mega</span><br><span class="line">   \ <span class="string">"mega"</span></span><br><span class="line">19 / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">"azureblob"</span></span><br><span class="line">20 / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line">21 / OpenDrive</span><br><span class="line">   \ <span class="string">"opendrive"</span></span><br><span class="line">22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">"swift"</span></span><br><span class="line">23 / Pcloud</span><br><span class="line">   \ <span class="string">"pcloud"</span></span><br><span class="line">24 / Put.io</span><br><span class="line">   \ <span class="string">"putio"</span></span><br><span class="line">25 / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">"qingstor"</span></span><br><span class="line">26 / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">"sftp"</span></span><br><span class="line">27 / Union merges the contents of several remotes</span><br><span class="line">   \ <span class="string">"union"</span></span><br><span class="line">28 / Webdav</span><br><span class="line">   \ <span class="string">"webdav"</span></span><br><span class="line">29 / Yandex Disk</span><br><span class="line">   \ <span class="string">"yandex"</span></span><br><span class="line">30 / http Connection</span><br><span class="line">   \ <span class="string">"http"</span></span><br><span class="line">31 / premiumize.me</span><br><span class="line">   \ <span class="string">"premiumizeme"</span></span><br><span class="line">Storage&gt; 12  #选择12，Google Drive</span><br><span class="line">client_id&gt; 850428  #填上你的Google Drive客户端ID</span><br><span class="line">client_secret&gt; D72gPc  #填上你的Google Drive客户端密匙</span><br><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> your own value</span><br><span class="line"> 1 / Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line"> 2 / Read-only access <span class="keyword">to</span> file metadata <span class="keyword">and</span> file contents.</span><br><span class="line">   \ <span class="string">"drive.readonly"</span></span><br><span class="line">   / Access <span class="keyword">to</span> files created by rclone only.</span><br><span class="line"> 3 | These are visible <span class="keyword">in</span> the drive website.</span><br><span class="line">   | File authorization is revoked when the<span class="built_in"> user </span>deauthorizes the app.</span><br><span class="line">   \ <span class="string">"drive.file"</span></span><br><span class="line">   / Allows read <span class="keyword">and</span> write access <span class="keyword">to</span> the Application Data folder.</span><br><span class="line"> 4 | This is <span class="keyword">not</span> visible <span class="keyword">in</span> the drive website.</span><br><span class="line">   \ <span class="string">"drive.appfolder"</span></span><br><span class="line">   / Allows read-only access <span class="keyword">to</span> file metadata but</span><br><span class="line"> 5 | does <span class="keyword">not</span> allow any access <span class="keyword">to</span> read <span class="keyword">or</span> download file content.</span><br><span class="line">   \ <span class="string">"drive.metadata.readonly"</span></span><br><span class="line">scope&gt; 1 </span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line">Fill <span class="keyword">in</span> <span class="keyword">to</span> access <span class="string">"Computers"</span> folders. (see docs).</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">root_folder_id&gt; #回车</span><br><span class="line">Service Account Credentials JSON file path </span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only <span class="keyword">if</span> you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">service_account_file&gt; #回车</span><br><span class="line"><span class="builtin-name">Edit</span> advanced config? (y/n)</span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; n  #输入n</span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> <span class="keyword">not</span> sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote <span class="keyword">or</span> headless machine</span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; n  #输入n</span><br><span class="line"><span class="keyword">If</span> your browser doesn<span class="string">'t open automatically go to the following link: https://accounts.google.com/o/  #打开该地址获取code</span></span><br><span class="line"><span class="string">Log in and authorize rclone for access</span></span><br><span class="line"><span class="string">Enter verification code&gt;hjdd   #输入你获取到的code</span></span><br><span class="line"><span class="string">Configure this as a team drive?</span></span><br><span class="line"><span class="string">y) Yes</span></span><br><span class="line"><span class="string">n) No</span></span><br><span class="line"><span class="string">y/n&gt; n  #如果要挂载团队盘选y，个人盘选n</span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">[Rats]</span></span><br><span class="line"><span class="string">type = drive</span></span><br><span class="line"><span class="string">client_id = 85042871</span></span><br><span class="line"><span class="string">client_secret = D72gPc</span></span><br><span class="line"><span class="string">scope = drive</span></span><br><span class="line"><span class="string">token = &#123;"access_token":"y902Z"&#125;  </span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">y) Yes this is OK</span></span><br><span class="line"><span class="string">e) Edit this remote</span></span><br><span class="line"><span class="string">d) Delete this remote</span></span><br><span class="line"><span class="string">y/e/d&gt; y  #输入y</span></span><br><span class="line"><span class="string">Current remotes:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name                 Type</span></span><br><span class="line"><span class="string">====                 ====</span></span><br><span class="line"><span class="string">googledrive                 drive</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">e) Edit existing remote</span></span><br><span class="line"><span class="string">n) New remote</span></span><br><span class="line"><span class="string">d) Delete remote</span></span><br><span class="line"><span class="string">r) Rename remote</span></span><br><span class="line"><span class="string">c) Copy remote</span></span><br><span class="line"><span class="string">s) Set configuration password</span></span><br><span class="line"><span class="string">q) Quit config</span></span><br><span class="line"><span class="string">e/n/d/r/c/s/q&gt; q  #输入q保存退出</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Rclone挂载googledrive
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Rclone" scheme="https://gyh.im/tags/Rclone/"/>
    
      <category term="GoogleDrive" scheme="https://gyh.im/tags/GoogleDrive/"/>
    
  </entry>
  
  <entry>
    <title>cloudflare自选节点</title>
    <link href="https://gyh.im/posts/f019efb0/"/>
    <id>https://gyh.im/posts/f019efb0/</id>
    <published>2020-04-19T05:39:22.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前期准备"><a class="markdownIt-Anchor" href="#前期准备"></a> 前期准备</h1><ul><li><p><code>cloudflare</code>是一家<code>CDN</code>公司，可以为网站提供<code>CDN</code>服务，但是免费的套餐的节点速度不是很好，所以可以通过自选节点来解决。<code>cloudflare</code>有两种方式，一种是通过dns接入，这种方式完全把域名交给cloudflare了。另一方式是通过<code>cloudflare Partners</code>的方式，这种方式可以不用dns接入。除了网站可以使用他家的<code>CDN</code>服务外，好多人都用来加速<code>v2ray</code>。</p></li><li><p><code>v2ray</code>搭建可参考：</p></li></ul><a href="/posts/8eabdcaf/" title="史上最稳科学上网姿势-宝塔-v2-ws-tls-cdn">史上最稳科学上网姿势-宝塔-v2-ws-tls-cdn</a> <a href="/posts/9585444e/" title="vps测速及科学上网常用脚本">vps测速及科学上网常用脚本</a><ul><li><code>cloudflare partener</code> 平台，推荐使用大佬的<a href="https://cdn.moeelf.com/" target="_blank" rel="noopener">萌精灵</a></li></ul><h1 id="部署方法"><a class="markdownIt-Anchor" href="#部署方法"></a> 部署方法</h1><ul><li>登录<a href="https://cdn.moeelf.com/" target="_blank" rel="noopener">萌精灵</a>，使用<code>cloudflare</code>账号,点击添加域名</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419135648.png"  alt=""></p><ul><li>添加解析记录</li></ul><p>添加解析记录到你的源ip</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419140034.png"  alt=""></p><ul><li>自选ip</li></ul><p>记录下面的主机名<code>www.imgyh.cf</code> 和 <code>CNAME</code> <code>www.imgyh.cf.cdn.cloudflare.net</code></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419140218.png"  alt=""></p><p>回到你的域名<code>dns</code>解析提供商，我使用的<code>dnspod</code>,这里的解析提供商需要可以分线路解析的</p><p>添加 <code>www</code>记录到 <code>www.imgyh.cf.cdn.cloudflare.net</code> ,记录类型选择<code>CNAME</code>,解析线路选择<code>默认</code>或者<code>境外</code><br>再添加一个<code>www</code>记录到<code>自选ip</code>我这边速度较好的是<code>1.0.0.1</code>,记录类型选择 <code>A</code>,解析线路选择<code>境内</code></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419141049.png"  alt=""></p><p>这样你在境内访问<code>www.imgyh.cf</code>就会解析到自选的ip上，在境外就会访问默认提供的节点</p><h1 id="可以自选的ip节点"><a class="markdownIt-Anchor" href="#可以自选的ip节点"></a> 可以自选的IP节点</h1><ul><li>官方列表：CloudFlare公开的节点</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//www.cloudflare.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/ips/</span><br></pre></td></tr></table></figure><ul><li>CFIP白名单</li></ul><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">173.245.48.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">103.21.244.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.22.200.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.31.4.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">141.101.64.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">108.162.192.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">190.93.240.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">188.114.96.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">197.234.240.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">198.41.128.0</span>/<span class="number">17</span></span><br><span class="line"><span class="number">162.158.0.0</span>/<span class="number">15</span></span><br><span class="line"><span class="number">104.16.0.0</span>/<span class="number">12</span></span><br><span class="line"><span class="number">172.64.0.0</span>/<span class="number">13</span></span><br><span class="line"><span class="number">131.0.72.0</span>/<span class="number">22</span></span><br></pre></td></tr></table></figure><ul><li>百度云加速与Cloudflare合作节点</li></ul><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">162.159.211.4</span>-<span class="number">103</span></span><br><span class="line"><span class="number">103.21.244.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.22.200.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.31.4.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">104.16.0.0</span>/<span class="number">12</span></span><br><span class="line"><span class="number">108.162.192.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">131.0.72.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">141.101.64.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">162.158.0.0</span>/<span class="number">15</span></span><br><span class="line"><span class="number">172.64.0.0</span>/<span class="number">13</span></span><br><span class="line"><span class="number">173.245.48.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">188.114.96.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">190.93.240.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">197.234.240.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">198.41.128.0</span>/<span class="number">17</span></span><br></pre></td></tr></table></figure><ul><li>Cloudflare节点推荐</li></ul><p>[萌精灵推荐]<a href="http://www.moeelf.com/archives/10.html" target="_blank" rel="noopener">www.moeelf.com/archives/10.html</a></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CloudFlare 百度云合作 ip：</span><br><span class="line"></span><br><span class="line"><span class="number">162.159</span><span class="number">.208</span><span class="number">.4</span><span class="number">-162.159</span><span class="number">.208</span><span class="number">.103</span></span><br><span class="line"></span><br><span class="line"><span class="number">162.159</span><span class="number">.209</span><span class="number">.4</span><span class="number">-162.159</span><span class="number">.209</span><span class="number">.103</span></span><br><span class="line"></span><br><span class="line"><span class="number">162.159</span><span class="number">.210</span><span class="number">.4</span><span class="number">-162.159</span><span class="number">.210</span><span class="number">.103</span></span><br><span class="line"></span><br><span class="line"><span class="number">162.159</span><span class="number">.211</span><span class="number">.4</span><span class="number">-162.159</span><span class="number">.211</span><span class="number">.103</span></span><br><span class="line"></span><br><span class="line">各线路推荐列表：</span><br><span class="line">电信：推荐走圣何塞，例：<span class="number">104.16</span><span class="number">.160</span>.* 或者上面的百度云合作 ip。</span><br><span class="line">移动：推荐走移动香港，例：<span class="number">172.64</span><span class="number">.32</span>.*、<span class="number">141.101</span><span class="number">.115</span>.* 或者 <span class="number">104.23</span><span class="number">.240</span><span class="number">.0</span><span class="number">-104.23</span><span class="number">.243</span><span class="number">.254</span>。</span><br><span class="line">联通：没发布什么好线路，可走圣何塞。例：<span class="number">104.16</span><span class="number">.160</span>.* 或者 <span class="number">104.23</span><span class="number">.240</span><span class="number">.0</span><span class="number">-104.23</span><span class="number">.243</span><span class="number">.254</span>。也可以试一下走亚特兰大 <span class="number">108.162</span><span class="number">.236</span>.*（日前不可用。） 。</span><br></pre></td></tr></table></figure><ul><li>Qi推荐</li></ul><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">108.162.236.1</span>/<span class="number">24</span> 联通 走美国</span><br><span class="line"><span class="number">172.64.32.1</span>/<span class="number">24</span> 移动 走香港</span><br><span class="line"><span class="number">104.16.160.1</span>/<span class="number">24</span> 电信 走美国洛杉矶</span><br><span class="line">———</span><br><span class="line"><span class="number">172.64.0.0</span>/<span class="number">24</span> 电信 美国旧金山</span><br><span class="line"><span class="number">104.20.157.0</span>/<span class="number">24</span> 联通 走日本</span><br><span class="line"><span class="number">104.28.14.0</span>/<span class="number">24</span> 移动 走新加坡</span><br><span class="line">（联通移动推荐节点）</span><br><span class="line"><span class="number">104.23.240.0</span>-<span class="number">104</span>.<span class="number">23</span>.<span class="number">243</span>.<span class="number">254</span></span><br><span class="line">（电信推荐百度云合作ip）</span><br><span class="line"><span class="number">162.159.208.4</span>-<span class="number">162</span>.<span class="number">159</span>.<span class="number">208</span>.<span class="number">103</span></span><br><span class="line"><span class="number">162.159.209.4</span>-<span class="number">162</span>.<span class="number">159</span>.<span class="number">209</span>.<span class="number">103</span></span><br><span class="line"><span class="number">162.159.210.4</span>-<span class="number">162</span>.<span class="number">159</span>.<span class="number">210</span>.<span class="number">103</span></span><br><span class="line"><span class="number">162.159.211.4</span>-<span class="number">162</span>.<span class="number">159</span>.<span class="number">211</span>.<span class="number">103</span></span><br></pre></td></tr></table></figure><ul><li>适合电信的节点</li></ul><p>104.23.240.*<br>走欧洲各国出口 英国德国荷兰等 延迟比美国高一些 适合源站在欧洲的网站<br>172.64.32.*<br>虽然去程走新加坡，但是回程线路的绕路的，实际效果不好，不推荐<br>104.16.160.*<br>圣何塞的线路，比洛杉矶要快一点，推荐<br>108.162.236.*<br>亚特兰大线路，延迟稳定，但是延迟较高</p><ul><li>适合移动的节点</li></ul><p>162.158.133.* 走的丹麦，这一段ip只有部分能用，可以自己试一下。绕美国。<br>198.41.214.*<br>198.41.212.*<br>198.41.208.*<br>198.41.209.*<br>172.64.32.*<br>141.101.115.*<br>移动走香港的IP段有很多，以上并不是全部。CF移动走香港的分直连和走ntt的效果都挺不错的，不过部分地区晚上还是会丢包。<br>172.64.0. 这是走圣何塞的，一般用香港的就行<br>172.64.16.* 欧洲线路.绕</p><p>1.0.0.1效果较好</p><ul><li>电信部分</li></ul><p>大多数省直接使用1.0.0.0即可，延迟低，丢包少，<br>少部分还是需要换ip</p><p>新加坡<br>172.64.32.0-172.64.47.254</p><p>移动部分<br>新加坡<br>104.18.48.0-104.18.63.255<br>104.24.112.0-104.24.127.255<br>104.27.128.0-104.27.143.255<br>104.28.0.0-104.28.15.255</p><ul><li>移动部分</li></ul><p>圣何塞 <a href="http://cogentco.com" target="_blank" rel="noopener">cogentco.com</a><br>104.28.16.0-31.255<br>104.27.144.0-243.254<br>104.23.240.0-243.254</p><p><a href="http://xn--cloudflare1-100g-nx30b0188b.hkix.net" target="_blank" rel="noopener">香港cloudflare1-100g.hkix.net</a><br>大部分都是这个通道<br>1.0.0.0-254<br>1.1.1.0-254<br>66.235.200.0-254 <a href="http://xn--IPOWER-vy7i140r3ua.COM" target="_blank" rel="noopener">此段为IPOWER.COM</a> endurance.com专用，<a href="http://xn--IPOWER-or3jk9ios3dli4c5wrtpobqe.COM" target="_blank" rel="noopener">有可能被跳转到IPOWER.COM</a> endurance.com页面<br>104.16.80.0-95.255<br>104.16.175.255-104.16.191.255</p><p>香港直连<br>23.227.63.0-254 此段为shopify.com专用，有可能被跳转到shopify.com页面<br>104.16.0.0-79.255<br>104.16.96.0-175.254<br>104.16.192.0-207.255</p><p>新加坡 <a href="http://ae-0.cloudflare.sngpsi07.sg.bb.gin.ntt.net" target="_blank" rel="noopener">ae-0.cloudflare.sngpsi07.sg.bb.gin.ntt.net</a><br>都从香港ntt转发<br>104.28.0.0-15.255</p><ul><li>联通部分</li></ul><p>伦敦 <a href="http://cloudflare-gw.cr10-lon1.ip4.gtt.net" target="_blank" rel="noopener">cloudflare-gw.cr10-lon1.ip4.gtt.net</a><br>172.64.19.16</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      cloudflare自选节点
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Cloudflare" scheme="https://gyh.im/tags/Cloudflare/"/>
    
      <category term="CDN" scheme="https://gyh.im/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>cloudflare搭建google云端硬盘索引</title>
    <link href="https://gyh.im/posts/1225a85c/"/>
    <id>https://gyh.im/posts/1225a85c/</id>
    <published>2020-04-16T13:57:07.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="goindex安装使用"><a class="markdownIt-Anchor" href="#goindex安装使用"></a> Goindex安装使用</h1><ul><li>项目： <a href="https://github.com/imgyh/goindex-backup" target="_blank" rel="noopener">https://github.com/imgyh/goindex-backup</a> <s><a href="https://github.com/donwa/goindex" target="_blank" rel="noopener">https://github.com/donwa/goindex</a></s></li><li>演示：<a href="https://index.gd.workers.dev/" target="_blank" rel="noopener">https://index.gd.workers.dev/</a></li><li>效果：<a href="https://gd.gyh.workers.dev/" target="_blank" rel="noopener">https://gd.gyh.workers.dev/</a></li><li>绑域名：<a href="https://gd.0941314.xyz/" target="_blank" rel="noopener">https://gd.0941314.xyz/</a></li></ul><h2 id="两种部署方式"><a class="markdownIt-Anchor" href="#两种部署方式"></a> 两种部署方式</h2><p>GoIndex支持两种安装部署方案：推荐第二种比较简单</p><p>安装部署方案1，此方案适合动手能力比较强，对安全性要求高的同学使用。</p><ol><li>在本地安装 rclone。</li><li>按照 <a href="https://rclone.org/drive/" target="_blank" rel="noopener">https://rclone.org/drive/</a> 流程进行授权。</li><li>执行 rclone config file 查看 rclone.conf 路径。找到root_folder_id和refresh_token记录下来。</li><li>下载 <a href="https://github.com/imgyh/goindex-backup" target="_blank" rel="noopener">https://github.com/imgyh/goindex-backup</a> <s><a href="https://github.com/donwa/goindex" target="_blank" rel="noopener">https://github.com/donwa/goindex</a></s> 中的 index.js 并填入 root 和 refresh_token</li><li>复制代码 到 CloudFlare 部署。</li></ol><p>安装部署方案2。作者不会记录<code>refresh_token</code>，但为避免纠纷，建议有条件的同学使用方案1进行部署</p><ol><li>访问：<a href="https://install.gd.workers.dev/" target="_blank" rel="noopener">https://install.gd.workers.dev/</a></li><li>授权认证后，生成部署代码。</li><li>复制代码 到 <code>CloudFlare</code> 部署。</li></ol><blockquote><p>由于goindex的作者删库了，所以复制的代码需要修改，可以使用我修改好的<code>index.js</code>。 <a href="https://github.com/imgyh/goindex-backup" target="_blank" rel="noopener">仓库地址</a></p></blockquote><p>点击你的硬盘，最后的<code>ID</code>就是所需要填写的<code>目录ID</code><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200416220930.png"  alt=""></p><h1 id="部署到cloudflare-wokers"><a class="markdownIt-Anchor" href="#部署到cloudflare-wokers"></a> 部署到cloudflare wokers</h1><p>首先登录<code>cloudflare</code>，官网→<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">传送门</a>，然后看到<code>Workers</code>入口。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419150725.png"  alt=""></p><p>接下来点击<code>Create a Worker</code>创建一个<code>Worker</code>。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419150854.png"  alt=""></p><p>把你之前获取的<code>Workers</code>代码粘贴进去，然后可以在左上角双击修改域名，再点击<code>Save and Deploy</code>即可。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419151031.png"  alt=""></p><p>最后打开分配的子域名即可，此后修改配置可以自行修改Workers代码</p><h1 id="api部署"><a class="markdownIt-Anchor" href="#api部署"></a> API部署</h1><p>这里也可以使用自己的<code>API</code>部署，好处就是安全点，高峰期也不容易爆炸，当然安装会麻烦点，如果不经常使用的话，还是建议用上面的方法快速部署。</p><p>1、获取GDrive客户端</p><p>先启用<code>Google Drive API</code>，启用地址：<a href="https://console.developers.google.com/apis/api/drive.googleapis.com/overview" target="_blank" rel="noopener">点击进入</a>，注意这里使用个人账号操作。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419151401.png"  alt=""></p><p>再创建一个<code>OAuth client ID</code>，创建地址：<a href="https://console.developers.google.com/apis/credentials/oauthclient" target="_blank" rel="noopener">点击进入</a>。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>GoIndex</code>。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419153237.png"  alt=""></p><p>然后你会获得自己的客户端ID和客户端密钥，再复制下来。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200419155819.png"  alt=""></p><p>2、获取refresh_token</p><p>这里使用<code>Rclone</code>来获取<code>refresh_token</code>，先登录<code>VPS</code>,再安装<code>Rclone</code>，使用命令：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">https:</span><span class="comment">//rclone.org/install.sh | bash</span></span><br></pre></td></tr></table></figure><p>开始配置，使用命令：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone <span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>会出现以下信息：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">n) New remote</span><br><span class="line">s) <span class="builtin-name">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n/s/q&gt; n</span><br><span class="line">name&gt; Rats  #配置名称，随便填</span><br><span class="line">Type of storage <span class="keyword">to</span> configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> your own value</span><br><span class="line"> 1 / 1Fichier</span><br><span class="line">   \ <span class="string">"fichier"</span></span><br><span class="line"> 2 / Alias <span class="keyword">for</span> an existing remote</span><br><span class="line">   \ <span class="string">"alias"</span></span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ <span class="string">"amazon cloud drive"</span></span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ <span class="string">"s3"</span></span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ <span class="string">"b2"</span></span><br><span class="line"> 6 / Box</span><br><span class="line">   \ <span class="string">"box"</span></span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ <span class="string">"cache"</span></span><br><span class="line"> 8 / Dropbox</span><br><span class="line">   \ <span class="string">"dropbox"</span></span><br><span class="line"> 9 / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">"crypt"</span></span><br><span class="line">10 / FTP Connection</span><br><span class="line">   \ <span class="string">"ftp"</span></span><br><span class="line">11 / Google Cloud Storage (this is <span class="keyword">not</span> Google Drive)</span><br><span class="line">   \ <span class="string">"google cloud storage"</span></span><br><span class="line">12 / Google Drive</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line">13 / Google Photos</span><br><span class="line">   \ <span class="string">"google photos"</span></span><br><span class="line">14 / Hubic</span><br><span class="line">   \ <span class="string">"hubic"</span></span><br><span class="line">15 / JottaCloud</span><br><span class="line">   \ <span class="string">"jottacloud"</span></span><br><span class="line">16 / Koofr</span><br><span class="line">   \ <span class="string">"koofr"</span></span><br><span class="line">17 / Local Disk</span><br><span class="line">   \ <span class="string">"local"</span></span><br><span class="line">18 / Mega</span><br><span class="line">   \ <span class="string">"mega"</span></span><br><span class="line">19 / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">"azureblob"</span></span><br><span class="line">20 / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line">21 / OpenDrive</span><br><span class="line">   \ <span class="string">"opendrive"</span></span><br><span class="line">22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">"swift"</span></span><br><span class="line">23 / Pcloud</span><br><span class="line">   \ <span class="string">"pcloud"</span></span><br><span class="line">24 / Put.io</span><br><span class="line">   \ <span class="string">"putio"</span></span><br><span class="line">25 / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">"qingstor"</span></span><br><span class="line">26 / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">"sftp"</span></span><br><span class="line">27 / Union merges the contents of several remotes</span><br><span class="line">   \ <span class="string">"union"</span></span><br><span class="line">28 / Webdav</span><br><span class="line">   \ <span class="string">"webdav"</span></span><br><span class="line">29 / Yandex Disk</span><br><span class="line">   \ <span class="string">"yandex"</span></span><br><span class="line">30 / http Connection</span><br><span class="line">   \ <span class="string">"http"</span></span><br><span class="line">31 / premiumize.me</span><br><span class="line">   \ <span class="string">"premiumizeme"</span></span><br><span class="line">Storage&gt; 12  #选择12，Google Drive</span><br><span class="line">client_id&gt; 850428  #填上你的Google Drive客户端ID</span><br><span class="line">client_secret&gt; D72gPc  #填上你的Google Drive客户端密匙</span><br><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> your own value</span><br><span class="line"> 1 / Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line"> 2 / Read-only access <span class="keyword">to</span> file metadata <span class="keyword">and</span> file contents.</span><br><span class="line">   \ <span class="string">"drive.readonly"</span></span><br><span class="line">   / Access <span class="keyword">to</span> files created by rclone only.</span><br><span class="line"> 3 | These are visible <span class="keyword">in</span> the drive website.</span><br><span class="line">   | File authorization is revoked when the<span class="built_in"> user </span>deauthorizes the app.</span><br><span class="line">   \ <span class="string">"drive.file"</span></span><br><span class="line">   / Allows read <span class="keyword">and</span> write access <span class="keyword">to</span> the Application Data folder.</span><br><span class="line"> 4 | This is <span class="keyword">not</span> visible <span class="keyword">in</span> the drive website.</span><br><span class="line">   \ <span class="string">"drive.appfolder"</span></span><br><span class="line">   / Allows read-only access <span class="keyword">to</span> file metadata but</span><br><span class="line"> 5 | does <span class="keyword">not</span> allow any access <span class="keyword">to</span> read <span class="keyword">or</span> download file content.</span><br><span class="line">   \ <span class="string">"drive.metadata.readonly"</span></span><br><span class="line">scope&gt; 1 </span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line">Fill <span class="keyword">in</span> <span class="keyword">to</span> access <span class="string">"Computers"</span> folders. (see docs).</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">root_folder_id&gt; #回车</span><br><span class="line">Service Account Credentials JSON file path </span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only <span class="keyword">if</span> you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">service_account_file&gt; #回车</span><br><span class="line"><span class="builtin-name">Edit</span> advanced config? (y/n)</span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; n  #输入n</span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> <span class="keyword">not</span> sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote <span class="keyword">or</span> headless machine</span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; n  #输入n</span><br><span class="line"><span class="keyword">If</span> your browser doesn<span class="string">'t open automatically go to the following link: https://accounts.google.com/o/  #打开该地址获取code</span></span><br><span class="line"><span class="string">Log in and authorize rclone for access</span></span><br><span class="line"><span class="string">Enter verification code&gt;hjdd   #输入你获取到的code</span></span><br><span class="line"><span class="string">Configure this as a team drive?</span></span><br><span class="line"><span class="string">y) Yes</span></span><br><span class="line"><span class="string">n) No</span></span><br><span class="line"><span class="string">y/n&gt; n  #输入n</span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">[Rats]</span></span><br><span class="line"><span class="string">type = drive</span></span><br><span class="line"><span class="string">client_id = 85042871</span></span><br><span class="line"><span class="string">client_secret = D72gPc</span></span><br><span class="line"><span class="string">scope = drive</span></span><br><span class="line"><span class="string">token = &#123;"access_token":"y902Z"&#125;  #记住里面的refresh_token参数</span></span><br><span class="line"><span class="string">--------------------</span></span><br><span class="line"><span class="string">y) Yes this is OK</span></span><br><span class="line"><span class="string">e) Edit this remote</span></span><br><span class="line"><span class="string">d) Delete this remote</span></span><br><span class="line"><span class="string">y/e/d&gt; y  #输入y</span></span><br><span class="line"><span class="string">Current remotes:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name                 Type</span></span><br><span class="line"><span class="string">====                 ====</span></span><br><span class="line"><span class="string">Rats                 drive</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">e) Edit existing remote</span></span><br><span class="line"><span class="string">n) New remote</span></span><br><span class="line"><span class="string">d) Delete remote</span></span><br><span class="line"><span class="string">r) Rename remote</span></span><br><span class="line"><span class="string">c) Copy remote</span></span><br><span class="line"><span class="string">s) Set configuration password</span></span><br><span class="line"><span class="string">q) Quit config</span></span><br><span class="line"><span class="string">e/n/d/r/c/s/q&gt; q  #输入q保存退出</span></span><br></pre></td></tr></table></figure><p>此时我们在配置过程中就获取到了<code>refresh_token</code>参数，如果忘了的可以查看配置文件。</p><p>不知道配置文件在哪的，可以使用命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone<span class="built_in"> config </span>file | grep rclone.conf</span><br></pre></td></tr></table></figure><p>3、修改Workers代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#填上自己的api客户端，密匙和获取到的<span class="built_in">ref</span>resh_token</span><br><span class="line">“client_id”：“<span class="number">20226481</span>”，</span><br><span class="line">“client_secret”：“X4Z3ca8”，</span><br><span class="line">“<span class="built_in">ref</span>resh_token”：“”，</span><br></pre></td></tr></table></figure><p>最后就可以部署<code>Workers</code>代码了，方法参考上面的快速部署。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      cloudflare搭建google云端硬盘索引
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Cloudflare" scheme="https://gyh.im/tags/Cloudflare/"/>
    
      <category term="Goindex" scheme="https://gyh.im/tags/Goindex/"/>
    
  </entry>
  
  <entry>
    <title>qBittorrent一键安装脚本</title>
    <link href="https://gyh.im/posts/6c9f7751/"/>
    <id>https://gyh.im/posts/6c9f7751/</id>
    <published>2020-04-16T13:01:21.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="centos安装脚本"><a class="markdownIt-Anchor" href="#centos安装脚本"></a> Centos安装脚本</h1><p>今天的这个一键安装脚本是安装的<code>4.1.1</code>版本，现在有更新版本的了，但我的vps配置较低，这又有现成脚本，所以就用这个脚本部署了</p><blockquote><p>脚本仅支持CentOS7，64位系统！！！请使用纯净的系统安装！！！请使用ROOT用户执行脚本！！！</p></blockquote><p>使用方法：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//lala.<span class="keyword">im</span>/static/script/qBittorrentCentOS7install.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> qBittorrentCentOS7install.<span class="keyword">sh</span></span><br><span class="line">./qBittorrentCentOS7install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>因为编译<code>libtorrent</code>的时候需要用到大量的内存，小于<code>2GB</code>的机器可能会因为内存不足导致进程被杀掉，所以在脚本内加了一个创建<code>swap</code>的功能。创建的swap文件保存在<code>/var</code>目录下，安装完成之后可以自己手动删除掉。</p><p>另外因为<code>libtorrent</code>编译需要比较长的时间，我加了一个设置编译时使用多个<code>CPU</code>线程的功能，根据你自己机器的<code>CPU</code>核心数来设置就行了，比如你是一个4核心的机器，在脚本内输入4，那么编译的速度会变快很多！</p><p>脚本会帮你安装如下软件：</p><ul><li>qBittorrent4.1.1</li><li>libtorrent1.1.9（<a href="https://github.com/arvidn/libtorrent/releases/%EF%BC%89" target="_blank" rel="noopener">https://github.com/arvidn/libtorrent/releases/）</a></li></ul><p>回显内容：</p><ul><li>qBittorrentWEB地址：你的机器公网IP+端口8080</li><li>WEB账号：admin</li><li>WEB密码：adminadmin</li></ul><p>管理命令：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">start qbittorrent</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">stop qbittorrent</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart qbittorrent</span></span><br></pre></td></tr></table></figure><h1 id="ubuntu安装教程"><a class="markdownIt-Anchor" href="#ubuntu安装教程"></a> Ubuntu安装教程</h1><ul><li>安装必要依赖</li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apt</span>-<span class="meta">get</span> install software-properties-<span class="meta">common</span> gcc make gpg</span><br></pre></td></tr></table></figure><ul><li>添加qBittorrent的源</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">add</span>-apt-repository <span class="keyword">pp</span><span class="variable">a:qbittorrent</span>-team/qbittorrent-stable</span><br></pre></td></tr></table></figure><ul><li>安装qBittorrent</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> install qbittorrent-nox</span><br></pre></td></tr></table></figure><ul><li>启动qBittorrent</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">qbittorrent-nox</span></span><br></pre></td></tr></table></figure><p>然后输入“y”同意条款，即可启动</p><p>但是有一个问题，如果断开了ssh连接，或者按了ctrl+c的话服务就会停止，所以要创建一个系统服务。</p><ul><li>创建服务文件</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>qbittorrent-nox.service</span><br></pre></td></tr></table></figure><p>在里面写入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=qBittorrent Command Line Client</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">UMask</span>=007</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/bin/qbittorrent-nox -d –<span class="attribute">webui-port</span>=8080</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><ul><li>依次运行以下命令</li></ul><p>启动服务</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> qbittorrent-nox</span><br></pre></td></tr></table></figure><p>保存修改</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl daemon-reload</span></span><br></pre></td></tr></table></figure><p>开机自启：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> qbittorrent-nox</span><br></pre></td></tr></table></figure><p>检验一下：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl status qbittorrent-nox</span></span><br></pre></td></tr></table></figure><p>如果亮绿灯证明服务已正常运行。<br>如果你之前使用过 qbittorrent-nox 这个命令运行并设置了一些东西，设置将不再生效。<br>访问服务器IP:8080即可进入web界面。</p><p>qbittorrent网页登录密码：<br>账号：admin<br>密码：adminadmin</p><p>最后来设置一下qBittorrent：<br>进入设置，<br>在Web设置里更改语言和密码。<br>把BitTorrent-Torrent排队的勾给点掉。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      qBittorrent一键安装脚本
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="qBittorrent" scheme="https://gyh.im/tags/qBittorrent/"/>
    
      <category term="Linux" scheme="https://gyh.im/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>onedrive上传工具-支持多线程文件文件夹上传</title>
    <link href="https://gyh.im/posts/39508e15/"/>
    <id>https://gyh.im/posts/39508e15/</id>
    <published>2020-04-09T09:54:54.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>本文搬运自<a href="https://www.moerats.com/archives/1006/" target="_blank" rel="noopener">萌鼠大佬</a></p><ul><li>在<a href="/posts/79e427dd/" title="自建aria2离线下载-自动上传onedrive云盘">自建aria2离线下载-自动上传onedrive云盘</a>这篇文章中介绍了<code>rclone</code>上传<code>onedrive</code>的方法，我使用了一天，发现文件多了之后会出现上传不上去的现象。所以弃用原来的方案。</li></ul><p><a href="https://moeclub.org/" target="_blank" rel="noopener">萌咖</a>使用<code>Golang</code>基于新的<code>API</code>写了个效率更高的上传工具–<code>OneDriveUploader</code>，同时也修复了各种<code>Shell</code>版本遗留下来的小问题，该版本特点就是授权简单，无需依赖，单文件。同样的也可以配合<code>Aria2</code>一起自动上传，这里就再分享下，方便下有需求的人。</p><ul><li>支持上传文件和文件夹到指定目录，并保持上传前的目录结构。</li><li>支持命令参数使用，方便外部程序调用。</li><li>支持自定义上传分块大小。</li><li>支持多线程上传(多文件同时上传)。</li><li>支持根据文件大小动态调整重试次数，对抗不好的网络环境。</li></ul><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><p>Github地址：<a href="https://github.com/MoeClub/OneList/tree/master/OneDriveUploader" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/OneDriveUploader</a></p><p>1、授权认证</p><p>点击右侧<code>URL</code>登录并授权，授权地址→<a href="https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=78d4dc35-7e46-42c6-9023-2d39314433a5&amp;response_type=code&amp;redirect_uri=http://localhost/onedrive-login&amp;response_mode=query&amp;scope=offline_access%20User.Read%20Files.ReadWrite.All" target="_blank" rel="noopener">【国际版、个人版(家庭版)】</a>、<a href="https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=dfe36e60-6133-48cf-869f-4d15b8354769&amp;response_type=code&amp;redirect_uri=http://localhost/onedrive-login&amp;response_mode=query&amp;scope=offline_access%20User.Read%20Files.ReadWrite.All" target="_blank" rel="noopener">【中国版(世纪互联)】</a>。</p><p>授权后会获取一个<code>localhost</code>开头打不开的链接，这里复制好整个链接地址，包括<code>localhost</code>。</p><p>2、安装OneDriveUploader</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#64位系统下载</span></span><br><span class="line">wget https:<span class="string">//raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/amd64/linux/OneDriveUploader</span> -P <span class="string">/usr/local/bin/</span></span><br><span class="line"><span class="comment">#32位系统下载</span></span><br><span class="line">wget https:<span class="string">//raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/i386/linux/OneDriveUploader</span> -P <span class="string">/usr/local/bin/</span></span><br><span class="line"><span class="comment">#arm架构下载</span></span><br><span class="line">wget https:<span class="string">//raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/arm/linux/OneDriveUploader</span> -P <span class="string">/usr/local/bin/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#给予权限</span></span><br><span class="line">chmod +x <span class="string">/usr/local/bin/OneDriveUploader</span></span><br></pre></td></tr></table></figure><p>3、初始化配置</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#国际版，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">OneDriveUploader -a <span class="string">"url"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#个人版(家庭版)，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">OneDriveUploader -ms -a <span class="string">"url"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#中国版(世纪互联)，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">OneDriveUploader -cn -a <span class="string">"url"</span></span><br></pre></td></tr></table></figure><p>如果提示<code>Init config file: /path/to/file/auth.json</code>类似信息，则初始化成功。</p><p>4、使用命令</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Usage <span class="keyword">of</span> OneDriveUploader:</span><br><span class="line">  -<span class="keyword">a</span> <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 初始化授权</span></span><br><span class="line">        Setup <span class="keyword">and</span> Init auth.json.</span><br><span class="line">  -b <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 自定义上传分块大小, 可以提高网络吞吐量, 受限于磁盘性能和网络速度.</span></span><br><span class="line">        Set block size. [Unit: M; <span class="number">5</span>&lt;=b&lt;=<span class="number">60</span>;] (default <span class="string">"10"</span>)</span><br><span class="line">  -c <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 配置文件路径</span></span><br><span class="line">        Config <span class="built_in">file</span>. (default <span class="string">"auth.json"</span>)</span><br><span class="line">  -n <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 上传单个文件时,在网盘中重命名</span></span><br><span class="line">        Rename <span class="built_in">file</span> <span class="keyword">on</span> <span class="title">upload</span> <span class="title">to</span> <span class="title">remote</span>.</span><br><span class="line">  -r <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 上传到网盘中的某个目录, 默认: 根目录</span></span><br><span class="line">        Upload <span class="built_in">to</span> reomte path.</span><br><span class="line">  -s <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // *必要参数, 要上传的文件或文件夹</span></span><br><span class="line">        Upload <span class="keyword">item</span>.</span><br><span class="line">  -t <span class="keyword">string</span></span><br><span class="line">       <span class="comment"> // 线程数, 同时上传文件的个数. 默认: 2</span></span><br><span class="line">        Set thread <span class="built_in">num</span>. (default <span class="string">"2"</span>)</span><br><span class="line">  -f</span><br><span class="line">       <span class="comment"> // 开关(推荐)</span></span><br><span class="line">       <span class="comment"> // 加上 -f 参数，强制读取 auth.json 中的块大小配置和多线程配置.</span></span><br><span class="line">       <span class="comment"> // 不加 -f 参数, 每次覆盖保存当前使用参数到 auth.json 配置文件中.</span></span><br><span class="line">        Force Read config form config <span class="built_in">file</span>. [BlockSize, ThreadNum]</span><br><span class="line">  -skip</span><br><span class="line">       <span class="comment"> // 开关</span></span><br><span class="line">       <span class="comment"> // 跳过上传网盘中已存在的同名文件. (默认不跳过)</span></span><br><span class="line">        Skip exist <span class="built_in">file</span> <span class="keyword">on</span> <span class="title">remote</span>.</span><br><span class="line">  -cn</span><br><span class="line">       <span class="comment"> // 开关</span></span><br><span class="line">       <span class="comment"> // 授权中国版(世纪互联), 需要此参数.</span></span><br><span class="line">        OneDrive <span class="keyword">by</span> <span class="number">21</span>Vianet.</span><br><span class="line">  -ms</span><br><span class="line">       <span class="comment"> // 开关</span></span><br><span class="line">       <span class="comment"> // 授权个人版(家庭版), 需要此参数.</span></span><br><span class="line">        OneDrive <span class="keyword">by</span> Microsoft.</span><br></pre></td></tr></table></figure><p>5、命令示例</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将当前目录下的mm00.jpg文件上传到OneDrive网盘根目录</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -s <span class="string">"mm00.jpg"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前目录下的mm00.jpg文件上传到OneDrive网盘根目录，并改名为mm01.jpg</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -s <span class="string">"mm00.jpg"</span> -n <span class="string">"mm01.jpg"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前目录下的Download文件夹上传到OneDrive网盘根目录</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -s <span class="string">"Download"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前目录下的Download文件夹上传到OneDrive网盘Test目录中</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -s <span class="string">"Download"</span> -r <span class="string">"Test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将同目录下的Download文件夹上传到OneDriv网盘Test目录中，使用10线程</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -t <span class="number">10</span> -s <span class="string">"Download"</span> -r <span class="string">"Test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将同目录下的Download文件夹上传到OneDrive网盘Test目录中，使用15线程，并设置分块大小为20M</span></span><br><span class="line">OneDriveUploader -c /path/<span class="keyword">to</span>/<span class="built_in">file</span>/auth.json -t <span class="number">15</span> -b <span class="number">20</span> -s <span class="string">"Download"</span> -r <span class="string">"Test"</span></span><br></pre></td></tr></table></figure><p><code>/path/to/file/auth.json</code>为初始化时，生成的<code>auth.json</code>绝对路径地址，本文默认<code>/root/auth.json</code>，自行调整。</p><p>例如：上传到OneDrive，进入要上传的文件/文件夹所在的目录，输入<code>OneDriveUploader -c /root/auth.json -t 3 -b 20 -s &quot;文件名/文件夹名&quot; -r &quot;offline&quot;</code></p><div class="note info"><p>注意：如果你之前上传手动中断过，再上传的时候，请使用<code>-skip</code>参数，默认会跳过你已经上传过的文件/文件夹。</p></div><h1 id="aria2自动上传"><a class="markdownIt-Anchor" href="#aria2自动上传"></a> Aria2自动上传</h1><p>上传脚本代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">GID=<span class="string">"<span class="variable">$1</span>"</span>;</span><br><span class="line">FileNum=<span class="string">"<span class="variable">$2</span>"</span>;</span><br><span class="line">File=<span class="string">"<span class="variable">$3</span>"</span>;</span><br><span class="line">MaxSize=<span class="string">"15728640"</span>;</span><br><span class="line">Thread=<span class="string">"3"</span>;  <span class="comment">#默认3线程，自行修改，服务器配置不好的话，不建议太多</span></span><br><span class="line">Block=<span class="string">"20"</span>;  <span class="comment">#默认分块20m，自行修改</span></span><br><span class="line">RemoteDIR=<span class="string">"offline"</span>;  <span class="comment">#上传到Onedrive的路径，默认为根目录，如果要上传到MOERATS目录，""里面请填成MOERATS</span></span><br><span class="line">LocalDIR=<span class="string">"/data/ccaaDown/"</span>;  <span class="comment">#Aria2下载目录，记得最后面加上/</span></span><br><span class="line">Uploader=<span class="string">"/usr/local/bin/OneDriveUploader"</span>;  <span class="comment">#上传的程序完整路径，默认为本文安装的目录</span></span><br><span class="line">Config=<span class="string">"/root/auth.json"</span>;  <span class="comment">#初始化生成的配置auth.json绝对路径，参考第3步骤生成的路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z $(<span class="built_in">echo</span> <span class="string">"<span class="variable">$FileNum</span>"</span> |grep -o <span class="string">'[0-9]*'</span> |head -n1) ]]; <span class="keyword">then</span> FileNum=<span class="string">'0'</span>; <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$FileNum</span>"</span> -le <span class="string">'0'</span> ]]; <span class="keyword">then</span> <span class="built_in">exit</span> 0; <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$#</span>"</span> != <span class="string">'3'</span> ]]; <span class="keyword">then</span> <span class="built_in">exit</span> 0; <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">LoadFile</span></span>()&#123;</span><br><span class="line">  <span class="keyword">if</span> [[ ! -e <span class="string">"<span class="variable">$&#123;Uploader&#125;</span>"</span> ]]; <span class="keyword">then</span> <span class="built_in">return</span>; <span class="keyword">fi</span></span><br><span class="line">  IFS_BAK=<span class="variable">$IFS</span></span><br><span class="line">  IFS=$<span class="string">'\n'</span></span><br><span class="line">  tmpFile=<span class="string">"<span class="variable">$(echo "$&#123;File/#$LocalDIR&#125;" |cut -f1 -d'/')</span>"</span></span><br><span class="line">  FileLoad=<span class="string">"<span class="variable">$&#123;LocalDIR&#125;</span><span class="variable">$&#123;tmpFile&#125;</span>"</span></span><br><span class="line">  <span class="keyword">if</span> [[ ! -e <span class="string">"<span class="variable">$&#123;FileLoad&#125;</span>"</span> ]]; <span class="keyword">then</span> <span class="built_in">return</span>; <span class="keyword">fi</span></span><br><span class="line">  ItemSize=$(du -s <span class="string">"<span class="variable">$&#123;FileLoad&#125;</span>"</span> |cut -f1 |grep -o <span class="string">'[0-9]*'</span> |head -n1)</span><br><span class="line">  <span class="keyword">if</span> [[ -z <span class="string">"<span class="variable">$ItemSize</span>"</span> ]]; <span class="keyword">then</span> <span class="built_in">return</span>; <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$ItemSize</span>"</span> -ge <span class="string">"<span class="variable">$MaxSize</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -ne <span class="string">"\033[33m<span class="variable">$&#123;FileLoad&#125;</span> \033[0mtoo large to spik.\n"</span>;</span><br><span class="line">    <span class="built_in">return</span>;</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="variable">$&#123;Uploader&#125;</span> -c <span class="string">"<span class="variable">$&#123;Config&#125;</span>"</span> -t <span class="string">"<span class="variable">$&#123;Thread&#125;</span>"</span> -b <span class="string">"<span class="variable">$&#123;Block&#125;</span>"</span> -s <span class="string">"<span class="variable">$&#123;FileLoad&#125;</span>"</span> -r <span class="string">"<span class="variable">$&#123;RemoteDIR&#125;</span>"</span> -skip</span><br><span class="line">  <span class="keyword">if</span> [[ $? == <span class="string">'0'</span> ]]; <span class="keyword">then</span></span><br><span class="line">    rm -rf <span class="string">"<span class="variable">$&#123;FileLoad&#125;</span>"</span>;</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  IFS=<span class="variable">$IFS_BAK</span></span><br><span class="line">&#125;</span><br><span class="line">LoadFile;</span><br></pre></td></tr></table></figure><p>编辑好上传脚本后，可以检测下脚本编码是否正确，比如我脚本路径为<code>/root/upload.sh</code>，使用命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/root/u</span>pload.sh</span><br><span class="line">bash <span class="regexp">/root/u</span>pload.sh</span><br></pre></td></tr></table></figure><p>如果无任何输出，则正确，反之输出类似<code>$'r': command not found</code>错误，则需要转换下编码格式，具体步骤如下。</p><p>先安装<code>dos2unix</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS系统</span></span><br><span class="line">yum <span class="keyword">install</span> dos2unix -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#Debian/Ubuntu系统</span></span><br><span class="line">apt <span class="keyword">install</span> dos2unix -y</span><br></pre></td></tr></table></figure><p>再转换编码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#后面为脚本路径</span></span><br><span class="line">dos2unix <span class="regexp">/root/u</span>pload.sh</span><br></pre></td></tr></table></figure><p>最后在<code>aria2.conf</code>最后加入<code>on-download-complete=/root/upload.sh</code>,就是下载完成后，执行这个脚本文件，上传到<code>onedrive</code></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      onedrive上传工具-支持多线程文件文件夹上传
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="OneDrive" scheme="https://gyh.im/tags/OneDrive/"/>
    
  </entry>
  
  <entry>
    <title>又一个OneDrive目录索引--onelist</title>
    <link href="https://gyh.im/posts/ee1b50a3/"/>
    <id>https://gyh.im/posts/ee1b50a3/</id>
    <published>2020-04-08T11:10:32.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>本文转自<a href="https://www.moerats.com/archives/1016/" target="_blank" rel="noopener">萌鼠大佬</a></p><p><code>OneList</code>主要的特色就是解决了因<code>OneDrive API</code>抽风导致的很多问题，稳定性和访问速度都是不错的。不过由于使用<code>Python</code>写的，而Py单线程容易阻塞，响应不够迅速，刷新缓存时，Web端请求基本不可用，所以在整体性能上有点瑕疵。基于<code>Golang</code>的性能更好，效率更高，多盘并发缓存等众多好处，于是萌咖大佬就弃用<code>Python</code>版本，使用<code>Golang</code>重写了<code>OneList</code>，同时支持国际版、个人免费版(家庭版)、中国版(世纪互联)及多网盘绑定。</p><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><p>Github地址：<a href="https://github.com/MoeClub/OneList/tree/master/Rewrite" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/Rewrite</a></p><p>1、授权认证<br>点击右侧URL登录并授权，授权<a href="https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=78d4dc35-7e46-42c6-9023-2d39314433a5&amp;response_type=code&amp;redirect_uri=http://localhost/onedrive-login&amp;response_mode=query&amp;scope=offline_access%20User.Read%20Files.ReadWrite.All" target="_blank" rel="noopener">国际版、个人版(家庭版)</a>、<a href="https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=dfe36e60-6133-48cf-869f-4d15b8354769&amp;response_type=code&amp;redirect_uri=http://localhost/onedrive-login&amp;response_mode=query&amp;scope=offline_access%20User.Read%20Files.ReadWrite.All" target="_blank" rel="noopener">中国版(世纪互联)</a>。</p><p>授权后会获取一个<code>localhost</code>开头打不开的链接，这里复制好整个链接地址，包括<code>localhost</code>。</p><p>2、安装OneList</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#新建并进入OneList目录</span></span><br><span class="line">mkdir /opt/OneList &amp;&amp; cd $_</span><br><span class="line"></span><br><span class="line"><span class="meta">#64位系统下载</span></span><br><span class="line">wget https:<span class="comment">//raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/amd64/linux/OneList</span></span><br><span class="line"><span class="meta">#32位系统下载</span></span><br><span class="line">wget https:<span class="comment">//raw.githubusercontent.com/MoeClub/OneList//master/Rewrite/i386/linux/OneList</span></span><br><span class="line"><span class="meta">#arm架构下载</span></span><br><span class="line">wget https:<span class="comment">//raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/arm/linux/OneList</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#给予权限</span></span><br><span class="line">chmod +x OneList</span><br></pre></td></tr></table></figure><p>3、使用命令</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Usage of OneList:</span><br><span class="line">  -a <span class="keyword">string</span></span><br><span class="line">        <span class="comment">// 初始化配置文件,添加新配置</span></span><br><span class="line">        Setup and Init auth.json.</span><br><span class="line">  -bind <span class="keyword">string</span></span><br><span class="line">        <span class="comment">// 绑定IP地址(公网: 0.0.0.0)</span></span><br><span class="line">        <span class="function">Bind <span class="title">Address</span> (<span class="params"><span class="keyword">default</span> <span class="string">"127.0.0.1"</span></span>)</span></span><br><span class="line"><span class="function">  -port <span class="keyword">string</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 绑定端口(HTTP:80)</span></span></span><br><span class="line"><span class="function">        <span class="title">Port</span> (<span class="params"><span class="keyword">default</span> <span class="string">"5288"</span></span>)</span></span><br><span class="line"><span class="function">  -s <span class="keyword">string</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 设置 SubPath 项, 需要与 -a 一起使用.</span></span></span><br><span class="line"><span class="function">        Set SubPath. [unique per account] (<span class="params"><span class="keyword">default</span> <span class="string">"/"</span></span>)</span></span><br><span class="line"><span class="function">  -c <span class="keyword">string</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 配置文件</span></span></span><br><span class="line"><span class="function">        Config file. (<span class="params"><span class="keyword">default</span> <span class="string">"config.json"</span></span>)</span></span><br><span class="line"><span class="function">  -t <span class="keyword">string</span></span></span><br><span class="line"><span class="function">        <span class="comment">// Index.html 目录样式文件</span></span></span><br><span class="line"><span class="function">        Index file. (<span class="params"><span class="keyword">default</span> <span class="string">"index.html"</span></span>)</span></span><br><span class="line"><span class="function">  -cn</span></span><br><span class="line"><span class="function">        <span class="comment">// 开关</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 授权中国版(世纪互联), 需要此参数.</span></span></span><br><span class="line"><span class="function">        OneDrive <span class="keyword">by</span> 21Vianet.</span></span><br><span class="line"><span class="function">  -ms</span></span><br><span class="line"><span class="function">        <span class="comment">// 开关</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 授权个人版(家庭版), 需要此参数.</span></span></span><br><span class="line"><span class="function">        OneDrive <span class="keyword">by</span> Microsoft.</span></span><br></pre></td></tr></table></figure><p>4、生成配置文件</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#国际版，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">./OneList -a <span class="string">"url"</span> -s <span class="string">"/onedrive01"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#个人版(家庭版)，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">./OneList -ms -a <span class="string">"url"</span> -s <span class="string">"/onedrive02"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#中国版(世纪互联)，将url换成你上面复制的授权地址，包括http:<span class="comment">//loaclhost。</span></span></span><br><span class="line">./OneList -cn -a <span class="string">"url"</span> -s <span class="string">"/onedrive03"</span></span><br></pre></td></tr></table></figure><p>提示<code>Success! Add config. '/path/to/config.json'</code>信息，则添加成功。</p><p>这里要注意的是：</p><blockquote><p>1、授权url地址只能用一次，超过需要重新授权。<br>2、命令中的/onedrive01参数为指定网盘地址后缀，比如<code>http://domain.com/onedrive01</code>。<br>3、授权多个网盘的话，重复授权多次即可，参数均会添加到一个配置文件，且后缀不能重复。<br>4、地址后缀填错了的，可以稍后在配置文件中修改。</p></blockquote><p>本文默认的配置文件路径<code>/opt/OneList/config.json</code>，参数详解，可自行修改：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    /<span class="regexp">/ 如果是家庭版或者个人免费版, 此项应为 true.</span></span><br><span class="line"><span class="regexp">    "MSAccount": false,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 如果是中国版(世纪互联), 此项应为 true.</span></span><br><span class="line"><span class="regexp">    "MainLand": false,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 授权令牌</span></span><br><span class="line"><span class="regexp">    "RefreshToken": "1234564567890ABCDEF",</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 单配置文件中,此项要唯一.将此OneDrive中设置为`RootPath`目录映射在`http:/</span><span class="regexp">/127.0.0.1:5288/onedrive</span><span class="string">` 下.</span></span><br><span class="line"><span class="string">    // (只推荐一个盘位的时候使用根目录"/".)</span></span><br><span class="line"><span class="string">    "SubPath": "/onedrive",</span></span><br><span class="line"><span class="string">    // 读取OneDrive的某个目录作为根目录. (支持根目录"/")</span></span><br><span class="line"><span class="string">    "RootPath": "/Test",</span></span><br><span class="line"><span class="string">    // 隐藏OneDrive目录中的文件夹和文件, 条目间使用 "|" 分割. (跳过缓存设置的条目.)</span></span><br><span class="line"><span class="string">    "HidePath": "/Test/Obj01|/Test/Obj02",</span></span><br><span class="line"><span class="string">    // 使用用户名和密码加密OneDrive目录. 目录和用户名密码间使用 "?" 分割, 用户名密码使用 ":" 分割, 条目间使用 "|" 分割. 无效条目将跳过.</span></span><br><span class="line"><span class="string">    "AuthPath": "/Test/Auth01?user01:pwd01|/Test/Auth02?user02:pwd02",</span></span><br><span class="line"><span class="string">    // 缓存刷新间隔.(所有项目中的刷新时间取最小值为有效刷新间隔)</span></span><br><span class="line"><span class="string">    "RefreshInterval": 900</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure><p>这里注意，挂载多个盘符的时候，<code>SubPath</code>参数请不要为<code>/</code>，单个网盘建议为<code>/</code>。</p><p>5、运行OneList</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#下载默认的<span class="built_in">index</span>.html主题，与config.json同目录，即本文默认的/<span class="keyword">opt</span>/OneList</span><br><span class="line">wget http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/MoeClub/OneList/master/Rewrite/<span class="built_in">index</span>.html -<span class="keyword">P</span> /<span class="keyword">opt</span>/OneList</span><br><span class="line">#监听<span class="number">8000</span>地址，自行修改</span><br><span class="line">/<span class="keyword">opt</span>/OneList/OneList -bind <span class="number">0.0</span>.<span class="number">0.0</span> -port <span class="number">8000</span></span><br></pre></td></tr></table></figure><p>最后打开<code>ip:端口</code>访问即可，如果你挂载网盘的时候<code>SubPath</code>为<code>/</code>，那么直接通过根目录查看，如果为<code>/onedrive1</code>，那么通过<code>ip:端口/onedrive1</code>查看，如果该路径不存在，则会提示<code>No Found.</code>。</p><p>且首次运行会异步缓存，也就是至少有一个盘缓存成功了，才会显示。</p><p>6、开机自启</p><p>这里新建一个简单的systemd配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p><p>使用命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意修改你的运行监听端口，即你可以通过ip:端口访问程序，这里默认8000。</span></span><br><span class="line"><span class="comment">#将以下代码一起复制到SSH运行</span></span><br><span class="line">cat &gt; /etc/systemd/system/onelist.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=onelist</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=simple</span><br><span class="line"><span class="attribute">ExecStart</span>=/opt/OneList/OneList -bind 0.0.0.0 -port 8000 </span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动并设置开机自启</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start onelist</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable onelist</span></span><br></pre></td></tr></table></figure><h1 id="反向代理"><a class="markdownIt-Anchor" href="#反向代理"></a> 反向代理</h1><p>宝塔安装Nginx，建立站点，设置反代，应为前面是绑定公网ip<code>/opt/OneList/OneList -bind 0.0.0.0 -port 8000</code>这样运行的，所以反代的时候要使用公网ip或者解析好的域名来进行设置，如图</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200408202011.png"  alt=""></p><h1 id="更换主题"><a class="markdownIt-Anchor" href="#更换主题"></a> 更换主题</h1><blockquote><p>提示：下载主题的index.html文件，覆盖默认index.html文件，本文默认存放/opt/OneList，然后重启程序即可</p></blockquote><p>主题地址：<a href="https://github.com/MoeClub/OneList/tree/master/Rewrite/@Theme" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/Rewrite/@Theme</a></p><p>1、HaorWu</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#作者</span></span><br><span class="line">https:<span class="comment">//github.com/HaorWu</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#特点</span></span><br><span class="line">支持移动端自适应</span><br><span class="line">支持当页搜索</span><br><span class="line">支持按文件名, 日期, 大小排序</span><br><span class="line">支持主动查看图片</span><br><span class="line">支持在线播放视频</span><br><span class="line"></span><br><span class="line"><span class="meta">#下载地址</span></span><br><span class="line">https:<span class="comment">//raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/%40Theme/HaorWu/index.html</span></span><br></pre></td></tr></table></figure><p>2、jackjieYYY</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#作者</span></span><br><span class="line"><span class="symbol">https:</span><span class="comment">//github.com/jackjieYYY</span></span><br><span class="line"><span class="symbol">https:</span><span class="comment">//www.hostloc.com/space-uid-38920.html</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#特点</span></span><br><span class="line">支持移动端自适应</span><br><span class="line">支持当页搜索</span><br><span class="line">支持按文件名, 日期, 大小排序</span><br><span class="line">支持在线播放视频</span><br><span class="line"></span><br><span class="line"><span class="meta">#下载地址</span></span><br><span class="line"><span class="symbol">https:</span><span class="comment">//raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/%40Theme/jackjieYYY/index.html</span></span><br></pre></td></tr></table></figure><p>3、NomadJohn</p><p>论坛大佬写的，觉得还不错,支持在线浏览图片，视频，搜索文件，以及音乐播放功能<br>建立新的<code>index.html</code>将下面代码复制进去，注意和<code>config.json</code>在同一目录下</p><p><a href="https://raw.githubusercontent.com/NomadJohn/issue-blog/master/index.html" target="_blank" rel="noopener">https://raw.githubusercontent.com/NomadJohn/issue-blog/master/index.html</a></p><h1 id="相关命令"><a class="markdownIt-Anchor" href="#相关命令"></a> 相关命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动：systemctl <span class="keyword">start</span> onelist</span><br><span class="line">停止：systemctl <span class="keyword">stop</span> onelist</span><br><span class="line">重启：systemctl restart onelist</span><br><span class="line">查看状态：systemctl <span class="keyword">status</span> onelist</span><br></pre></td></tr></table></figure><h1 id="卸载"><a class="markdownIt-Anchor" href="#卸载"></a> 卸载</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#未设置开机自启</span></span><br><span class="line">rm -rf <span class="regexp">/opt/</span>OneList</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置过开机自启</span></span><br><span class="line">systemctl stop onelist</span><br><span class="line">systemctl disable onelist</span><br><span class="line">rm -rf <span class="regexp">/opt/</span>OneList <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>onelist.service</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      又一个OneDrive目录索引
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="OneDrive" scheme="https://gyh.im/tags/OneDrive/"/>
    
      <category term="Onelist" scheme="https://gyh.im/tags/Onelist/"/>
    
  </entry>
  
  <entry>
    <title>自建aria2离线下载+自动上传onedrive云盘</title>
    <link href="https://gyh.im/posts/79e427dd/"/>
    <id>https://gyh.im/posts/79e427dd/</id>
    <published>2020-04-08T06:44:27.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>等了好久，终于在今天早上买到了<a href="https://my.frantech.ca/aff.php?aff=3567" target="_blank" rel="noopener">buyvm</a>家的2刀的配置，再配合他们家的1.25刀256G的储存块，用来离线下载简直不要太爽</p><div class="note info"><p>1、Buyvm家所有的KVM VPS均免费提供Directadmin面板，有需要的可以联系客服。<br>2、如果没有中途退款的需求，强烈推荐使用支付宝付款，支付宝付款有神秘加成，默认加元汇率，使用Paypal等付款是美元<br>3、储存块只能在拉斯维加斯这个数据中心才有</p></div><h1 id="添加储存块到vps"><a class="markdownIt-Anchor" href="#添加储存块到vps"></a> 添加储存块到vps</h1><p>1、在Buyvm官网购买一台Las Vegas机房的KVM VPS，如果仅用于存储，买最低配的512M内存就行了；同时按需购买Block Storage空间。</p><p>2、进入<a href="https://manage.buyvm.net/volumes/" target="_blank" rel="noopener">Storage Volumes</a>后台，将[Block Storage]附加到（Attached To） 对应的VPS</p><p>3、查看数据块编号(开通邮件里也有)</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/disk/<span class="keyword">by</span>-<span class="built_in">id</span>/</span><br></pre></td></tr></table></figure><p>4、假设看到的结果是scsi-0BUYVM_SLAB_VOLUME-2181，那么2181就是数据块的id，或者后台也能直接看到。</p><p>5、格式化</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 -F /dev/disk/by-id/scsi<span class="number">-0</span>BUYVM_SLAB_VOLUME<span class="number">-2181</span></span><br></pre></td></tr></table></figure><p>6、创建文件夹</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> /<span class="class"><span class="keyword">data</span></span></span><br></pre></td></tr></table></figure><p>7、挂载</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o discard,defaults /dev/disk/by-id/scsi<span class="number">-0</span>BUYVM_SLAB_VOLUME<span class="number">-2181</span> /data</span><br></pre></td></tr></table></figure><p>8、设置开机/重启自动挂载</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> '<span class="string">/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-2181</span> <span class="string">/data</span> ext4 defaults,nofail,discard 0 0' | sudo tee -a <span class="string">/etc/fstab</span></span><br></pre></td></tr></table></figure><h1 id="安装ccaa"><a class="markdownIt-Anchor" href="#安装ccaa"></a> 安装ccaa</h1><p><a href="https://github.com/helloxz/ccaa" target="_blank" rel="noopener">CCAA</a>原为CentOS + Caddy + AriaNg + Aria2，故命名为CCAA，不过现在已经不仅仅支持CentOS，包括主流的Debian、Ubuntu也已经支持，自2.0(2020/02/28)版本开始已移除Caddy，改用Golang写了一个简单的WebServer来运行AriaNg。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Aria2 提供离线下载</span><br><span class="line">cca<span class="built_in">a_web</span>支撑AriaNg运行，使用Golang编写</span><br><span class="line">AriaNg为Aria2 提供WEB界面</span><br><span class="line">Filemanager提供文件管理</span><br></pre></td></tr></table></figure><h2 id="一键脚本"><a class="markdownIt-Anchor" href="#一键脚本"></a> 一键脚本</h2><p>目前支持的操作系统为：CentOS 7-8、Debian 8-10、Ubuntu 16-18，操作系统要求64位。请根据自己的VPS位置复制下面的命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#海外</span></span><br><span class="line">bash &lt;(curl -Lsk https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/helloxz/</span>ccaa<span class="regexp">/master/</span>ccaa.sh)</span><br><span class="line"><span class="comment">#国内</span></span><br><span class="line">bash &lt;(curl -Lsk https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/helloxz/</span>ccaa<span class="regexp">/master/</span>ccaa.sh) cdn</span><br></pre></td></tr></table></figure><p>如果出现<code>-bash: curl: command not found</code>错误，说明curl命令没安装，请输入下面的命令先安装curl，再回过头来执行上面的命令。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#Debian or Ubuntu</span></span><br><span class="line">apt-<span class="keyword">get</span> -y install curl</span><br><span class="line"><span class="meta">#CentOS</span></span><br><span class="line">yum -y install curl</span><br></pre></td></tr></table></figure><ul><li>访问地址默认为http://IP:6080</li><li>Aria2 RPC 密钥:您自行设置的</li><li>File Browser 用户名：默认为ccaa</li><li>File Browser 密码：默认为admin</li></ul><p>输入<code>http://IP:6080</code>访问AriaNg ，首次打开会提示“认证失败”，这个是正常现象。依次点击“AriaNg设置 - RPC - 填写您之前设置的RPC密钥”</p><p>如果服务器有启用安全组，请务必在安全组放行以下端口：<code>6080/6081/6800/6998/51413</code></p><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><p>安装成功后，您可以使用如下命令来管理CCAA：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#进入CCAA管理界面</span></span><br><span class="line">ccaa</span><br><span class="line"><span class="meta">#查看ccaa状态</span></span><br><span class="line">ccaa status</span><br><span class="line"><span class="meta">#启动ccaa</span></span><br><span class="line">ccaa start</span><br><span class="line"><span class="meta">#停止ccaa</span></span><br><span class="line">ccaa stop</span><br><span class="line"><span class="meta">#重启ccaa</span></span><br><span class="line">ccaa restart</span><br><span class="line"><span class="meta">#查看当前版本</span></span><br><span class="line">ccaa -v</span><br></pre></td></tr></table></figure><h1 id="使用https"><a class="markdownIt-Anchor" href="#使用https"></a> 使用HTTPS</h1><h2 id="宝塔添加ariang站点"><a class="markdownIt-Anchor" href="#宝塔添加ariang站点"></a> 宝塔添加AriaNg站点</h2><p>AriaNg页面的源文件在<code>/etc/ccaa</code>,新建如下站点，配置好<code>ssl</code></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200408205254.png"  alt=""></p><h2 id="aria2反向代理"><a class="markdownIt-Anchor" href="#aria2反向代理"></a> aria2反向代理</h2><p>同样的，新建一个站点配置好ssl</p><p>在配置文件中最后一个<code>}</code>前添加如下配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /jsonrpc &#123;</span><br><span class="line">    <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Front-End-Https <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-NginX-Proxy <span class="literal">true</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:6800/jsonrpc;</span><br><span class="line">    <span class="attribute">proxy_pass_header</span> X-Transmission-Session-Id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200408205612.png"  alt=""></p><p>最后在<code>AriaNg</code>中修改RPC端口为443</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200408205749.png"  alt=""></p><h1 id="挂载onedrive网盘并实现aria2下载结束自动上传文件"><a class="markdownIt-Anchor" href="#挂载onedrive网盘并实现aria2下载结束自动上传文件"></a> 挂载OneDrive网盘并实现Aria2下载结束自动上传文件</h1><p>以下方法是使用<code>Rclone</code>默认的<code>API</code>,当然也可以自建<code>API</code> 可参考： <a href="/posts/c4f1574a/" title="Rclone挂载OneDrive方法-自建API">Rclone挂载OneDrive方法-自建API</a></p><p>以下分为三小步这里做个简介：第一步是PC端获取网盘授权的令牌；第二步是在VPS里绑定获得的授权；第三步才是真正挂载到网盘上。因为OneDrive的授权需要在浏览器打开，而VPS没有图形界面，只能先在PC端获取授权，所以第一步和第二步有点重复。</p><p>除了挂载OneDrive网盘之外，还支持 Google Drive、Mege、Yandex等几十个国外网盘，其它网盘挂载教程这里我就不说了，善用搜索引擎。</p><h2 id="windowspc端安装rclone"><a class="markdownIt-Anchor" href="#windowspc端安装rclone"></a> windows（PC）端安装Rclone</h2><p>更简单的方法可参见：<a href="/posts/c4f1574a/" title="Rclone挂载OneDrive方法-自建API">Rclone挂载OneDrive方法-自建API</a></p><p>登录<a href="https://rclone.org/downloads/" target="_blank" rel="noopener">Rclone</a>网官下载Rclone的窗户端的客户(windows AMD64 - 64 Bit)。<br>下载解压将里面的<code>rclone.exe</code>移动到你电脑<code>C:\Windows\System32</code>这个目录，其它的可以删掉没关系。<br>按<code>win + R</code>快捷键打开运行，输入<code>cmd</code>点确定来打开CMD窗口。</p><p>输入下面命令开始配置</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone <span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>然后出现如下界面，按提示输入n回车创建个新的远程，然后提示输入name，名称随意但要记住，这里我填<code>onedrive</code>。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) <span class="builtin-name">Edit</span> existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) <span class="builtin-name">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n   </span><br><span class="line">name&gt; onedrive</span><br></pre></td></tr></table></figure><p>回车后出现一长串网盘列表让你选，这里OneDrive是19，填入19回车，不要死记数字，不同版本数字选项会变化，Yandex这里是26，根据你需要选择，后续操作都差不多</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) <span class="builtin-name">Edit</span> existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) <span class="builtin-name">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n</span><br><span class="line">name&gt; onedrive</span><br><span class="line">Type of storage <span class="keyword">to</span> configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> your own value</span><br><span class="line"> 1 / A stackable unification remote, which can appear <span class="keyword">to</span> merge the contents of several remotes</span><br><span class="line">   \ <span class="string">"union"</span></span><br><span class="line"> 2 / Alias <span class="keyword">for</span> a existing remote</span><br><span class="line">   \ <span class="string">"alias"</span></span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ <span class="string">"amazon cloud drive"</span></span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ <span class="string">"s3"</span></span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ <span class="string">"b2"</span></span><br><span class="line"> 6 / Box</span><br><span class="line">   \ <span class="string">"box"</span></span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ <span class="string">"cache"</span></span><br><span class="line"> 8 / Dropbox</span><br><span class="line">   \ <span class="string">"dropbox"</span></span><br><span class="line"> 9 / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">"crypt"</span></span><br><span class="line">10 / FTP Connection</span><br><span class="line">   \ <span class="string">"ftp"</span></span><br><span class="line">11 / Google Cloud Storage (this is <span class="keyword">not</span> Google Drive)</span><br><span class="line">   \ <span class="string">"google cloud storage"</span></span><br><span class="line">12 / Google Drive</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line">13 / Hubic</span><br><span class="line">   \ <span class="string">"hubic"</span></span><br><span class="line">14 / JottaCloud</span><br><span class="line">   \ <span class="string">"jottacloud"</span></span><br><span class="line">15 / Koofr</span><br><span class="line">   \ <span class="string">"koofr"</span></span><br><span class="line">16 / Local Disk</span><br><span class="line">   \ <span class="string">"local"</span></span><br><span class="line">17 / Mega</span><br><span class="line">   \ <span class="string">"mega"</span></span><br><span class="line">18 / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">"azureblob"</span></span><br><span class="line">19 / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line">20 / OpenDrive</span><br><span class="line">   \ <span class="string">"opendrive"</span></span><br><span class="line">21 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">"swift"</span></span><br><span class="line">22 / Pcloud</span><br><span class="line">   \ <span class="string">"pcloud"</span></span><br><span class="line">23 / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">"qingstor"</span></span><br><span class="line">24 / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">"sftp"</span></span><br><span class="line">25 / Webdav</span><br><span class="line">   \ <span class="string">"webdav"</span></span><br><span class="line">26 / Yandex Disk</span><br><span class="line">   \ <span class="string">"yandex"</span></span><br><span class="line">27 / http Connection</span><br><span class="line">   \ <span class="string">"http"</span></span><br><span class="line">Storage&gt; 19</span><br></pre></td></tr></table></figure><p>接着<code>client_id</code>和<code>client_secret</code> 直接不填回车;<br><code>Edit advanced config?</code> 输入n回车;<br><code>Already have a token - refresh?</code> 输入<code>y</code>回车，后面VPS里配置时没有这个提示的，会出现下个自动配置选项，别手快直接<code>y</code>;<br><code>Use auto config?</code> 这里输入<code>y</code>回车，后面VPS配置时这步要选<code>n</code><br>具体操作如下，不同版本可能会有变化，反正就是做选择题，看不懂复制出来可以翻译</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Microsoft App<span class="built_in"> Client </span>Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">client_id&gt;</span><br><span class="line">Microsoft App<span class="built_in"> Client </span>Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the<span class="built_in"> default </span>(<span class="string">""</span>).</span><br><span class="line">client_secret&gt;</span><br><span class="line"><span class="builtin-name">Edit</span> advanced config? (y/n) </span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; n</span><br><span class="line">Remote<span class="built_in"> config </span></span><br><span class="line">Already have a token - refresh?  </span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; y</span><br><span class="line">Use auto config?  </span><br><span class="line"> * Say Y <span class="keyword">if</span> <span class="keyword">not</span> sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote <span class="keyword">or</span> headless machine</span><br><span class="line">y) <span class="literal">Yes</span></span><br><span class="line">n) <span class="literal">No</span></span><br><span class="line">y/n&gt; y</span><br></pre></td></tr></table></figure><p>接着浏览器会自动弹出窗口，然后登录你要挂载的OneDrive账号，征求许可接受就行了，出现下图界面即授权成功。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200408152848.png"  alt=""></p><p>授权成功后返回cmd窗口出现以下界面，这里选<code>1</code>回车。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Choose a number <span class="keyword">from</span> below, <span class="keyword">or</span><span class="built_in"> type </span><span class="keyword">in</span> an existing value</span><br><span class="line"> 1 / OneDrive Personal <span class="keyword">or</span> Business  #个人和商用</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line"> 2 / Root Sharepoint site</span><br><span class="line">   \ <span class="string">"sharepoint"</span></span><br><span class="line"> 3 /<span class="built_in"> Type </span><span class="keyword">in</span> driveID</span><br><span class="line">   \ <span class="string">"driveid"</span></span><br><span class="line"> 4 /<span class="built_in"> Type </span><span class="keyword">in</span> SiteID</span><br><span class="line">   \ <span class="string">"siteid"</span></span><br><span class="line"> 5 / Search a Sharepoint site</span><br><span class="line">   \ <span class="string">"search"</span></span><br><span class="line">Your choice&gt;1</span><br></pre></td></tr></table></figure><p>提示找到一个驱动器，让你选择，这里就一个选项0，那就填0回车，然后问你是否确定，选<code>y</code>回车。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Found 1 drives, please <span class="keyword">select</span> the one you want <span class="keyword">to</span> <span class="keyword">use</span>:</span><br><span class="line"><span class="number">0</span>: OneDrive (business) <span class="keyword">id</span>=huioaeuiaeagioioieuiaaefe@<span class="comment">#%gaege94#</span></span><br><span class="line">Chose drive <span class="keyword">to</span> <span class="keyword">use</span>:&gt;<span class="number">0</span></span><br><span class="line"><span class="keyword">Found</span> drive <span class="string">'root'</span> <span class="keyword">of</span> <span class="keyword">type</span> <span class="string">'business'</span>, <span class="keyword">URL</span>:https://jxjjxy-my.sharepoint.com/personal/meeaghvp_t_odmail_cn/Documents</span><br><span class="line"><span class="keyword">Is</span> that okay?</span><br><span class="line">y) Yes</span><br><span class="line">n) <span class="keyword">No</span></span><br><span class="line">y/n&gt; y</span><br></pre></td></tr></table></figure><p>接着会出现一串长令牌，PC端的操作全是为了这个令牌，将下图红框内的整个复制，复制范围<code>{&quot;access_token&quot;:…………………………2019-04-21T16:41:25.1595637+08:00&quot;}</code>保存好，以后就可以省了这步PC端操作，下面就回到VPS操作</p><h2 id="vps安装rclone"><a class="markdownIt-Anchor" href="#vps安装rclone"></a> VPS安装Rclone</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> ~  <span class="comment">#返回宿主目录</span></span><br><span class="line">curl https:<span class="string">//rclone.org/install.sh</span> | sudo bash  <span class="comment">#安装Rclone</span></span><br><span class="line">rclone config  <span class="comment">#配置Rclone</span></span><br></pre></td></tr></table></figure><p>上面输入完<code>rclone config</code>回车后的过程跟前面在PC端的配置步骤基本一样，这里就不复述了，到了<code>Use auto config?</code> 问你是否使用自动配置这步不同，这里选<code>n</code>回车，然后在出现的<code>result&gt;</code>后面粘贴上你前面获得的<code>token</code>然后回车，接着会有几个确认（问你是否OK），按提示填 <code>y</code> 就行，<br>直到又回到下图配置开头界面，输入q回车退出配置即可，到此我们完成了网盘的授权。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) <span class="builtin-name">Edit</span> existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) <span class="builtin-name">Set</span> configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; q</span><br></pre></td></tr></table></figure><div class="note info"><p>以上两步就是为了得到token，并在VPS里创建一个rclone.conf配置文件，该配置文件目录在<code>/root/.config/rclone/rclone.conf</code>，可以将这个文件下载到本地，以后如果重装只需VPS上安装好rclone，然后将这个配置文件放进这个目录即可，免去繁琐配置过程。</p></div><h2 id="自动上传设置"><a class="markdownIt-Anchor" href="#自动上传设置"></a> 自动上传设置</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install <span class="keyword">vim</span>*  #先安装下<span class="keyword">vim</span>，也可以不安装用<span class="keyword">vi</span>命令</span><br><span class="line"><span class="keyword">vim</span> /root/rcloneupload.<span class="keyword">sh</span>  #创建并打开名为 rcloneupload.<span class="keyword">sh</span> 的脚本，用来处理自动上载</span><br></pre></td></tr></table></figure><p>不会用<code>vi</code>命令可以网上先了解下。<br>这里复制以下全部内容粘贴进去，确保里面以下三项的路径跟你前面设置的一致，最后检查下有没有复制漏了的部分，我这边复制总是缺失头部两行的内容。<br>以下三行内容跟你设置的目录对上↓<br><code>downloadpath='/data/ccaaDown'</code> #Aria2下载目录<br><code>name='onedrive'</code> #配置Rclone时的name<br><code>folder='/offline'</code> #网盘里的文件夹，如果是根目录直接留空<br>没问题就保存退出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">filepath=<span class="variable">$3</span>     <span class="comment">#取文件原始路径，如果是单文件则为/Download/a.mp4，如果是文件夹则该值为文件夹内第一个文件比如/Download/a/1.mp4</span></span><br><span class="line">path=<span class="variable">$&#123;3%/*&#125;</span>     <span class="comment">#取文件根路径，如把/Download/a/1.mp4变成/Download/a</span></span><br><span class="line">downloadpath=<span class="string">'/data/ccaaDown'</span>    <span class="comment">#Aria2下载目录</span></span><br><span class="line">name=<span class="string">'onedrive'</span> <span class="comment">#配置Rclone时的name</span></span><br><span class="line">folder=<span class="string">'/offline'</span>     <span class="comment">#网盘里的文件夹，如果是根目录直接留空</span></span><br><span class="line">MinSize=<span class="string">'10k'</span>     <span class="comment">#限制最低上传大小，默认10k，BT下载时可防止上传其他无用文件。会删除文件，谨慎设置。</span></span><br><span class="line">MaxSize=<span class="string">'15G'</span>     <span class="comment">#限制最高文件大小，默认15G，OneDrive上传限制。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> -eq 0 ]; <span class="keyword">then</span> <span class="built_in">exit</span> 0; <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$path</span>"</span> = <span class="string">"<span class="variable">$downloadpath</span>"</span> ] &amp;&amp; [ <span class="variable">$2</span> -eq 1 ]    <span class="comment">#如果下载的是单个文件</span></span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    rclone move -v <span class="string">"<span class="variable">$filepath</span>"</span> <span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span> --tpslimit 1 --buffer-size=10M --min-size <span class="variable">$MinSize</span> --max-size <span class="variable">$MaxSize</span></span><br><span class="line">    rm -vf <span class="string">"<span class="variable">$filepath</span>"</span>.aria2    <span class="comment">#删除残留的.aria.2文件</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$path</span>"</span> != <span class="string">"<span class="variable">$downloadpath</span>"</span> ]    <span class="comment">#如果下载的是文件夹</span></span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">while</span> [[ <span class="string">"`ls -A "</span><span class="variable">$path</span>/<span class="string">"`"</span> != <span class="string">""</span> ]]; <span class="keyword">do</span></span><br><span class="line">    rclone move -v <span class="string">"<span class="variable">$path</span>"</span> <span class="variable">$&#123;name&#125;</span>:/<span class="variable">$&#123;folder&#125;</span>/<span class="string">"<span class="variable">$&#123;path##*/&#125;</span>"</span> --tpslimit 1 --buffer-size=10M --min-size <span class="variable">$MinSize</span> --max-size <span class="variable">$MaxSize</span> --delete-empty-src-dirs</span><br><span class="line">    rclone delete -v <span class="string">"<span class="variable">$path</span>"</span> --max-size <span class="variable">$MinSize</span>    <span class="comment">#删除多余的文件</span></span><br><span class="line">    rclone rmdirs -v <span class="string">"<span class="variable">$downloadpath</span>"</span> --leave-root    <span class="comment">#删除空目录，--delete-empty-src-dirs 参数已实现，加上无所谓。</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    rm -vf <span class="string">"<span class="variable">$path</span>"</span>.aria2    <span class="comment">#删除残留的.aria2文件</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>保存后给予执行权限</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/root/</span>rcloneupload.sh</span><br></pre></td></tr></table></figure><p>然后编辑<code>Aria2</code>配置文件，在末尾加上一行<code>on-download-complete=/root/rcloneupload.sh</code>即可，后面为脚本的路径，意思是下载完成执行这个脚本，这个脚本具有变量千万不要手动执行。重启<code>CCAA</code>使<code>Aria2</code>配置文件生效。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/ccaa/aria2.<span class="keyword">conf</span>  #编辑aria2.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">on</span>-download-<span class="built_in">complete</span>=/root/rcloneupload.<span class="keyword">sh</span>  #末尾另起一行加上</span><br><span class="line">ccaa restart  #重启ccaa</span><br></pre></td></tr></table></figure><p>大功告成赶紧去下载看看吧。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      自建aria2离线下载+自动上传onedrive云盘
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="OneDrive" scheme="https://gyh.im/tags/OneDrive/"/>
    
      <category term="Aria2" scheme="https://gyh.im/tags/Aria2/"/>
    
  </entry>
  
  <entry>
    <title>史上最稳科学上网姿势-宝塔+v2+ws+tls+cdn</title>
    <link href="https://gyh.im/posts/8eabdcaf/"/>
    <id>https://gyh.im/posts/8eabdcaf/</id>
    <published>2020-04-01T02:21:45.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><div class="note info"><p>本教程仅为了提供技术交流，切勿去做违法之事(手动滑稽)</p></div><p>以前一直用的 <a href="/posts/9585444e/" title="233的一键脚本">233的一键脚本</a> 搭建v2ray的，上次不是白嫖到<code>euserv</code>家的免费ipv6小鸡。就想着搭建一下v2ray，结果一直不成功。经过一番搜索，终于使用官方原版的脚本搭建成功了</p><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><p>首先，你需要准备一个域名添加A记录解析到你的服务器。<br>ssh到vps，切换到root，安装BT面板 <a href="https://www.bt.cn/" target="_blank" rel="noopener">https://www.bt.cn/</a><br>成功安装后，登录宝塔，成功登录后会弹出推荐安装套件，选择一键安装相应的推荐服务，建议使用centos7。<br>安装完成后<br>接下来开始安装v2ray</p><h1 id="安装v2ray"><a class="markdownIt-Anchor" href="#安装v2ray"></a> 安装v2ray</h1><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh) <span class="comment"># 直接使用脚本</span></span><br><span class="line">systemctl start v2ray   <span class="comment"># 启动</span></span><br><span class="line">systemctl enable v2ray  <span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl restart v2ray <span class="comment"># 重启</span></span><br><span class="line">systemctl status v2ray  <span class="comment"># 状态</span></span><br><span class="line">vim /etc/v2ray/config.json <span class="comment"># 修改配置文件</span></span><br></pre></td></tr></table></figure><p>服务器配置</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"log"</span> : &#123;</span><br><span class="line">  <span class="string">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">  <span class="string">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">  <span class="string">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"inbound"</span>: &#123;</span><br><span class="line">  <span class="string">"port"</span>: <span class="number">233</span>, #自动生成的端口，须与Nignx设置的相一致，可自定义</span><br><span class="line">  <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"clients"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"d113539f-aef8-46a8-a570-8132baa0b680"</span>, #自动生成的UUID</span><br><span class="line">        <span class="string">"level"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"alterId"</span>: <span class="number">64</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"streamSettings"</span>: &#123;</span><br><span class="line">  <span class="string">"network"</span>:<span class="string">"ws"</span>,</span><br><span class="line">  <span class="string">"wsSettings"</span>: &#123;</span><br><span class="line">  <span class="string">"path"</span>: <span class="string">"/ws"</span>, #path可自定义，这里是/ws，须与Nginx和客户端的path相一致</span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">  <span class="string">"Host"</span>: <span class="string">""</span> #Host可自定于任意域名，此处没有添加</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"outbound"</span>: &#123;</span><br><span class="line">  <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">  <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"outboundDetour"</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">    <span class="string">"settings"</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">  &#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">"routing"</span>: &#123;</span><br><span class="line">  <span class="string">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="string">"ip"</span>: [</span><br><span class="line">          <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">          <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">          <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">          <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">          <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">          <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">          <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">          <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">          <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">          <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">          <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">          <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">          <span class="string">"::1/128"</span>,</span><br><span class="line">          <span class="string">"fc00::/7"</span>,</span><br><span class="line">          <span class="string">"fe80::/10"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="宝塔搭建web页面"><a class="markdownIt-Anchor" href="#宝塔搭建web页面"></a> 宝塔搭建web页面</h1><p>新建一个网站，配置ssl，利用宝塔Let’s Encrypt免费的ssl。<br>然后选择配置文件，在最后一个<code>}</code>前一行复制如下代码</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /ws &#123;</span><br><span class="line"> <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line"> <span class="attribute">proxy_pass</span> http://127.0.0.1:233;</span><br><span class="line"> <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"> <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line"> <span class="attribute">proxy_set_header</span> Connection <span class="string">"upgrade"</span>;</span><br><span class="line"> <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后重启v2ray和nginx</p><h1 id="cf自选节点"><a class="markdownIt-Anchor" href="#cf自选节点"></a> cf自选节点</h1><a href="/posts/f019efb0/" title="cloudflare自选节点">cloudflare自选节点</a><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      史上最稳科学上网姿势-宝塔+v2+ws+tls+cdn
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="宝塔" scheme="https://gyh.im/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>宝塔搭建cloudreve并配置aria2离线下载</title>
    <link href="https://gyh.im/posts/eeb69578/"/>
    <id>https://gyh.im/posts/eeb69578/</id>
    <published>2020-03-23T04:19:35.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><h2 id="cloudreve是什么"><a class="markdownIt-Anchor" href="#cloudreve是什么"></a> Cloudreve是什么</h2><p>Cloudreve 是个公有网盘程序，你可以用它快速搭建起自己的网盘服务，公有云/私有云都可。Cloudreve 底层支持 本机存储、从机存储、阿里云OSS、又拍云、腾讯云COS、七牛云存储、OneDrive（国际版/世纪互联版），每种存储方式的上传下载都是客户端直传。你可以为不同用户组绑定不同存储策略，捐助获得Pro版后，可以为一个用户组分配多个存储方式，用户可以在前台自由切换。</p><h2 id="特性列表"><a class="markdownIt-Anchor" href="#特性列表"></a> 特性列表</h2><ul><li>支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端</li><li>上传/下载 支持客户端直传，支持下载限速</li><li>可对接 Aria2 离线下载（支持所有存储策略，下载完成后自动中转）</li><li>在线 压缩/解压缩、多文件打包下载（支持所有存储策略）</li><li>覆盖全部存储策略的 WebDAV 协议支持</li><li>拖拽上传、目录上传、流式上传处理</li><li>文件拖拽管理</li><li>多用户、用户组</li><li>创建文件、目录的分享链接，可设定自动过期</li><li>视频、图像、音频、文本、Office 文档在线预览</li><li>自定义配色、黑暗模式、PWA 应用、全站单页应用</li><li>All-In-One 打包，开箱即用</li></ul><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><p>去github上下载源码包：<a href="https://github.com/cloudreve/Cloudreve/releases" target="_blank" rel="noopener">https://github.com/cloudreve/Cloudreve/releases</a></p><p>解压并安装</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#解压获取到的主程序</span></span><br><span class="line">tar -zxvf cloudreve_VERSION_OS_ARCH.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta"># 赋予执行权限</span></span><br><span class="line">chmod +x ./cloudreve</span><br><span class="line"></span><br><span class="line"><span class="meta"># 启动 Cloudreve</span></span><br><span class="line">./cloudreve</span><br></pre></td></tr></table></figure><p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的cloudreve.db，重新启动主程序以初始化新的管理员账户。<br>Cloudreve 默认会监听5212端口。你可以在浏览器中访问<code>http://服务器IP:521</code>进入 Cloudreve。</p><h1 id="宝塔反向代理和进程守护"><a class="markdownIt-Anchor" href="#宝塔反向代理和进程守护"></a> 宝塔反向代理和进程守护</h1><ul><li>安装Supervisor管理器，并添加守护进程</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200323122803.png"  alt=""></p><ul><li>添加反向代理</li></ul><p>首先创建一个新站点</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200323123001.png"  alt=""></p><p>申请ssl，并创建反向代理。要先申请ssl，再创建反向代理。不然申请ssl会不成功</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200323123215.png"  alt=""></p><h1 id="安装aria2"><a class="markdownIt-Anchor" href="#安装aria2"></a> 安装aria2</h1><p>这里使用<a href="https://www.moerats.com/" target="_blank" rel="noopener">萌鼠的脚本</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//www.moerats.<span class="keyword">com</span>/usr/<span class="keyword">shell</span>/Aria2/aria2.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> aria2.<span class="keyword">sh</span> &amp;&amp; bash aria2.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>安装完成后，如果我们想修改密码、下载文件位置、端口的话，可以使用命令bash <a href="http://aria2.sh" target="_blank" rel="noopener">aria2.sh</a>，再选择修改配置即可，这里建议使用该脚本配置自动更新<code>BT-Tracker</code>服务器，对下载BT有加成。</p><p>在cloudreve配置aria2</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200323132623.png"  alt=""></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      宝塔搭建cloudreve并配置aria2离线下载
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Cloudreve" scheme="https://gyh.im/tags/Cloudreve/"/>
    
      <category term="Aria2" scheme="https://gyh.im/tags/Aria2/"/>
    
  </entry>
  
  <entry>
    <title>debian安装docker</title>
    <link href="https://gyh.im/posts/36e1b6fa/"/>
    <id>https://gyh.im/posts/36e1b6fa/</id>
    <published>2020-03-22T07:20:35.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>官方文档：<a href="https://docs.docker.com/install/linux/docker-ce/debian/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/debian/</a></p><h1 id="卸载旧版本"><a class="markdownIt-Anchor" href="#卸载旧版本"></a> 卸载旧版本</h1><p>旧版本被称为docker，<a href="http://docker.io" target="_blank" rel="noopener">docker.io</a> 或docker-engine。如果已安装，请卸载它们：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><h1 id="设置存储库"><a class="markdownIt-Anchor" href="#设置存储库"></a> 设置存储库</h1><ul><li>更新apt包索引：</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure><ul><li>安装包以允许apt通过HTTPS使用存储库：</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install <span class="string">\</span></span><br><span class="line">    apt-transport-https <span class="string">\</span></span><br><span class="line">    ca-certificates <span class="string">\</span></span><br><span class="line">    curl <span class="string">\</span></span><br><span class="line">    gnupg2 <span class="string">\</span></span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><ul><li>添加Docker的官方GPG密钥：</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL http<span class="variable">s:</span>//download.docker.<span class="keyword">com</span>/linux/debian/gpg | sudo apt-key <span class="built_in">add</span> -</span><br></pre></td></tr></table></figure><ul><li>验证您现在拥有带指纹的密钥</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="type">key</span> fingerprint <span class="number">0</span>EBFCD88</span><br></pre></td></tr></table></figure><ul><li>添加源</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add</span><span class="bash">-apt-repository \</span></span><br><span class="line"><span class="bash">   <span class="string">"deb [arch=amd64] https://download.docker.com/linux/debian \</span></span></span><br><span class="line"><span class="bash">   $(lsb_release -cs) \</span></span><br><span class="line"><span class="bash">   stable<span class="string">"</span></span></span><br></pre></td></tr></table></figure><h1 id="安装docker-ce"><a class="markdownIt-Anchor" href="#安装docker-ce"></a> 安装DOCKER CE</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">apt-<span class="built_in">get</span> install docker-<span class="keyword">ce</span> docker-<span class="keyword">ce</span>-cli containerd.io</span><br></pre></td></tr></table></figure><h1 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h1><ul><li>启动docker(如果没有启动)</li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> docker</span><br></pre></td></tr></table></figure><ul><li>查看版本</li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="comment">--version</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      debian安装docker
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Docker" scheme="https://gyh.im/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>ipv4的vps获取ipv6地址</title>
    <link href="https://gyh.im/posts/2242452b/"/>
    <id>https://gyh.im/posts/2242452b/</id>
    <published>2020-03-19T03:01:21.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="注册账户"><a class="markdownIt-Anchor" href="#注册账户"></a> 注册账户</h1><p>首先前往下面这个网站注册一个账户：</p><p><a href="https://www.tunnelbroker.net" target="_blank" rel="noopener">https://www.tunnelbroker.net</a></p><p>注册账户的过程就不说了，注册完账户之后，点击左侧的 Create Regular Tunnel，如下所示。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319110333.png"  alt=""></p><h1 id="修改vps端配置"><a class="markdownIt-Anchor" href="#修改vps端配置"></a> 修改vps端配置</h1><p>选择你对应的操作系统，我的是debain，所以就将下面的内容写入<code>/etc/network/interfaces</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">auto</span> he-ipv6</span><br><span class="line">iface he-ipv6 inet6 v4tunnel</span><br><span class="line">        address <span class="number">2001</span>:<span class="number">470</span>:<span class="number">1f</span>06:<span class="number">6f</span>3::<span class="number">2</span></span><br><span class="line">        netmask <span class="number">64</span></span><br><span class="line">        endpoint <span class="number">209.51</span><span class="number">.161</span><span class="number">.14</span></span><br><span class="line">        local your_ip</span><br><span class="line">        ttl <span class="number">255</span></span><br><span class="line">        gateway <span class="number">2001</span>:<span class="number">470</span>:<span class="number">1f</span>06:<span class="number">6f</span>3::<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319110603.png"  alt=""></p><p>重启就可以访问ipv6了，<code>ping6 www.google.com</code>来测试</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      ipv4的vps获取ipv6地址
    
    </summary>
    
    
      <category term="Linux" scheme="https://gyh.im/categories/Linux/"/>
    
    
      <category term="Ipv6" scheme="https://gyh.im/tags/Ipv6/"/>
    
  </entry>
  
  <entry>
    <title>ipv6的小鸡安装宝塔面板</title>
    <link href="https://gyh.im/posts/ea73cc4c/"/>
    <id>https://gyh.im/posts/ea73cc4c/</id>
    <published>2020-03-18T12:34:32.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>前几天在论坛看到德国的一家vps商家有免费的ipv6小鸡，就去白嫖了一个，就是这家<a href="https://www.euserv.com/en/" target="_blank" rel="noopener">euserv</a></p><h1 id="修改dns"><a class="markdownIt-Anchor" href="#修改dns"></a> 修改dns</h1><p>首先给ipv6小鸡安装好系统，我选择的<code>debain9</code>,修改dns</p><p>修改<code>/etc/resolv.conf</code>的<code>nameserver</code>值即可</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver <span class="number">2001</span>:67c:<span class="number">2b0</span>::<span class="number">4</span></span><br><span class="line">nameserver <span class="number">2001</span>:67c:<span class="number">2b0</span>::<span class="number">6</span></span><br></pre></td></tr></table></figure><blockquote><p>欧洲有一些公益组织提供免费的DNS64+NAT64服务，让ipv6 only 访问ipv4的网站比如下面这两个。</p></blockquote><blockquote><p><a href="http://www.trex.fi/2011/dns64.html" target="_blank" rel="noopener">http://www.trex.fi/2011/dns64.html</a><br>2001:67c:2b0::4<br>2001:67c:2b0::6</p></blockquote><blockquote><p><a href="https://go6lab.si/current-ipv6-tests/nat64dns64-public-test/" target="_blank" rel="noopener">https://go6lab.si/current-ipv6-tests/nat64dns64-public-test/</a><br>2001:67c:27e4:15::6411<br>2001:67c:27e4::64</p></blockquote><h1 id="安装bt"><a class="markdownIt-Anchor" href="#安装bt"></a> 安装bt</h1><ol><li>去<a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">宝塔官网</a>找到对应版本的安装命令，我的时debain，命令如下</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O <span class="keyword">install</span>.sh http://download.bt.cn/<span class="keyword">install</span>/<span class="keyword">install</span>-ubuntu_6.<span class="number">0</span>.sh &amp;&amp; bash <span class="keyword">install</span>.sh</span><br></pre></td></tr></table></figure><ol start="2"><li>安装lnmp环境，进入宝塔面板会弹出一键安装页面</li></ol><h1 id="bt套cf"><a class="markdownIt-Anchor" href="#bt套cf"></a> bt套cf</h1><h2 id="准备域名"><a class="markdownIt-Anchor" href="#准备域名"></a> 准备域名</h2><p>你需要一个域名，并添加AAAA记录到你的ipv6小鸡</p><h2 id="bt放行8080端口"><a class="markdownIt-Anchor" href="#bt放行8080端口"></a> bt放行8080端口</h2><p>cloudflare支持一下端口，所以要更改bt面板的端口<br>By default, Cloudflare proxies traffic destined for the HTTP/HTTPS ports listed below<br>HTTP ports supported by Cloudflare:<br>80<br>8080<br>8880<br>2052<br>2082<br>2086<br>2095<br>HTTPS ports supported by Cloudflare:<br>443<br>2053<br>2083<br>2087<br>2096</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319081913.png"  alt=""></p><h2 id="修改bt端口和域名绑定"><a class="markdownIt-Anchor" href="#修改bt端口和域名绑定"></a> 修改bt端口和域名绑定</h2><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319082401.png"  alt=""></p><h2 id="新建一个站点"><a class="markdownIt-Anchor" href="#新建一个站点"></a> 新建一个站点</h2><p>宝塔面板中新建一个站点。也不要什么php版本了，选择纯静态就可以了。域名，就是你准备好的域名。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319082956.png"  alt=""></p><h2 id="设置反代"><a class="markdownIt-Anchor" href="#设置反代"></a> 设置反代</h2><p>这一步很重要，在刚刚的新建的网站里面设置一个反代。</p><p>目标URL：<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319083219.png"  alt=""></p><h2 id="更改解析到cf"><a class="markdownIt-Anchor" href="#更改解析到cf"></a> 更改解析到cf</h2><p>可以自选节点，或者使用默认分配的节点</p><a href="/posts/f019efb0/" title="cloudflare自选节点">cloudflare自选节点</a><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>这样套了cf之后，就不需要考虑本地是否有ipv6了，因为是访问的cf的节点</p><p>2020-03-22更新：</p><div class="note info"><p>宝塔面板有个插件是<code>堡塔面板静态文件加速 1.0</code>，可以实现宝塔的静态文件加速，可以加快访问速度</p></div><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      ipv6的小鸡安装宝塔面板
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Ipv6" scheme="https://gyh.im/tags/Ipv6/"/>
    
      <category term="宝塔" scheme="https://gyh.im/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>vps测速及科学上网常用脚本</title>
    <link href="https://gyh.im/posts/9585444e/"/>
    <id>https://gyh.im/posts/9585444e/</id>
    <published>2020-03-18T10:00:10.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="科学上网"><a class="markdownIt-Anchor" href="#科学上网"></a> 科学上网</h1><h2 id="ssr"><a class="markdownIt-Anchor" href="#ssr"></a> ssr</h2><p>逗比ssr脚本，会自动开启锐速，可配置锐速和bbr</p><h3 id="单用户脚本"><a class="markdownIt-Anchor" href="#单用户脚本"></a> 单用户脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/liuyaanng/SSR/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; ./ssr.sh</span><br></pre></td></tr></table></figure><h3 id="多用户管理脚本"><a class="markdownIt-Anchor" href="#多用户管理脚本"></a> 多用户管理脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</span><br></pre></td></tr></table></figure><blockquote><p>逗比的ssr脚本，安装chaccha20的那个选项是坏的，安装上chacha20，而且安装时间非常繁琐，大家可以去百度去搜索对应你系统的chacha20的安装方式。</p></blockquote><blockquote><p>介绍个黑科技 混淆选择 tls1.2_ticket_auth ，同时混淆参数使用 <a href="http://officecdn.microsoft.com" target="_blank" rel="noopener">officecdn.microsoft.com</a></p></blockquote><h2 id="v2ray"><a class="markdownIt-Anchor" href="#v2ray"></a> v2ray</h2><p>2333的v2ray脚本，会自动开启bbr，可配置bbr和锐速</p><h3 id="ipv4脚本"><a class="markdownIt-Anchor" href="#ipv4脚本"></a> ipv4脚本</h3><p>一般有ipv4的选这个就可以了，只有ipv6的vps选下面的ipv6版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><blockquote><p>他脚本的ws+tls大部分人不能用，是脚本的问题。(我自己能用)</p></blockquote><p>推荐另一个脚本 （只有ws+tls+web的功能）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh) | tee v2ray_ins.log</span><br></pre></td></tr></table></figure><blockquote><p>不推荐使用那些带web的v2脚本，执行效率差，占用内存高，还会和宝塔等操作界面冲突，导致宝塔等打不开。</p></blockquote><h3 id="ipv6版本"><a class="markdownIt-Anchor" href="#ipv6版本"></a> ipv6版本</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">设置时间</span><br><span class="line"><span class="keyword">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/<span class="built_in">localtime</span></span><br><span class="line"></span><br><span class="line">查看是否正确</span><br><span class="line">date -R</span><br><span class="line"></span><br><span class="line">安装v2ray_ipv6</span><br><span class="line">apt-<span class="built_in">get</span> <span class="keyword">update</span> &amp;&amp; apt-<span class="built_in">get</span> install curl -<span class="keyword">y</span></span><br><span class="line">bash &lt;(curl -sL http<span class="variable">s:</span>//scaleya.netlify.<span class="keyword">com</span>/share/v2ray233_6.<span class="keyword">sh</span>)</span><br></pre></td></tr></table></figure><blockquote><p>欧洲有一些公益组织提供免费的DNS64+NAT64服务，让ipv6 only 访问ipv4的网站比如下面这两个。</p></blockquote><blockquote><p><a href="http://www.trex.fi/2011/dns64.html" target="_blank" rel="noopener">http://www.trex.fi/2011/dns64.html</a><br>2001:67c:2b0::4<br>2001:67c:2b0::6</p></blockquote><blockquote><p><a href="https://go6lab.si/current-ipv6-tests/nat64dns64-public-test/" target="_blank" rel="noopener">https://go6lab.si/current-ipv6-tests/nat64dns64-public-test/</a><br>2001:67c:27e4:15::6411<br>2001:67c:27e4::64<br>一般修改/etc/resolv.conf的nameserver值即可</p></blockquote><h2 id="bbr锐速四合一脚本"><a class="markdownIt-Anchor" href="#bbr锐速四合一脚本"></a> BBr/锐速四合一脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><blockquote><p>这个四合一脚本中锐速不能使用，教大家一个使用锐速的办法，先用四合一的脚本安装上锐速内核，然后用萌咖大佬的启动方式https://moeclub.org/2017/03/09/14/?spm=33.3 去启动锐速</p></blockquote><h2 id="bbr锐速四合一脚本升级版"><a class="markdownIt-Anchor" href="#bbr锐速四合一脚本升级版"></a> bbr/锐速四合一脚本升级版</h2><p>此脚本可以一键快速安装BBR原版内核（5.4.13/5.4.14/5.5.0）、BBRplus版内核（4.14.168）、多种Lotserver(锐速)内核、xanmod版内核（5.5.1）、BBR2测试版内核（5.4.0）、Zen版内核（5.5.2）。加速方案也有多种选择：BBR+FQ加速、BBR+CAKE加速 、BBRplus+FQ版加速、Lotserver(锐速)加速、BBR2+FQ加速、BBR2+CAKE加速、BBR2+FQ+ECN加速、BBR2+CAKE+ECN加速，加速模式挺全面的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">"https://github.000060000.xyz/tcpx.sh"</span> &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh</span><br></pre></td></tr></table></figure><p>卸载内核版本，同原作者版本，删除安装内核以外的所有内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">"https://github.000060000.xyz/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>支持版本:</p><p>for bbr/bbrplus</p><p>centos6,7,8<br>debian8.9.10<br>ubuntu16,18,19</p><p>锐速内核稍微更新</p><p>xanmod/Zen/BBR2 只添加了centos7,8 debian9,10</p><p>提示Abort kernel removal? 选择No</p><p>5.5内核及BBR2内核支持cake队列</p><p>双持bbr+锐速</p><p>bbr 添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"net.core.default_qdisc=fq"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"net.ipv4.tcp_congestion_control=bbr"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>编辑锐速文件<br><code>nano /appex/etc/config</code></p><p>检测代码有BUG，如果锐速正常 运行查看<br><code>bash /appex/bin/lotServer.sh status | grep &quot;LotServer&quot;</code></p><p>检查bbr 内核默认bbr算法不会有输出<br><code>lsmod | grep bbr</code></p><p>检查centos安装内核<br><code>grubby --info=ALL|awk -F= '$1==&quot;kernel&quot; {print i++ &quot; : &quot; $2}'</code></p><p>查看当前支持TCP算法<br><code>cat /proc/sys/net/ipv4/tcp_allowed_congestion_control</code></p><p>查看当前运行的算法<br><code>cat /proc/sys/net/ipv4/tcp_congestion_control</code></p><p>查看当前队列算法<br><code>sysctl net.core.default_qdisc</code></p><p>命令： <code>uname -a</code><br>作用： 查看系统内核版本号及系统名称</p><p>命令： <code>cat /proc/version</code><br>作用： 查看目录&quot;/proc&quot;下version的信息，也可以得到当前系统的内核版本号及系统名称</p><p>真实队列查看？ 更改队列算法可能需要重启生效<br><code>tc -s qdisc show</code></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p>bbrplus是适用性最广的，效果兼容性又好的加速方式，如果你不知道用啥加速，就选它。只是有的机器上会有断流的问题。</p></blockquote><blockquote><p>锐速是加速效果最好的，缺点就是内核太老，而且占用内存高，并且在线路不是很好的机器上用锐速好，线路好的话用BBR比锐速合适。</p></blockquote><blockquote><p>最稳妥的方式就是v2 ws+tls+web这类方式，是这类。目前我觉得套cf完全没必要，等到ip被墙了再套也不迟，这里有一种情况是推荐套cf的，就是你vps的线路并不好，你用起来没速度，而你的网络又和cf的兼容性比较好，这样可以套cf，这里就相当于你用的事cf啦哈哈哈，当然晚上该炸还是炸，这就是我为啥不推荐套cf的原因，晚上太差啦。</p></blockquote><blockquote><p>v2对cpu负载要求比较高，ssr不在高墙发威期间也是够用的，并且推荐使用chacha20和tls1.2_ticket_auth，谁用都说好。</p></blockquote><h1 id="测试脚本"><a class="markdownIt-Anchor" href="#测试脚本"></a> 测试脚本</h1><h2 id="benchsh"><a class="markdownIt-Anchor" href="#benchsh"></a> <a href="http://Bench.sh" target="_blank" rel="noopener">Bench.sh</a></h2><p>秋水逸冰大佬的写的Bench.sh脚本</p><blockquote><p>特点<br>显示当前测试的各种系统信息；<br>取自世界多处的知名数据中心的测试点，下载测试比较全面；<br>支持 IPv6 下载测速；<br>IO 测试三次，并显示平均值。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">curl -Lso- bench.sh | bash</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">wget -qO- 86.re/bench.sh | bash</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">curl -so- 86.re/bench.sh | bash</span><br></pre></td></tr></table></figure><h2 id="superbenchsh"><a class="markdownIt-Anchor" href="#superbenchsh"></a> <a href="http://SuperBench.sh" target="_blank" rel="noopener">SuperBench.sh</a></h2><p>老鬼大佬的SuperBench测试脚本</p><blockquote><p>特点<br>改进了显示的模式，基本参数添加了颜色，方面区分与查找。<br>I/O测试，更改了原来默认的测试的内容，采用小文件，中等文件，大文件，分别测试IO性能，然后取平均值。<br>速度测试替换成了 Superspeed 里面的测试，第一个默认节点是，Speedtest 默认，其他分别测试到中国电信，联通，移动，各三个不同地区的速度。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br></pre></td></tr></table></figure><h2 id="zbenchsh"><a class="markdownIt-Anchor" href="#zbenchsh"></a> <a href="http://Zbench.sh" target="_blank" rel="noopener">Zbench.sh</a></h2><p>漏水和kirito大佬的测试脚本</p><blockquote><p>特点<br>基于SuperBench二次修改<br>增加Ping以及路由测试功能<br>可以生成测评报告，可以很方便地分享给其他朋友看自己的测评数据。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh &amp;&amp; bash ZBench-CN.sh</span><br></pre></td></tr></table></figure><h2 id="lemonbenchsh"><a class="markdownIt-Anchor" href="#lemonbenchsh"></a> <a href="http://LemonBench.sh" target="_blank" rel="noopener">LemonBench.sh</a></h2><p>LemonBench工具(别名LBench、柠檬Bench)，是一款针对Linux服务器设计的服务器性能测试工具。通过综合测试，可以快速评估服务器的综合性能，为使用者提供服务器硬件配置信息。</p><blockquote><p>特点<br>服务器基础信息(CPU信息/内存信息/Swap信息/磁盘空间信息等)<br>Speedtest网速测试 (本地到最近源及国内各地域不同线路的网速)<br>磁盘测试(4K块/1M块 直接写入测试)<br>路由追踪测试(追踪到国内和海外不同线路的路由信息)<br>Spoofer测试(获取详细网络信息，快速判断服务器接入线路)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast</span><br></pre></td></tr></table></figure><h2 id="superspeed"><a class="markdownIt-Anchor" href="#superspeed"></a> SuperSpeed</h2><p>测试三网速度，节点多</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(<span class="name">curl</span> -Lso- https<span class="symbol">://git</span>.io/superspeed)</span><br></pre></td></tr></table></figure><h1 id="swap交换分区脚本"><a class="markdownIt-Anchor" href="#swap交换分区脚本"></a> Swap交换分区脚本</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//www.moerats.<span class="keyword">com</span>/usr/<span class="keyword">shell</span>/swap.<span class="keyword">sh</span> &amp;&amp; bash swap.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      vps测速及科学上网常用脚本
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Linux" scheme="https://gyh.im/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>安装HTML5_Speedtest测试服务器到本地速度和延迟</title>
    <link href="https://gyh.im/posts/afe4c68d/"/>
    <id>https://gyh.im/posts/afe4c68d/</id>
    <published>2020-03-18T09:51:23.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>HTML5 Speedtest相对于测试文件，能测的东西更多，而且不用担心多线程下载的问题，服务器测试或者买卖二手服务器是很实用的工具。</p><h1 id="宝塔面板搭建-html5-speedtest"><a class="markdownIt-Anchor" href="#宝塔面板搭建-html5-speedtest"></a> 宝塔面板搭建 HTML5 Speedtest</h1><p>作者源码：<a href="https://codeload.github.com/librespeed/speedtest/zip/master" target="_blank" rel="noopener">https://codeload.github.com/librespeed/speedtest/zip/master</a></p><p>宝塔面板 – 网站 – 新建站点</p><p>可以使用域名也可以使用IP，如果使用IP，最好指定端口，然后在面板中放行端口即可；</p><p>注意：PHP版本至少要是7.0以上</p><p>将下载的源码压缩包上传解压至网站根目录或者直接在宝塔远程下载文件</p><p>这里需要修改下源码文件，找到 example-singleServer-pretty.html 文件</p><p>然后将文件重命名为 index.html</p><p>搭建完成，现在可以打开域名或IP即可；</p><p>截图：</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200318175450.png"  alt=""></p><h1 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h1><p>如果打不开，需要宝塔面板或VPS控制后台放行6688端口</p><p>搭建完成，打开 <a href="http://xn--VPSIP-r52h715u:6688" target="_blank" rel="noopener">http://你VPS的IP:6688</a> 即可</p><p>如果CentOS 7打不开，需要打开防火墙端口，或者关掉防火墙</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打开6688端口</span></span><br><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--add-port</span>=6688/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="builtin-name">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h1 id="go版本的speedtest"><a class="markdownIt-Anchor" href="#go版本的speedtest"></a> go版本的speedtest</h1><p>html搭建起来很繁琐，今天推荐个一键的脚本。</p><p>GITHUB作者原项目：<a href="https://github.com/BigMangos/speedtest-go-script" target="_blank" rel="noopener">https://github.com/BigMangos/speedtest-go-script</a></p><blockquote><p>支持的操作系统：CentOS 7-8、Debian 8-10、Ubuntu 16-18<br>操作系统要求64位</p></blockquote><p>一键安装脚本（使用root用户）：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lsk http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/BigMangos/speedtest-<span class="keyword">go</span>-script/master/install.<span class="keyword">sh</span>)</span><br></pre></td></tr></table></figure><p>如果出现<code>-bash: curl: command not found</code>错误，说明<code>curl</code>命令没安装，请输入下面的命令先安装curl，再回过头来执行上面的命令再来一次。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#Debian or Ubuntu</span></span><br><span class="line">apt-<span class="keyword">get</span> -y install curl</span><br><span class="line"><span class="meta">#CentOS</span></span><br><span class="line">yum -y install curl</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      安装HTML5_Speedtest测试服务器到本地速度和延迟
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="SpeedTest" scheme="https://gyh.im/tags/SpeedTest/"/>
    
  </entry>
  
  <entry>
    <title>ServerStatus-Hotaru云探针的安装与配置</title>
    <link href="https://gyh.im/posts/c51b991a/"/>
    <id>https://gyh.im/posts/c51b991a/</id>
    <published>2020-03-18T09:44:15.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>脚本来自：<a href="https://www.aptx.xin/serverstatus-hotaru.html" target="_blank" rel="noopener">https://www.aptx.xin/serverstatus-hotaru.html</a></p><p>Github：<a href="https://github.com/CokeMine/ServerStatus-Hotaru" target="_blank" rel="noopener">https://github.com/CokeMine/ServerStatus-Hotaru</a></p><h1 id="服务端安装"><a class="markdownIt-Anchor" href="#服务端安装"></a> 服务端安装</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/CokeMine/ServerStatus-Hotaru/master/status.<span class="keyword">sh</span></span><br><span class="line">bash status.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、选择<span class="number">1</span>，配置服务端</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、没什么需求的话，端口建议默认就好</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、如果本地没装别的如Nginx或者Apache之类的，直接Y就好，如果希望在bt管理，选择n，并记录网站的目录位置</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、绑定域名或IP访问</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、端口自主选择</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、添加客户端：选择<span class="number">7</span>后选<span class="number">1</span></span><br><span class="line"></span><br><span class="line">剩下的信息自己填就好了</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、删除（修改）服务端：选<span class="number">7</span>后在选择</span><br></pre></td></tr></table></figure><h1 id="客户端安装"><a class="markdownIt-Anchor" href="#客户端安装"></a> 客户端安装</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bash </span>status.<span class="keyword">sh </span>c</span><br></pre></td></tr></table></figure><p>后选1然后按照服务端填写的即可</p><blockquote><p>主要思路就是安装客户端和服务端</p></blockquote><h1 id="宝塔管理"><a class="markdownIt-Anchor" href="#宝塔管理"></a> 宝塔管理</h1><p>其实我们可以选择宝塔来管理这个页面，安装服务端时会让你选择是否自动部署，选择否，并记录网站目录。记得在宝塔放行当时选择的端口，默认是35601</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319090236.png"  alt=""></p><h1 id="ipv6客户端"><a class="markdownIt-Anchor" href="#ipv6客户端"></a> ipv6客户端</h1><blockquote><p>当服务端是<code>ipv6 only</code>时,其他服务器安装客户端的操作</p></blockquote><p>安装好客户端后还需要：</p><p>替换文件status-client.py文件</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -f /usr/local/ServerStatus/<span class="keyword">client</span>/status-<span class="keyword">client</span>.py</span><br><span class="line"></span><br><span class="line">wget -O /usr/local/ServerStatus/<span class="keyword">client</span>/status-<span class="keyword">client</span>.py https:<span class="comment">//raw.githubusercontent.com/CokeMine/ServerStatus-Hotaru/master/clients/status-client_ipv6.py</span></span><br><span class="line"></span><br><span class="line">bash status.sh c <span class="meta">#修改配置</span></span><br></pre></td></tr></table></figure><h1 id="相关开源项目"><a class="markdownIt-Anchor" href="#相关开源项目"></a> 相关开源项目</h1><ul><li>ServerStatus-Toyo：<a href="https://github.com/ToyoDAdoubiBackup/ServerStatus-Toyo" target="_blank" rel="noopener">https://github.com/ToyoDAdoubiBackup/ServerStatus-Toyo</a></li><li>ServerStatus：<a href="https://github.com/BotoX/ServerStatus" target="_blank" rel="noopener">https://github.com/BotoX/ServerStatus</a></li><li>mojeda: <a href="https://github.com/mojeda" target="_blank" rel="noopener">https://github.com/mojeda</a></li><li>mojeda’s ServerStatus: <a href="https://github.com/mojeda/ServerStatus" target="_blank" rel="noopener">https://github.com/mojeda/ServerStatus</a></li><li>BlueVM’s project: <a href="http://www.lowendtalk.com/discussion/comment/169690#Comment_169690" target="_blank" rel="noopener">http://www.lowendtalk.com/discussion/comment/169690#Comment_169690</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      ServerStatus-Hotaru云探针的安装与配置
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="ServerStatus" scheme="https://gyh.im/tags/ServerStatus/"/>
    
  </entry>
  
  <entry>
    <title>TestRace-VPS回程路由一键测试脚本</title>
    <link href="https://gyh.im/posts/bcc8a0c7/"/>
    <id>https://gyh.im/posts/bcc8a0c7/</id>
    <published>2020-03-18T09:36:19.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><p>这是一个用于在Linux上测试回程路由的脚本，这里的回程路由是指从你的机器出发到指定节点的路由。</p><p>Github地址：<a href="https://github.com/nanqinlang-script/testrace" target="_blank" rel="noopener">https://github.com/nanqinlang-script/testrace</a></p><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><p>运行命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/nanqinlang-script/testrace/master/testrace.<span class="keyword">sh</span></span><br><span class="line">bash testrace.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>在运行脚本后，会出现三个选项供以选择：</p><pre><code>- 选择一个节点进行测试- 四网路由快速测试- 手动输入ip进行测试</code></pre><p>选项说明：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、选择一个节点进行测试</span><br><span class="line">本脚本以内置移动/联通/电信/教育网四网的多个节点。</span><br><span class="line">选择<span class="number">1</span>回车后，会列出这些节点的列表。</span><br><span class="line">选择其中一个测试完成后，可以继续选择节点测试。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、四网路由快速测试</span><br><span class="line">此模式会对以下几个节点进行回程路由测试。</span><br><span class="line">此模式测试的节点包括：</span><br><span class="line">电信</span><br><span class="line">上海电信(天翼云)</span><br><span class="line">厦门电信CN2</span><br><span class="line">联通</span><br><span class="line">浙江杭州联通</span><br><span class="line">移动</span><br><span class="line">浙江杭州移动</span><br><span class="line">教育网</span><br><span class="line">北京教育网</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、手动输入ip进行测试</span><br><span class="line">此模式是由用户 手动输入要测试的目标ip</span><br><span class="line">每次测试完成后，可选择继续测试其它ip</span><br></pre></td></tr></table></figure><h1 id="相关目录"><a class="markdownIt-Anchor" href="#相关目录"></a> 相关目录</h1><p>脚本的安装目录位于<code>/home/testrace</code><br>测试完成并退出脚本后，会生成测试的记录文件于<code>/home/testrace/testrace.log</code></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      TestRace:VPS回程路由一键测试脚本
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="TestRace" scheme="https://gyh.im/tags/TestRace/"/>
    
  </entry>
  
  <entry>
    <title>利用heroku搭建免费的onemanager</title>
    <link href="https://gyh.im/posts/7386aa8e/"/>
    <id>https://gyh.im/posts/7386aa8e/</id>
    <published>2020-03-06T02:37:05.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在上一篇文章中，我搭建了一个<code>rclone</code> 实现onedrive在windows中上传下载文件，按理说是可以触发office的api的，在网上爬文，发现了<code>onemanager</code>。<br>onemanager是一款强大的OneDrive目录列表程序，支持的功能比OneIndex更多。支持无服务器一键搭建，支持腾讯SCF服务搭建，基本上能用的搭建方式都支持，而且支持OneDrive商业版、OneDrive个人版和世纪互联版。支持多盘绑定，支持访客上传文件，图床模式，可以让访客上传文件做为图床使用，非常的方便。</p><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><h2 id="注册"><a class="markdownIt-Anchor" href="#注册"></a> 注册</h2><p>GitHub开源网址：<a href="https://github.com/qkqpttgf/OneManager-php" target="_blank" rel="noopener">https://github.com/qkqpttgf/OneManager-php</a></p><p>进入到github中，可以看到这个醒目的button，这篇文章正是利用heroku搭建免费的onemanager，不需要其他的服务器和主机。<br>点击那个按钮，进入注册（需要富强，注册引入了google人机验证），qq邮箱已被屏蔽，推荐使用gmail</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306104640.png"  alt=""></p><h2 id="创建app"><a class="markdownIt-Anchor" href="#创建app"></a> 创建app</h2><ul><li>在“App name”填写您的应用名称，“Choose a region”选择一个服务区域选择“United States”。 注意：“App name”填写的应用名称就是您次域名.herokuapp.com的前缀，名称必须以小写字母开头</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102109.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102147.png"  alt=""></p><ul><li><p>点击“Deploy app”部署应用稍等片刻即可完成初始化。再点击“Manager APP”管理应用程序</p></li><li><p>点击“Setting”设置应用，直接往下拉在“Domains”处可以看到您的次域名（如果您已经填加了信用卡账户已验证，可以绑定自己的域名）点击您的次域名。</p></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102226.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102251.png"  alt=""></p><ul><li>单击此处“Click to install the project”安装OneManager-PHP项目</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102314.png"  alt=""></p><ul><li>点击“新建API Key”获得API，在“API Key”处点击后面的“Reveal”显示您的API Key，复制API Key粘贴至API Key。“Set admin password”设置管理员密码，点击“确认”。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102617.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102421.png"  alt=""></p><ul><li>安装完成后登陆➠管理➠设置，添加OneDrive盘。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102705.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102705.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102808.png"  alt=""></p><ul><li>选择“MSC:国际版，自己申请应用ID与机密”，点击“申请应用ID与机密”。申请教育版的OneDrive账户即可申请获取ID和钥密，目前普通帐号也已经可以申请获取应用ID和钥密。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102854.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306102940.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306103008.png"  alt=""></p><ul><li>将获取的应用机密和应用ID分别填入client_secret和client_id，点击“确认”。之后就会跳转到下买你的界面</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306103100.png"  alt=""></p><h1 id="反向代理自选cloudflare节点"><a class="markdownIt-Anchor" href="#反向代理自选cloudflare节点"></a> 反向代理,自选cloudflare节点</h1><p>由于heroku不绑定信用卡，就不能自定义域名。我觉得在heroku上绑卡没必要。所以我利用了cloudflare的workers功能实现了自定义域名。</p><p>首先你需要把域名添加进cloudflare，有两种方式，一种是通过dns接入，这种方式完全把域名交给cloudflare了。另一方式是通过cloudflare Partners的方式，这种方式可以不用dns接入。我是用的是<a href="https://cdn.moeelf.com/" target="_blank" rel="noopener">萌精灵</a>，详细的cf自选节点方法参见：<a href="/posts/f019efb0/" title="cloudflare自选节点">cloudflare自选节点</a></p><ul><li><p>进入萌精灵，登录你的cloudflare账号，添加域名。</p></li><li><p>添加好域名后就需要进入<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">cloudflare</a>,进入你刚才添加的域名中，找到<code>workers</code>-&gt;<code>manager workers</code>，第一次要叫你设置一个域名<code>你需要设置的前缀（默认为你邮箱前缀）.workers.dev</code></p></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306134315.png"  alt=""></p><ul><li>点<code>create a worker</code></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306134429.png"  alt=""></p><ul><li>将下面的代码加入左边方框中，注意修改为自己的app名称</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(</span><br><span class="line">  <span class="string">"fetch"</span>,event =&gt; &#123;</span><br><span class="line">     let url=new URL(<span class="name">event</span>.request.url)<span class="comment">;</span></span><br><span class="line">     url.hostname=<span class="string">"应用名称.herokuapp.com"</span><span class="comment">;</span></span><br><span class="line">     let request=new Request(<span class="name">url</span>,event.request)<span class="comment">;</span></span><br><span class="line">     event. respondWith(</span><br><span class="line">       fetch(<span class="name">request</span>)</span><br><span class="line">     )</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306134915.png"  alt=""></p><ul><li>完成后返回这里，点击添加<code>route</code></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306134315.png"  alt=""></p><ul><li>添加一个<code>route</code>,格式为<code>前缀.你的域名/*</code>，比如<code>pan.gyh.im/*</code>,worker选择你刚才创建的</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306135459.png"  alt=""></p><ul><li><p>回到萌精灵中添加一个cname记录，将你添加的route域名，解析到分配的workers域名中。</p></li><li><p>然后在你的域名dns提供商哪里，添加下面的解析记录</p></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200306140521.png"  alt=""></p><ul><li>最后你可以指定clodflare的访问节点，不需要用cloudflare分配的节点了，分配的节点一般较慢。只需再添加一个A记录，比如我这里是添加的<code>pan.gyh.im</code> A记录到<code>1.0.0.1</code></li><li>具体可以指定到哪些节点可参考<a href="https://ofvps.com/201907510" target="_blank" rel="noopener">这里</a></li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">适合电信的节点</span><br><span class="line"><span class="number">104.23</span><span class="number">.240</span>.*</span><br><span class="line">走欧洲各国出口 英国德国荷兰等 延迟比美国高一些 适合源站在欧洲的网站</span><br><span class="line"><span class="number">172.64</span><span class="number">.32</span>.*</span><br><span class="line">虽然去程走新加坡，但是回程线路的绕路的，实际效果不好，不推荐</span><br><span class="line"><span class="number">104.16</span><span class="number">.160</span>.*</span><br><span class="line">圣何塞的线路，比洛杉矶要快一点，推荐</span><br><span class="line"><span class="number">108.162</span><span class="number">.236</span>.*</span><br><span class="line">亚特兰大线路，延迟稳定，但是延迟较高</span><br><span class="line"></span><br><span class="line">适合移动的节点</span><br><span class="line"><span class="number">162.158</span><span class="number">.133</span>.* 走的丹麦，这一段ip只有部分能用，可以自己试一下。绕美国。</span><br><span class="line"><span class="number">198.41</span><span class="number">.214</span>.*</span><br><span class="line"><span class="number">198.41</span><span class="number">.212</span>.*</span><br><span class="line"><span class="number">198.41</span><span class="number">.208</span>.*</span><br><span class="line"><span class="number">198.41</span><span class="number">.209</span>.*</span><br><span class="line"><span class="number">172.64</span><span class="number">.32</span>.*</span><br><span class="line"><span class="number">141.101</span><span class="number">.115</span>.*</span><br><span class="line">移动走香港的IP段有很多，以上并不是全部。CF移动走香港的分直连和走ntt的效果都挺不错的，不过部分地区晚上还是会丢包。</span><br><span class="line"><span class="number">172.64</span><span class="number">.0</span>. 这是走圣何塞的，一般用香港的就行</span><br><span class="line"><span class="number">172.64</span><span class="number">.16</span>.* 欧洲线路.绕</span><br><span class="line"></span><br><span class="line"><span class="number">1.0</span><span class="number">.0</span><span class="number">.1</span>效果较好</span><br><span class="line">电信部分</span><br><span class="line">大多数省直接使用<span class="number">1.0</span><span class="number">.0</span><span class="number">.0</span>即可，延迟低，丢包少，</span><br><span class="line">少部分还是需要换ip</span><br></pre></td></tr></table></figure><h1 id="https访问"><a class="markdownIt-Anchor" href="#https访问"></a> https访问</h1><p>添加如下页面规则</p><p><code>http://domain/*</code>也可换成<code>domain/*</code>,也就是可以不要下图中的<code>http</code></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200319095023.png"  alt=""></p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ul><li><a href="https://github.com/qkqpttgf/OneManager-php" target="_blank" rel="noopener">onemanager文档</a></li><li><a href="https://ibcl.us/Heroku-V2Ray_20191014/" target="_blank" rel="noopener">在 Heroku 搭建 V2Ray</a></li><li><a href="https://bili33.top/2019/10/25/CloudFlare-Workers-Section1/" target="_blank" rel="noopener">Cloudflare Workers反代实战（上）</a></li><li><a href="https://bili33.top/2020/01/17/Cloudflare-Workers-Section2/" target="_blank" rel="noopener">Cloudflare Workers反代实战（下）</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      利用heroku搭建免费的onemanager
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="OneDrive" scheme="https://gyh.im/tags/OneDrive/"/>
    
      <category term="OneManager" scheme="https://gyh.im/tags/OneManager/"/>
    
  </entry>
  
  <entry>
    <title>Rclone挂载OneDrive方法-自建API</title>
    <link href="https://gyh.im/posts/c4f1574a/"/>
    <id>https://gyh.im/posts/c4f1574a/</id>
    <published>2020-03-05T06:00:49.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>上一篇说到申请office 365 E5的方法。但是他需要调用微软的一些api才能续订。所以我们可以在azure创建应用，来调用他的api。</p><p>这里介绍一款<code>Rclone</code>的应用，它可以调用onedrive的接口。</p><h1 id="创建-onedrive-api"><a class="markdownIt-Anchor" href="#创建-onedrive-api"></a> 创建 OneDrive API</h1><h2 id="获取-client-id"><a class="markdownIt-Anchor" href="#获取-client-id"></a> 获取 Client ID</h2><p>进入<a href="https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade" target="_blank" rel="noopener">Microsoft Azure</a> 应用注册页面。点击新注册。</p><p>名称随意，账户类型选择最后一个，重定向 URL 填写<code>http://localhost</code>。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305130452.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305130528.png"  alt=""></p><p>创建成功后你会看到 Client ID（客户端 ID），复制并保存好。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305130617.png"  alt=""></p><h2 id="获取-client-secret"><a class="markdownIt-Anchor" href="#获取-client-secret"></a> 获取 Client secret</h2><p>点击<code>证书和密码</code>，按照图中序号的顺序操作添加密码。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305130817.png"  alt=""></p><p>然后你会看到 Client secret（客户端密码），复制并保存好。</p><h2 id="设置-api-权限"><a class="markdownIt-Anchor" href="#设置-api-权限"></a> 设置 API 权限</h2><p>点击<code>API 权限</code>，按照图示进行操作，添加<code>Files.Read</code>、<code>Files.ReadWrite</code>、<code>Files.Read.All</code>、<code>Files.ReadWrite.All</code>、<code>offline_access</code>、<code>User.Read</code>这些权限。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305131305.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305131334.png"  alt=""></p><h1 id="获取-token"><a class="markdownIt-Anchor" href="#获取-token"></a> 获取 token</h1><p>在本地电脑上下载 <a href="https://rclone.org/downloads/" target="_blank" rel="noopener">rclone</a>。<br>以 Windows 为例子，解压并进入<code>rclone.exe</code>所在文件夹，在资源管理器地址栏输入cmd，回车就会在当前路径打开命令提示符。<br>替换以下命令中的<code>Client_ID</code>、<code>Client_secret</code>并执行。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rclone</span> authorize <span class="string">"onedrive"</span> <span class="string">"Client_ID"</span> <span class="string">"Client_secret"</span></span><br></pre></td></tr></table></figure><p>接下来会弹出浏览器，要求你登录账号进行授权。授权完后命令提示符窗口会出现以下信息：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> your browser doesn<span class="symbol">'t</span> open automatically go to the following link: http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">53682</span>/auth</span><br><span class="line">Log <span class="keyword">in</span> <span class="keyword">and</span> authorize rclone <span class="keyword">for</span> <span class="keyword">access</span></span><br><span class="line">Waiting <span class="keyword">for</span> code...</span><br><span class="line">Got code</span><br><span class="line">Paste the following into your remote machine <span class="comment">---&gt;</span></span><br><span class="line">&#123;<span class="string">"access_token"</span>:<span class="string">"xxxxxxxxxxxxxxxxxx"</span>,<span class="string">"expiry"</span>:<span class="string">"2020-02-22T21:18:39.5036298+08:00"</span>&#125;</span><br><span class="line">&lt;<span class="comment">---End paste</span></span><br></pre></td></tr></table></figure><p><code>{&quot;access_token&quot;:&quot;xxxxxxxxxxxxxxxxxx&quot;,&quot;expiry&quot;:&quot;2020-02-22T21:18:39.5036298+08:00&quot;}</code>整个内容（包含括号）就是 to­ken ，复制并保存好。</p><h1 id="rclone-连接-onedrive"><a class="markdownIt-Anchor" href="#rclone-连接-onedrive"></a> Rclone 连接 OneDrive</h1><p>输入 <code>rclone config</code> 命令，会出现以下信息，参照下面的注释进行操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">$ rclone config</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) <span class="keyword">Delete</span> remote</span><br><span class="line">r) <span class="keyword">Rename</span> remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) <span class="keyword">Set</span> configuration <span class="keyword">password</span></span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n <span class="comment"># 输入 n，新建</span></span><br><span class="line"><span class="keyword">name</span>&gt; od-e5-api <span class="comment"># 输入网盘名称，类似于标签，用于区分不同的网盘。</span></span><br><span class="line"><span class="keyword">Type</span> <span class="keyword">of</span> <span class="keyword">storage</span> <span class="keyword">to</span> configure.</span><br><span class="line">Enter a <span class="keyword">string</span> value. Press Enter <span class="keyword">for</span> the <span class="keyword">default</span> (<span class="string">""</span>).</span><br><span class="line"><span class="keyword">Choose</span> a <span class="built_in">number</span> <span class="keyword">from</span> below, <span class="keyword">or</span> <span class="keyword">type</span> <span class="keyword">in</span> your own <span class="keyword">value</span></span><br><span class="line"> <span class="number">1</span> / <span class="number">1</span>Fichier</span><br><span class="line">   \ <span class="string">"fichier"</span></span><br><span class="line"> <span class="number">2</span> / <span class="keyword">Alias</span> <span class="keyword">for</span> an existing remote</span><br><span class="line">   \ <span class="string">"alias"</span></span><br><span class="line"> <span class="number">3</span> / Amazon Drive</span><br><span class="line">   \ <span class="string">"amazon cloud drive"</span></span><br><span class="line"> <span class="number">4</span> / Amazon S3 Compliant <span class="keyword">Storage</span> Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM <span class="keyword">COS</span>, Minio, etc)</span><br><span class="line">   \ <span class="string">"s3"</span></span><br><span class="line"> <span class="number">5</span> / Backblaze B2</span><br><span class="line">   \ <span class="string">"b2"</span></span><br><span class="line"> <span class="number">6</span> / Box</span><br><span class="line">   \ <span class="string">"box"</span></span><br><span class="line"> <span class="number">7</span> / <span class="keyword">Cache</span> a remote</span><br><span class="line">   \ <span class="string">"cache"</span></span><br><span class="line"> <span class="number">8</span> / Citrix Sharefile</span><br><span class="line">   \ <span class="string">"sharefile"</span></span><br><span class="line"> <span class="number">9</span> / Dropbox</span><br><span class="line">   \ <span class="string">"dropbox"</span></span><br><span class="line"><span class="number">10</span> / <span class="keyword">Encrypt</span>/<span class="keyword">Decrypt</span> a remote</span><br><span class="line">   \ <span class="string">"crypt"</span></span><br><span class="line"><span class="number">11</span> / <span class="keyword">FTP</span> <span class="keyword">Connection</span></span><br><span class="line">   \ <span class="string">"ftp"</span></span><br><span class="line"><span class="number">12</span> / Google Cloud <span class="keyword">Storage</span> (this <span class="keyword">is</span> <span class="keyword">not</span> Google Drive)</span><br><span class="line">   \ <span class="string">"google cloud storage"</span></span><br><span class="line"><span class="number">13</span> / Google Drive</span><br><span class="line">   \ <span class="string">"drive"</span></span><br><span class="line"><span class="number">14</span> / Google Photos</span><br><span class="line">   \ <span class="string">"google photos"</span></span><br><span class="line"><span class="number">15</span> / Hubic</span><br><span class="line">   \ <span class="string">"hubic"</span></span><br><span class="line"><span class="number">16</span> / JottaCloud</span><br><span class="line">   \ <span class="string">"jottacloud"</span></span><br><span class="line"><span class="number">17</span> / Koofr</span><br><span class="line">   \ <span class="string">"koofr"</span></span><br><span class="line"><span class="number">18</span> / <span class="keyword">Local</span> Disk</span><br><span class="line">   \ <span class="string">"local"</span></span><br><span class="line"><span class="number">19</span> / Mail.ru Cloud</span><br><span class="line">   \ <span class="string">"mailru"</span></span><br><span class="line"><span class="number">20</span> / Mega</span><br><span class="line">   \ <span class="string">"mega"</span></span><br><span class="line"><span class="number">21</span> / Microsoft Azure <span class="built_in">Blob</span> <span class="keyword">Storage</span></span><br><span class="line">   \ <span class="string">"azureblob"</span></span><br><span class="line"><span class="number">22</span> / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line"><span class="number">23</span> / OpenDrive</span><br><span class="line">   \ <span class="string">"opendrive"</span></span><br><span class="line"><span class="number">24</span> / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">"swift"</span></span><br><span class="line"><span class="number">25</span> / Pcloud</span><br><span class="line">   \ <span class="string">"pcloud"</span></span><br><span class="line"><span class="number">26</span> / Put.io</span><br><span class="line">   \ <span class="string">"putio"</span></span><br><span class="line"><span class="number">27</span> / QingCloud <span class="keyword">Object</span> <span class="keyword">Storage</span></span><br><span class="line">   \ <span class="string">"qingstor"</span></span><br><span class="line"><span class="number">28</span> / SSH/SFTP <span class="keyword">Connection</span></span><br><span class="line">   \ <span class="string">"sftp"</span></span><br><span class="line"><span class="number">29</span> / Transparently <span class="keyword">chunk</span>/<span class="keyword">split</span> <span class="keyword">large</span> files</span><br><span class="line">   \ <span class="string">"chunker"</span></span><br><span class="line"><span class="number">30</span> / <span class="keyword">Union</span> merges the <span class="keyword">contents</span> <span class="keyword">of</span> several remotes</span><br><span class="line">   \ <span class="string">"union"</span></span><br><span class="line"><span class="number">31</span> / Webdav</span><br><span class="line">   \ <span class="string">"webdav"</span></span><br><span class="line"><span class="number">32</span> / Yandex Disk</span><br><span class="line">   \ <span class="string">"yandex"</span></span><br><span class="line"><span class="number">33</span> / <span class="keyword">http</span> <span class="keyword">Connection</span></span><br><span class="line">   \ <span class="string">"http"</span></span><br><span class="line"><span class="number">34</span> / premiumize.me</span><br><span class="line">   \ <span class="string">"premiumizeme"</span></span><br><span class="line"><span class="keyword">Storage</span>&gt; <span class="number">22</span> <span class="comment"># 选择 Microsoft OneDrive ，截止2020年2月23日序号为 22</span></span><br><span class="line">** See <span class="keyword">help</span> <span class="keyword">for</span> onedrive backend <span class="keyword">at</span>: https://rclone.org/onedrive/ **</span><br><span class="line"></span><br><span class="line">Microsoft App <span class="keyword">Client</span> <span class="keyword">Id</span></span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a <span class="keyword">string</span> value. Press Enter <span class="keyword">for</span> the <span class="keyword">default</span> (<span class="string">""</span>).</span><br><span class="line">client_id&gt; <span class="comment"># 输入 Client Id （客户端 ID）</span></span><br><span class="line">Microsoft App <span class="keyword">Client</span> Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a <span class="keyword">string</span> value. Press Enter <span class="keyword">for</span> the <span class="keyword">default</span> (<span class="string">""</span>).</span><br><span class="line">client_secret&gt; <span class="comment"># 输入 Client Secret （客户端密码）</span></span><br><span class="line">Edit <span class="keyword">advanced</span> config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) <span class="keyword">No</span></span><br><span class="line">y/n&gt; n <span class="comment"># 输入 n</span></span><br><span class="line">Remote config</span><br><span class="line">Make sure your Redirect <span class="keyword">URL</span> <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> <span class="string">"http://localhost:53682/"</span> <span class="keyword">in</span> your custom config.</span><br><span class="line"><span class="keyword">Use</span> <span class="keyword">auto</span> config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> <span class="keyword">not</span> sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you <span class="keyword">are</span> working <span class="keyword">on</span> a remote <span class="keyword">or</span> headless machine</span><br><span class="line">y) Yes</span><br><span class="line">n) <span class="keyword">No</span></span><br><span class="line">y/n&gt; n <span class="comment"># 输入 n</span></span><br><span class="line"><span class="keyword">For</span> this <span class="keyword">to</span> <span class="keyword">work</span>, you will need rclone available <span class="keyword">on</span> a machine that has a web browser available.</span><br><span class="line"><span class="keyword">Execute</span> the <span class="keyword">following</span> <span class="keyword">on</span> your machine (same rclone <span class="keyword">version</span> recommended) :</span><br><span class="line">    rclone authorize <span class="string">"onedrive"</span> <span class="string">"client_id"</span> <span class="string">"client_secret"</span></span><br><span class="line"><span class="keyword">Then</span> paste the <span class="keyword">result</span> below:</span><br><span class="line"><span class="keyword">result</span>&gt; &#123;<span class="string">"access_token"</span>:<span class="string">"XXXXXXXXX"</span>,<span class="string">"expiry"</span>:<span class="string">"2020-02-22T21:18:39.5036298+08:00"</span>&#125;   <span class="comment"># 输入 token</span></span><br><span class="line"><span class="keyword">Choose</span> a <span class="built_in">number</span> <span class="keyword">from</span> below, <span class="keyword">or</span> <span class="keyword">type</span> <span class="keyword">in</span> an existing <span class="keyword">value</span></span><br><span class="line"> <span class="number">1</span> / OneDrive Personal <span class="keyword">or</span> Business</span><br><span class="line">   \ <span class="string">"onedrive"</span></span><br><span class="line"> <span class="number">2</span> / Root Sharepoint site</span><br><span class="line">   \ <span class="string">"sharepoint"</span></span><br><span class="line"> <span class="number">3</span> / <span class="keyword">Type</span> <span class="keyword">in</span> driveID</span><br><span class="line">   \ <span class="string">"driveid"</span></span><br><span class="line"> <span class="number">4</span> / <span class="keyword">Type</span> <span class="keyword">in</span> SiteID</span><br><span class="line">   \ <span class="string">"siteid"</span></span><br><span class="line"> <span class="number">5</span> / <span class="keyword">Search</span> a Sharepoint site</span><br><span class="line">   \ <span class="string">"search"</span></span><br><span class="line">Your choice&gt; <span class="number">1</span> <span class="comment"># # 这里问你要选择的类型，因为是使用 OneDrive ，所以输入 1</span></span><br><span class="line"><span class="keyword">Found</span> <span class="number">1</span> drives, please <span class="keyword">select</span> the one you want <span class="keyword">to</span> <span class="keyword">use</span>:</span><br><span class="line"><span class="number">0</span>: OneDrive (business) <span class="keyword">id</span>=xxxxxxxxxxxxxx</span><br><span class="line">Chose drive <span class="keyword">to</span> <span class="keyword">use</span>:&gt; <span class="number">0</span> <span class="comment"># 检测到了网盘，这里编号是 0 ，所以输入 0</span></span><br><span class="line"><span class="keyword">Found</span> drive <span class="string">'root'</span> <span class="keyword">of</span> <span class="keyword">type</span> <span class="string">'business'</span>, <span class="keyword">URL</span>: https://p3terx-my.sharepoint.com/personal/xxxxxx/Documents</span><br><span class="line"><span class="keyword">Is</span> that okay?</span><br><span class="line">y) Yes</span><br><span class="line">n) <span class="keyword">No</span></span><br><span class="line">y/n&gt; y <span class="comment"># 问你是否确认，如果没问题则输入 y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------</span></span><br><span class="line">[od-e5-api]</span><br><span class="line"><span class="keyword">type</span> = onedrive</span><br><span class="line">client_id = xxxxxxxxxx</span><br><span class="line">client_secret = xxxxxxxxxxxxxxxx</span><br><span class="line">token = &#123;<span class="string">"access_token"</span>:<span class="string">"xxxxxxxxxxxxxxxxxx"</span>,<span class="string">"expiry"</span>:<span class="string">"2020-02-22T21:18:39.5036298+08:00"</span>&#125;</span><br><span class="line">drive_id = xxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">drive_type = business</span><br><span class="line"><span class="comment">--------------------</span></span><br><span class="line">y) Yes this <span class="keyword">is</span> OK</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) <span class="keyword">Delete</span> this remote</span><br><span class="line">y/e/d&gt; y <span class="comment"># 最后会显示网盘的配置信息并询问你是否正确，如果没问题则输入 y</span></span><br><span class="line"><span class="keyword">Current</span> remotes:</span><br><span class="line"></span><br><span class="line"><span class="keyword">Name</span>                 <span class="keyword">Type</span></span><br><span class="line">====                 ====</span><br><span class="line">od-e5-api            onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) <span class="keyword">New</span> remote</span><br><span class="line">d) <span class="keyword">Delete</span> remote</span><br><span class="line">r) <span class="keyword">Rename</span> remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) <span class="keyword">Set</span> configuration <span class="keyword">password</span></span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; q <span class="comment"># 输入 q 退出</span></span><br></pre></td></tr></table></figure><p>最后验证一下是否能正常使用，替换以下命令中的 <code>od-e5-api</code> 并执行，注意最后有<code>:</code>(冒号)。网盘中出现 <code>test</code> 文件即表示成功。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="keyword">test</span> &amp;&amp; rclone <span class="keyword">move</span> <span class="keyword">test</span> od-e5-api:</span><br></pre></td></tr></table></figure><h1 id="挂载为磁盘"><a class="markdownIt-Anchor" href="#挂载为磁盘"></a> 挂载为磁盘</h1><p>首先安装<code>fuse</code></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#Debian/Ubuntu系统</span></span><br><span class="line">apt-<span class="keyword">get</span> install fuse -y</span><br><span class="line"><span class="meta">#CentOS系统</span></span><br><span class="line">yum install fuse -y</span><br></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建本地文件夹，路径自己定，即下面的LocalFolder</span></span><br><span class="line">mkdir <span class="string">/root/OneDrive</span></span><br><span class="line"><span class="comment">#挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换</span></span><br><span class="line">rclone mount DriveName<span class="function">:Folder</span> LocalFolder <span class="params">--copy-links</span> <span class="params">--no-gzip-encoding</span> <span class="params">--no-check-certificate</span> <span class="params">--allow-other</span> <span class="params">--allow-non-empty</span> <span class="params">--umask</span> 000</span><br></pre></td></tr></table></figure><p><code>DriveName</code>为初始化配置填的name，<code>Folder</code>为OneDrive里的文件夹，<code>LocalFolder</code>为VPS上的本地文件夹。</p><p>挂载成功后，输入<code>df -h</code>命令查看即可！</p><h1 id="开机自启"><a class="markdownIt-Anchor" href="#开机自启"></a> 开机自启</h1><p>先新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p><p><code>DriveName</code>为<code>Rclone</code>的配置名称，比如你配置<code>rclone</code>的时候，<code>Name</code>填的<code>od</code><br><code>Folder</code>为网盘里的文件夹路径，如果你要挂载整个网盘，直接填<code>/</code>挂载整个根目录<br><code>LocalFolder</code>为本地服务器上的挂载文件夹，如果你需要将网盘的文件夹挂载到服务器上的<code>/Drive</code>文件夹，那就填<code>/Drive</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以下是一整条命令，先修改DriveName:Folder和LocalFolder(有三处地方)的值，再一起复制到SSH客户端运行</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt; /etc/systemd/system/rclone.service &lt;&lt;EOF</span></span><br><span class="line"><span class="attr">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=<span class="string">Rclone</span></span><br><span class="line"><span class="attr">AssertPathIsDirectory</span>=<span class="string">LocalFolder</span></span><br><span class="line"><span class="attr">After</span>=<span class="string">network-online.target</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=<span class="string">simple</span></span><br><span class="line"><span class="attr">ExecStart</span>=<span class="string">/usr/bin/rclone mount DriveName:Folder LocalFolder \</span></span><br><span class="line"> <span class="meta">--umask</span> <span class="string">0000 \</span></span><br><span class="line"> <span class="meta">--default-permissions</span> <span class="string">\</span></span><br><span class="line"> <span class="meta">--allow-non-empty</span> <span class="string">\</span></span><br><span class="line"> <span class="meta">--allow-other</span> <span class="string">\</span></span><br><span class="line"> <span class="meta">--buffer-size</span> <span class="string">32M \</span></span><br><span class="line"> <span class="meta">--dir-cache-time</span> <span class="string">12h \</span></span><br><span class="line"> <span class="meta">--vfs-read-chunk-size</span> <span class="string">64M \</span></span><br><span class="line"> <span class="meta">--vfs-read-chunk-size-limit</span> <span class="string">1G</span></span><br><span class="line"><span class="attr">ExecStop</span>=<span class="string">/bin/fusermount -u LocalFolder</span></span><br><span class="line"><span class="attr">Restart</span>=<span class="string">on-abort</span></span><br><span class="line"><span class="attr">User</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=<span class="string">default.target</span></span><br><span class="line"><span class="attr">EOF</span></span><br></pre></td></tr></table></figure><p>开始启动：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> rclone</span><br></pre></td></tr></table></figure><p>设置开机自启：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> rclone</span><br></pre></td></tr></table></figure><p>其他命令：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">重启：systemctl restart rclone</span><br><span class="line">停止：systemctl <span class="keyword">stop</span> rclone</span><br><span class="line">状态：systemctl <span class="keyword">status</span> rclone</span><br></pre></td></tr></table></figure><div class="note info"><p>至此，Rclone 已成功使用自建 API 连接到了 OneDrive 网盘。如果需要在vps上挂载，你需要在本地获取token，然后再在vps上配置rclone链接OneDrive</p></div><h1 id="可视化上传下载-rclonebrowser"><a class="markdownIt-Anchor" href="#可视化上传下载-rclonebrowser"></a> 可视化上传下载 RcloneBrowser</h1><p>可选，非必须，感觉OneDrive自己的客户端都很好用了</p><p><code>RcloneBrowser</code>是基于<code>rclone</code>来实现<code>OneDrive</code>文件的上传下载，个人觉得微软自己的<code>OneDrive</code>客户端还不错没必要用这个.但是如果为了调用<code>API</code>保活，这大概是最简单的方法了</p><p>在 <a href="https://github.com/kapitainsky/RcloneBrowser/releases" target="_blank" rel="noopener">https://github.com/kapitainsky/RcloneBrowser/releases</a> 下载RcloneBrowser</p><p>在 <a href="http://www.secfs.net/winfsp/download/" target="_blank" rel="noopener">http://www.secfs.net/winfsp/download/</a> 下载必要插件,这个插件是挂载onedrive到某个盘符要用到的</p><p>下载好后进行安装，然后进行配置。配置 <code>rclone.exe</code>的路径还有 <code>rclone.conf</code> 配置文件的路径。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305142403.png"  alt=""></p><p>上传文件</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305142458.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305142506.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305142517.png"  alt=""></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      office365E5保活方法
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Rclone" scheme="https://gyh.im/tags/Rclone/"/>
    
      <category term="Office" scheme="https://gyh.im/tags/Office/"/>
    
  </entry>
  
  <entry>
    <title>免费申请office365E5-附自动订阅保活方法</title>
    <link href="https://gyh.im/posts/e968e4c0/"/>
    <id>https://gyh.im/posts/e968e4c0/</id>
    <published>2020-03-05T02:09:51.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>以前的Office 365开发者试用订阅（简称E3）有效期只有一年，一年过后数据都没了。</p><p>现在微软推出的新版订阅有效时间位90天，可自动进行订阅<br>官方教程(手动复制打开)：<a href="https://docs.microsoft.com/en-us/office/developer-program/office-365-developer-program" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/office/developer-program/office-365-developer-program</a></p><blockquote><ul><li>包括 25 个用于开发目的的用户许可证</li><li>访问核心 Microsoft 365 工作负载和功能（不包括 Windows），包括：</li><li>所有 Office 365 应用，包括 SharePoint、OneDrive、Outlook/Exchange、Teams、Planner、Word、Excel、PowerPoint 等</li><li>Office 365 高级威胁防护</li><li>Power BI 高级分析</li><li>用于合规性和信息保护的企业移动性 + 安全性 (EMS)</li><li>用于构建高级标识和访问管理解决方案的 Azure Active Directory</li></ul></blockquote><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><ol><li>首先进入<a href="https://developer.microsoft.com/zh-cn/office" target="_blank" rel="noopener">Office开发人员中心</a>登录你的微软帐号之后，点击立即加入；</li></ol><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305090732.png"  alt=""></p><ol start="2"><li>开通Office开发者账号，并且完善个人信息；</li></ol><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305090906.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305091111.png"  alt=""></p><ol start="3"><li>进入个人中心，点击设置订阅；</li></ol><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305092235.png"  alt=""></p><ol start="4"><li><p>填写设置开发者订阅相关的信息；(这里要富强，不然接收不到验证码)<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305092411.png"  alt=""></p></li><li><p>这样就注册好了，接下来需要对自己的账号添加许可证，不然用不了的。</p></li></ol><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305092544.png"  alt=""></p><ol start="6"><li>添加许可证</li></ol><p>点击上图的 Go to subscription ，进入后台</p><p>管理 – &gt; 用户 -&gt; 活跃用户 -&gt; 点击用户名 -&gt; 许可证和用户 ,添加好后点击应用就可以了</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305093316.png"  alt=""></p><ol start="7"><li>增大onedrive容量</li></ol><p>在<a href="https://admin.onedrive.com/" target="_blank" rel="noopener">onedrive管理</a>中，找到储存</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200305095148.png"  alt=""></p><h1 id="保活方法"><a class="markdownIt-Anchor" href="#保活方法"></a> 保活方法</h1><p>看了些大佬的方法，主要采取的还是利用onedrive和outlook，其实只要你去调用了他的api就可以保活。</p><p>保活教程见下一期。。。</p><p>这两篇都是调用的onedrive的api，一篇是基于rclone，另一篇是基于onemanager</p><a href="/posts/c4f1574a/" title="Rclone挂载OneDrive方法-自建API">Rclone挂载OneDrive方法-自建API</a> <a href="/posts/7386aa8e/" title="利用heroku搭建免费的onemanager">利用heroku搭建免费的onemanager</a><p>听说调用outlook的api，对已经过期的账户，两天就自动续期了。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      免费申请office365E5-附自动订阅保活方法
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Office" scheme="https://gyh.im/tags/Office/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装ohmyzsh</title>
    <link href="https://gyh.im/posts/29ade658/"/>
    <id>https://gyh.im/posts/29ade658/</id>
    <published>2020-02-24T11:21:47.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="安装zsh和git"><a class="markdownIt-Anchor" href="#安装zsh和git"></a> 安装zsh和git</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install zsh git</span><br></pre></td></tr></table></figure><h1 id="安装oh-my-zsh"><a class="markdownIt-Anchor" href="#安装oh-my-zsh"></a> 安装oh my zsh</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure><h1 id="修改主题"><a class="markdownIt-Anchor" href="#修改主题"></a> 修改主题</h1><p>在 <code>.zshrc</code>文件中，修改<code>ZSH_THEME</code>,主题展示可见官方<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" target="_blank" rel="noopener">themes</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#找到对应行改为你喜欢的主题</span></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br></pre></td></tr></table></figure><h1 id="添加插件"><a class="markdownIt-Anchor" href="#添加插件"></a> 添加插件</h1><h2 id="sudo"><a class="markdownIt-Anchor" href="#sudo"></a> sudo</h2><p>这个插件的作用是：连按两次Esc添加或去掉sudo<br>这个插件官方已经集成，直接在<code>.zshrc</code>中开启</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  sudo</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="zsh-syntax-highlighting"><a class="markdownIt-Anchor" href="#zsh-syntax-highlighting"></a> zsh-syntax-highlighting ​</h2><p>这个插件作用是：高亮可用命令</p><p>首先下载插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p>修改<code>.zshrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  sudo</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><h2 id="zsh-autosuggestions"><a class="markdownIt-Anchor" href="#zsh-autosuggestions"></a> zsh-autosuggestions ​</h2><p>这个插件作用是：记录上一条命令，并自动建议</p><p>同样的需要下载插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><p>然后修改<code>.zshrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  sudo</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><h2 id="extract"><a class="markdownIt-Anchor" href="#extract"></a> extract</h2><p>自带插件，不用再使用复杂的tar来解压压缩包了</p><p>激活: 添加到~/.zshrc的plugins列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  sudo</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">  extract</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://ohmyz.sh/" target="_blank" rel="noopener">oh my zsh 官网</a><br>2.<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" target="_blank" rel="noopener">oh my zsh 主题仓库</a><br>3.<a href="https://github.com/ohmyzsh/ohmyzsh/" target="_blank" rel="noopener">oh my zsh 源码仓库</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      ubuntu安装ohmyzsh
    
    </summary>
    
    
      <category term="Linux" scheme="https://gyh.im/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gyh.im/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>基于Coding_CI实现Hexo的持续集成与Github和Coding的同步部署</title>
    <link href="https://gyh.im/posts/51df657a/"/>
    <id>https://gyh.im/posts/51df657a/</id>
    <published>2020-02-21T08:34:16.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>网上关于 <code>Hexo</code>持续集成的文章大多是使用<code>Travis CI</code>，也有不少同步部署到<code>Github</code>和<code>Coding</code>的教程，不过<code>Travis</code>只对<code>Github</code>的仓库提供CI服务，由于某些原因，<code>Github</code>在国内的访问速度并不理想，所以采用<code>Coding CI</code>进行部署。</p><h1 id="什么是持续集成ci"><a class="markdownIt-Anchor" href="#什么是持续集成ci"></a> 什么是持续集成(CI)：</h1><blockquote><p>持续集成（Continuous Integration，简称CI）是一种软件开发实践，在实践中指只要代码有变更，就自动运行构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。</p></blockquote><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><h2 id="获取github和coding的访问令牌"><a class="markdownIt-Anchor" href="#获取github和coding的访问令牌"></a> 获取GitHub和coding的访问令牌</h2><h3 id="coding"><a class="markdownIt-Anchor" href="#coding"></a> coding</h3><p>在coding的个人设置中，找到访问令牌，并创建它<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174003.png"  alt=""></p><p>点击创建访问令牌，描述可以随便填写，勾选<code>project:depot</code>的复选框即可。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174219.png"  alt=""></p><p>密钥只显示一次，请将获取到的密钥复制保存下来，并以<code>用户名:密钥</code>的方式组合起来。</p><h3 id="github"><a class="markdownIt-Anchor" href="#github"></a> github</h3><p>和coding类似，在<code>Settings-&gt;Developer settings-&gt;Personal access tokens</code>创建<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">github访问令牌</a></p><p>点击创建令牌<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221174649.png"  alt=""></p><p>名称随意，勾选<code>reop</code>复选框<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221175002.png"  alt=""></p><p>注意保存密钥，并以<code>用户名:密钥</code>的方式组合起来。</p><h2 id="配置构建脚本"><a class="markdownIt-Anchor" href="#配置构建脚本"></a> 配置构建脚本</h2><p>回到Coding，进入项目仓库，点击构建，点击下方的新建构建计划配置<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221175248.png"  alt=""></p><p>我的博客源代码在github所以选择github，勾选静态配置Jenkinsfile文件，选择自定义构建过程，勾选前往配置详情，并点击确定。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221175530.png"  alt=""></p><blockquote><p>源码在github需要关联外部仓库，可根据提示来配置</p></blockquote><p>点击文本编辑器，清空内容。将下方代码填入其中，注意更改其中的用户名，邮箱，仓库等。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221175937.png"  alt=""></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">  agent any</span><br><span class="line">  stages &#123;</span><br><span class="line">    stage(<span class="string">'拉取源码'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        checkout([$clas<span class="variable">s:</span> <span class="string">'GitSCM'</span>,branche<span class="variable">s:</span> [[name: env.GIT_BUILD_REF]],userRemoteConfig<span class="variable">s:</span> [[ur<span class="variable">l:</span> env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID]]])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'安装Hexo'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'正在安装Hexo-cli...'</span></span><br><span class="line">        <span class="keyword">sh</span> <span class="string">'npm install -g hexo-cli'</span></span><br><span class="line">        <span class="keyword">sh</span> <span class="string">'npm install hexo@4.1.1 --save'</span></span><br><span class="line">        <span class="keyword">sh</span> <span class="string">'npm install'</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'安装完成.'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'生成静态文件'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'生成静态文件中...'</span></span><br><span class="line">        <span class="keyword">sh</span> <span class="string">'hexo clean'</span></span><br><span class="line">        <span class="keyword">sh</span> <span class="string">'hexo g'</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'已生成静态文件，准备推送部署.'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'推送部署'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'正在推送静态文件...'</span></span><br><span class="line">        dir(path: <span class="string">'public'</span>) &#123;</span><br><span class="line">          script &#123;</span><br><span class="line">            writeFile(<span class="keyword">file</span>: <span class="string">'CNAME'</span>, tex<span class="variable">t:</span> <span class="string">'域名'</span>)</span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git init'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git add -A'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git config user.name "用户名"'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git config user.email "邮箱"'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git commit -m CI'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git push -f https://$&#123;GH_Token&#125;@github.com/用户名/仓库.git master'</span></span><br><span class="line">            <span class="keyword">sh</span> <span class="string">'git push -f https://$&#123;CO_Token&#125;@e.coding.net/用户名/仓库.git master'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'已完成文件推送.'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如若未使用自定义域名，可删除第30行内容。</p></blockquote><p>点击变量与缓存，增加环境变量，分别为：<br>变量名称：CO_Token，类型：字符串，默认值为上一步Coding令牌的组合。<br>变量名称：GH_Token，类型：字符串，默认值为上一步Github令牌的组合。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221180246.png"  alt=""></p><h2 id="测试配置"><a class="markdownIt-Anchor" href="#测试配置"></a> 测试配置</h2><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200221180443.png"  alt=""></p><p>稍等片刻，即可看到构建成功。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      基于Coding_CI实现Hexo的持续集成与Github和Coding的同步部署
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>使用coding在线编辑hexo博客</title>
    <link href="https://gyh.im/posts/87a2932/"/>
    <id>https://gyh.im/posts/87a2932/</id>
    <published>2020-02-19T12:39:20.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在看这篇博客前，你应该具备以下基础，如果是小白，请参考我之前的博文。</p><blockquote><ul><li>自己搭建过hexo，并且发布过文章</li><li>使用过github和coding</li><li>熟悉Linux命令和git命令</li><li>拥有自己的博客源码仓库</li></ul></blockquote><p>腾讯出了一个叫<code>cloud studio</code> 的在线环境，可以部署ubuntu，hexo等开发环境。所以我们可以利用这么一个方便的环境来在线编辑我们的博客。</p><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><ol><li><p>登录你的coding账户，进入<code>cloud studio</code><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219204846.png"  alt=""></p></li><li><p>点击设置，将这串SSH 公钥添加到你的源码仓库中<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219205449.png"  alt=""></p></li></ol><p>我的源码是在github中，下面我以github为例：</p><ul><li><p>在你的源码仓库中点击设置 -&gt; deploy keys<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219205805.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219205933.png"  alt=""></p></li><li><p>添加ssh 公钥，注意勾选下面的权限<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219210318.png"  alt=""></p></li></ul><ol start="3"><li>新建工作空间<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219205116.png"  alt=""></li></ol><ul><li>设置工作空间名字，选择nodejs的环境，输入你源码仓库的 <strong>SSH 协议的仓库地址</strong><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219210700.png"  alt=""></li></ul><ol start="4"><li><p>进入工作空间，第一次可能会有点慢，进入后他会自动克隆你的源码仓库<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219211153.png"  alt=""></p></li><li><p>安装hexo<br>在终端中执行</p></li></ol><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install <span class="symbol">hexo@</span><span class="number">4.1</span><span class="number">.1</span> --save</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219211730.png"  alt=""></p><p>我这里因为有个插件需要特定版本的hexo，所以需要指定版本,如果不需要特定版本只需 <code>npm install hexo --save</code></p><ol start="6"><li>写文章</li></ol><p>我们可以执行<code>hexo new test</code> 测试我们的环境<br>然后和本地写文章一样，生成文章发布文章</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219212335.png"  alt=""></p><p>执行完<code>hexo g</code>之后可以看到已经生成<code>public</code>文件夹了</p><p>在执行<code>hexo d</code>之前需要设置git用户名和邮箱<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219212605.png"  alt=""></p><p>可以看到，他提醒输入用户名邮箱。<code>.deploy_git</code>文件夹也生成了</p><p>在我们的博客中页有了这个页面<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219213012.png"  alt=""></p><ol start="7"><li>将刚才写好的博客源码<code>push</code>到<code>github</code>中</li></ol><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit -m <span class="string">"update"</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure><ol start="8"><li>在本地同步<br>你可以使用<code>git pull</code>同步仓库的文件（如果你的电脑上有这个源码仓库），如果没有源码仓库，也可以单独clone你的源码仓库<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200219214052.png"  alt=""></li></ol><p>因为这篇博文是在本地电脑上写的，还没发出去，所以我克隆到本地仓库。可以看到创建的<code>test.md</code>已经在本地电脑上了</p><blockquote><p>像这样切换环境写作，写之前最好<code>git pull</code>一下，写完后记得push到仓库中</p></blockquote><p>同样的你与要安装插件，执行<code>npm install hexo --save</code><br>再进行编写文章<br>写好之后部署你的博客，以及push到源码仓库</p><h1 id="问题总结"><a class="markdownIt-Anchor" href="#问题总结"></a> 问题总结</h1><ol><li>这个在线环境每天只能用两个小时。。。</li><li>在切换终端操作后，可能有push不成功的现象，这里涉及到git协同工作的问题了。因为你没有<code>git pull</code>仓库里更新了的代码</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      使用coding的cloud studio在线编写hexo博客
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>github和coding实现301重定向</title>
    <link href="https://gyh.im/posts/32baccf/"/>
    <id>https://gyh.im/posts/32baccf/</id>
    <published>2020-02-15T02:23:49.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在使用不蒜子进行站点访问统计的时候，发现带www的域名和不带www的域名统计不一样。</p><p>带www和不带www的搜索引擎会认为是两个网站，会影响seo，所以要进行统一。将www域名定向到顶级域名，或者把顶级域名定向到www域名</p><h1 id="github重定向"><a class="markdownIt-Anchor" href="#github重定向"></a> github重定向</h1><ol><li>在仓库根目录下添加一个CNAME文件,没有后缀名,里面内容为你主打的域名，例如我主打顶级域名，就写<code>gyhnice.top</code>;</li><li>域名解析那里，将@和www CNAME记录的记录值同时设置为username.github.io即可完成github pages301重定向，就是那么简单。</li></ol><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200215103849.png"  alt=""></p><h1 id="coding重定向"><a class="markdownIt-Anchor" href="#coding重定向"></a> coding重定向</h1><p>添加www域名和顶级域名，设置一个首选域名，在另一个域名后面勾选<code>跳转至首选</code><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200215103538.png"  alt=""></p><blockquote><p>如果ssl证书申请不了，先把github的域名解析先暂停</p></blockquote><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ul><li><a href="https://www.arao.me/website/github-pages-araome-301-www.html" target="_blank" rel="noopener">Github Pages301重定向简单的让我有点接受唔到咯</a></li><li><a href="https://www.jianshu.com/p/35a6ad08ea44" target="_blank" rel="noopener">hexo设置301重定向</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      GitHub和coding实现301重定向
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客开启pwa</title>
    <link href="https://gyh.im/posts/805d5d89/"/>
    <id>https://gyh.im/posts/805d5d89/</id>
    <published>2020-02-14T07:21:18.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p><code>Progressive Web App</code>, 简称<code>PWA</code>，是提升 Web App 的体验的一种新方法，能给用户原生应用的体验。</p><p><code>PWA</code> 能做到原生应用的体验不是靠特指某一项技术，而是经过应用一些新技术进行改进，在安全、性能和体验三个方面都有很大提升，PWA 本质上是 Web App，借助一些新技术也具备了 Native App 的一些特性，兼具 Web App 和 Native App 的优点。</p><p>PWA 的主要特点包括下面三点：</p><ul><li>可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现</li><li>体验 - 快速响应，并且有平滑的动画响应用户的操作</li><li>粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面</li></ul><p>PWA 本身强调渐进式，并不要求一次性达到安全、性能和体验上的所有要求，开发者可以通过 PWA Checklist 查看现有的特征。</p><div class="note warning"><p>开始pwa之前，全站必须支持HTTPS<br>开始pwa之前，全站必须支持HTTPS<br>开始pwa之前，全站必须支持HTTPS</p></div><h1 id="安装pwa"><a class="markdownIt-Anchor" href="#安装pwa"></a> 安装pwa</h1><p><code>hexo@4.2.0</code> 目前赞不兼容 <code>hexo-pwa</code>,使用 <code>hexo@4.2.0</code> 版本的用户推荐降级到 <code>hexo@4.1.1</code></p><ol><li>使用<code>sudo hexo -version</code> 查看版本</li><li>安装指定版本 <code>sudo npm install hexo@4.1.1 --save</code></li><li>安装<code>hexo-pwa</code></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> hexo-pwa <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1><h2 id="添加manifestjson"><a class="markdownIt-Anchor" href="#添加manifestjson"></a> 添加manifest.json</h2><p>在<code>manifest.json</code><a href="https://app-manifest.firebaseapp.com/" target="_blank" rel="noopener">生成网站</a>生成manifest.json<br>首先你需要准备一个你喜欢的图标，填写香相关选项，并上传图标，将生成的manifest.json文件，放到 <strong>博客根目录下</strong><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200214153454.png"  alt=""></p><p>我生成的如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"YH's Blog"</span>,</span><br><span class="line">  <span class="attr">"short_name"</span>: <span class="string">"YH's Blog"</span>,</span><br><span class="line">  <span class="attr">"theme_color"</span>: <span class="string">"#2196f3"</span>,</span><br><span class="line">  <span class="attr">"background_color"</span>: <span class="string">"#2196f3"</span>,</span><br><span class="line">  <span class="attr">"display"</span>: <span class="string">"standalone"</span>,</span><br><span class="line">  <span class="attr">"Scope"</span>: <span class="string">"/"</span>,</span><br><span class="line">  <span class="attr">"start_url"</span>: <span class="string">"/"</span>,</span><br><span class="line">  <span class="attr">"icons"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-72x72.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"72x72"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-96x96.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"96x96"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-128x128.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"128x128"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-144x144.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"144x144"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-152x152.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"152x152"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-192x192.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"192x192"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-384x384.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"384x384"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"images/icons/icon-512x512.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"512x512"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"splash_pages"</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参数解释</strong></p><ul><li>name: {string} 应用名称，用于安装横幅、启动画面显示</li><li>short_name: {string} 应用短名称，用于主屏幕显示</li><li>theme_color: {Color} css色值theme_color 属性可以指定 PWA 的主题颜色。可以通过该属性来控制浏览器 UI 的颜色。比如 PWA 启动画面上状态栏、内容页中状态栏、地址栏的颜色，会被 theme_color 所影响。</li><li>background_color: {Color} css色值 可以指定启动画面的背景颜色。</li><li>display: {string} 显示类型</li><li>fullscreen 应用的显示界面将占满整个屏幕</li><li>standalone 浏览器相关UI（如导航栏、工具栏等）将会被隐藏</li><li>minimal-ui 显示形式与standalone类似，浏览器相关UI会最小化为一个按钮，不同浏览器在实现上略有不同</li><li>browser 浏览器模式，与普通网页在浏览器中打开的显示一致</li><li>scope: {string} 作用域</li></ul><blockquote><p>scope 应遵循如下规则：<br>如果没有在 manifest 中设置 scope，则默认的作用域为 manifest.json 所在文件夹；<br>scope 可以设置为 …/ 或者更高层级的路径来扩大PWA的作用域；</p></blockquote><ul><li>start_url 必须在作用域范围内；</li></ul><blockquote><p>如果 start_url 为相对地址，其根路径受 scope 所影响；<br>如果 start_url 为绝对地址（以 / 开头），则该地址将永远以 / 作为根地址；</p></blockquote><ul><li>start_url: {string} 应用启动地址</li><li>icons: {Array.} 应用图标列表</li><li>src: {string} 图标 url</li></ul><blockquote><p>sizes {string} 图标尺寸，格式为widthxheight，宽高数值以 css 的 px 为单位。如果需要填写多个尺寸，则使用空格进行间隔，如”48x48 96x96 128x128”<br>type {string} 图标的 mime 类型，非必填项，该字段可让浏览器快速忽略掉不支持的图标类型</p></blockquote><h2 id="添加swjs"><a class="markdownIt-Anchor" href="#添加swjs"></a> 添加sw.js</h2><p>新建一个名为sw.js的文件，放在<strong>站点根目录下</strong>，在文件里填入一下内容</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import<span class="constructor">Scripts('<span class="params">https</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">g</span>.<span class="params">alicdn</span>.<span class="params">com</span><span class="operator">/</span><span class="params">kg</span><span class="operator">/</span><span class="params">workbox</span><span class="operator">/</span>3.3.0<span class="operator">/</span><span class="params">workbox</span>-<span class="params">sw</span>.<span class="params">js</span>')</span>;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">if</span> (workbox) &#123;</span><br><span class="line">    workbox.set<span class="constructor">Config(&#123; <span class="params">modulePathPrefix</span>: '<span class="params">https</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">g</span>.<span class="params">alicdn</span>.<span class="params">com</span><span class="operator">/</span><span class="params">kg</span><span class="operator">/</span><span class="params">workbox</span><span class="operator">/</span>3.3.0<span class="operator">/</span>' &#125;)</span>;</span><br><span class="line">​</span><br><span class="line">    workbox.precaching.precache(<span class="literal">['<span class="operator">/</span>', '<span class="operator">/</span><span class="identifier">index</span>.<span class="identifier">html</span>']</span>);</span><br><span class="line">​</span><br><span class="line">    workbox.routing.register<span class="constructor">Route(<span class="params">new</span> RegExp('^<span class="params">https</span>?:<span class="operator">/</span><span class="operator">/</span><span class="params">gyh</span>.<span class="params">im</span><span class="operator">/</span>?$')</span>, workbox.strategies.network<span class="constructor">First()</span>);</span><br><span class="line">​</span><br><span class="line">    workbox.routing.register<span class="constructor">Route(<span class="params">new</span> RegExp('.<span class="operator">*</span>.<span class="params">html</span>')</span>, workbox.strategies.network<span class="constructor">First()</span>);</span><br><span class="line">​</span><br><span class="line">    workbox.routing.register<span class="constructor">Route(<span class="params">new</span> RegExp('.<span class="operator">*</span>.(?:<span class="params">js</span>|<span class="params">css</span>|<span class="params">jpg</span>|<span class="params">png</span>|<span class="params">gif</span>)</span>'), workbox.strategies.stale<span class="constructor">WhileRevalidate()</span>);</span><br><span class="line">​</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将其中域名改为你自己主页的域名：<code>https?://gyh.im/</code> 改为你的域名，格式要和我的一样。</p></blockquote><h3 id="配置站点配置文件"><a class="markdownIt-Anchor" href="#配置站点配置文件"></a> 配置站点配置文件</h3><p>首先将生成的<code>images</code>文件复制到 <code>/source</code> 文件夹下<br>将下面的配置代码复制到你的站点根目录配置文件 <code>_config.yml</code>中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/lavas-project/hexo-pwa</span></span><br><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">manifest:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/manifest.json</span></span><br><span class="line">    <span class="attr">body:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">YH's</span> <span class="string">Blog</span></span><br><span class="line">      <span class="attr">short_name:</span> <span class="string">YH's</span> <span class="string">Blog</span></span><br><span class="line">      <span class="attr">theme_color:</span> <span class="comment">#2196f3</span></span><br><span class="line">      <span class="attr">background_color:</span> <span class="comment">#2196f3</span></span><br><span class="line">      <span class="attr">display:</span> <span class="string">standalone</span></span><br><span class="line">      <span class="attr">orientation:</span> <span class="string">portrait</span></span><br><span class="line">      <span class="attr">scope:</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">start_url:</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">icons:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-72x72.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">72x72</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-96x96.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">96x96</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-128x128.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">128x128</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-144x144.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">144x144</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-152x152.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">152x152</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-192x192.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">192x192</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-384x384.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">384x384</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/icons/icon-512x512.png</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">512x512</span></span><br><span class="line">  <span class="attr">serviceWorker:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/sw.js</span></span><br><span class="line">    <span class="attr">preload:</span></span><br><span class="line">      <span class="attr">urls:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">posts:</span> <span class="number">12</span></span><br><span class="line">    <span class="attr">opts:</span></span><br><span class="line">      <span class="attr">networkTimeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/hm.baidu.com/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkOnly</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/www.google-analytics.com/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkOnly</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/.*\.(js|css|jpg|jpeg|png|gif)$/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/\//</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkFirst</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h1 id="检查pwa部署是否成功"><a class="markdownIt-Anchor" href="#检查pwa部署是否成功"></a> 检查pwa部署是否成功</h1><p>执行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p><p>然后在浏览器输入localhost:4000，查看效果。</p><p>按F12，然后选择<code>Application—&gt;Service Workers</code>，查看是否成功？<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200214154647.png"  alt=""></p><blockquote><p>成功状态提示：Status #xxx activated and is running</p></blockquote><p><strong>谷歌浏览器安装PWA</strong></p><p>前面的步骤操作没错，配置也没问题，则在本地运行试，浏览器地址栏中会出现一个类似 ➕ 加号的图标，点击它会出现一个弹出框，就说明配置成功，当然你可以选择安装，安装过后桌面会出现一个图标，点击就可以访问，但是如果你本地服务关闭的话，再点击这个图标，有些页面可以访问，但有些页面访问不了。如果需要它都能够全部访问的话，你需要开启本地服务，也就是<code>hexo s</code></p><p>如果你的地址栏没有出现这个加号，首先在新的标签页上的地址栏输入<code>Chrome://flags</code>，然后再搜索栏输入<code>PWAS</code>进行查找，会出现两个选项一个为<code>Desktop PWAs local updating</code>，另一个为<code>Desktop PWAs installable from the omnibox</code>，将其设为<code>Enabled</code>，然后点击<code>Relaunch</code>，进行浏览器的重启，再查看<code>localhost:4000</code>，就会出现加号了。</p><h1 id="部署到github和coding"><a class="markdownIt-Anchor" href="#部署到github和coding"></a> 部署到github和coding</h1><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">hexo clean</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">hexo g</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">hexo d</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ul><li><a href="https://cloud.tencent.com/developer/article/1580238" target="_blank" rel="noopener">Hexo添加PWA支持</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      hexo博客开启pwa
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="PWA" scheme="https://gyh.im/tags/PWA/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly优化</title>
    <link href="https://gyh.im/posts/85f489f0/"/>
    <id>https://gyh.im/posts/85f489f0/</id>
    <published>2020-02-11T05:52:26.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="字体大小"><a class="markdownIt-Anchor" href="#字体大小"></a> 字体大小</h1><p>修改 <code>themes\Butterfly\source\css\var.styl</code> 找到</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Global Variables</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$font</span>-size = 14px</span></span><br></pre></td></tr></table></figure><p>我修改成了16px</p><h1 id="qq在线"><a class="markdownIt-Anchor" href="#qq在线"></a> qq在线</h1><ol><li><p>打开<a href="https://shang.qq.com/v3/widget.html" target="_blank" rel="noopener">此链接</a></p></li><li><p>然后点击立即免费开通服务就好了，进入到下面的界面可以复制其代码生成图片<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200211140211.png"  alt=""></p></li><li><p>在 <code>butterfly.yml</code> 文件中找到</p></li></ol><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">social</span>:</span><br><span class="line">  fa <span class="attribute">fa-github</span>: <span class="attribute">https</span>:<span class="comment">//github.com/imgyh</span></span><br><span class="line">  fa <span class="attribute">fa-envelope</span>: <span class="attribute">mailto</span>:gyhnice<span class="variable">@163</span>.com</span><br><span class="line">  fa <span class="attribute">fa-qq</span>: <span class="attribute">https</span>:<span class="comment">//wpa.qq.com/msgrd?v=3&amp;uin=1974355683&amp;site=qq&amp;menu=yes</span></span><br><span class="line">  fa <span class="attribute">fa-rss</span>: /atom.xml</span><br></pre></td></tr></table></figure><p>修改 <code>fa-qq</code> 这一项为你自己的链接就可以了</p><h1 id="post-front_matter写法"><a class="markdownIt-Anchor" href="#post-front_matter写法"></a> POST Front_matter写法</h1><h2 id="post和page模板"><a class="markdownIt-Anchor" href="#post和page模板"></a> post和page模板</h2><p>在博客根目录下的<code>scaffolds</code>文件夹中修改<code>post.md</code>和<code>page.md</code></p><h3 id="pagemd模板"><a class="markdownIt-Anchor" href="#pagemd模板"></a> page.md模板</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">comments:true</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"><span class="string">katex:true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="postmd模板"><a class="markdownIt-Anchor" href="#postmd模板"></a> post.md模板</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">katex:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">top:</span> </span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="tags写法"><a class="markdownIt-Anchor" href="#tags写法"></a> tags写法</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- tags1</span><br><span class="line">- tags2</span><br></pre></td></tr></table></figure><h3 id="categories写法"><a class="markdownIt-Anchor" href="#categories写法"></a> categories写法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">单个分类，了解一下:</span><br><span class="line"><span class="selector-tag">categories</span>:</span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">Linux</span></span><br><span class="line">并列分类，了解一下：</span><br><span class="line"><span class="selector-tag">categories</span>:</span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-attr">[Linux]</span></span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-attr">[Tools]</span></span><br><span class="line"></span><br><span class="line">并列+子分类(<span class="selector-attr">[]</span>中<span class="selector-tag">linux</span>是父分类，<span class="selector-tag">hexo</span>是子分类)，再了解一下：</span><br><span class="line"><span class="selector-tag">categories</span>:</span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-attr">[Linux, Hexo]</span></span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-attr">[Tools, PHP]</span></span><br></pre></td></tr></table></figure><h1 id="解决代码块渲染问题"><a class="markdownIt-Anchor" href="#解决代码块渲染问题"></a> 解决代码块渲染问题</h1><p>在代码块中输入html代码，hexo会把html代码渲染出来，而我只想看到代码是什么样子。<br>解决方法：只需要安装 <code>cheerio</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install <span class="symbol">cheerio@</span><span class="number">0.22</span><span class="number">.0</span> --save</span><br></pre></td></tr></table></figure><h1 id="代码框高亮显示行号"><a class="markdownIt-Anchor" href="#代码框高亮显示行号"></a> 代码框高亮，显示行号</h1><p>在站点配置文件 <code>_config.yml</code> 中修改这一项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="coding-申请ssl认证失败"><a class="markdownIt-Anchor" href="#coding-申请ssl认证失败"></a> coding 申请ssl认证失败</h1><p>Coding的 SSL/TLS 证书每次申请只能使用90天</p><p>申请 SSL/TLS 证书时，要将指向Coding的线路类型设为为默认，然后把指向到Github的域名关掉，就可以成功申请了。</p><p>因为Coding申请 SSL/TLS 证书需要通过 Let’s Encrypt 的 HTTP 方式验证域名所有权。因为 Let’s Encrypt是国外网络，如果不更改域名设置，验证域名所有权时不能正确指向到Coding而是指向到Github，所以就会导致申请失败。</p><h1 id="引用同站点的文章"><a class="markdownIt-Anchor" href="#引用同站点的文章"></a> 引用同站点的文章</h1><p>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法post_link来实现引用。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> 文章文件名（不要后缀） 文章标题（可选） %&#125;</span></span><br></pre></td></tr></table></figure><p>举例 引用 <a href="http://Hello.md" target="_blank" rel="noopener">Hello.md</a></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> Hello %&#125;</span></span><br><span class="line"><span class="xml">或者</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> Hello 你好 %&#125;</span></span><br></pre></td></tr></table></figure><h1 id="note-bootstrap-callout"><a class="markdownIt-Anchor" href="#note-bootstrap-callout"></a> Note (Bootstrap Callout)</h1><p>用法</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in"> note </span>[class] [no-icon] %&#125; </span><br><span class="line">Any content (support inline tags too.io). </span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class] :<span class="built_in"> default </span>| primary | success | <span class="builtin-name">info</span> | <span class="builtin-name">warning</span> | danger. </span><br><span class="line">[no-icon] : <span class="builtin-name">Disable</span> icon <span class="keyword">in</span> note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in"> note default </span>%&#125; </span><br><span class="line">default提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>primary no-icon %&#125; </span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>success %&#125; </span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span><span class="builtin-name">info</span> %&#125; </span><br><span class="line">info提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span><span class="builtin-name">warning</span> %&#125; </span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%<span class="built_in"> note </span>danger %&#125; </span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h1 id="gallery-相册"><a class="markdownIt-Anchor" href="#gallery-相册"></a> Gallery 相册</h1><p>写法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">gallery</span> %&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="xml">markdown图片格式</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endgallery</span> %&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125; </span><br><span class="line">![](http<span class="variable">s:</span>//gratisography.<span class="keyword">com</span>/<span class="keyword">wp</span>-content/uploads/<span class="number">2019</span>/<span class="number">10</span>/gratisography-scary-pumpkin-hand-<span class="number">900</span>x600.jpg) </span><br><span class="line">![](http<span class="variable">s:</span>//gratisography.<span class="keyword">com</span> /<span class="keyword">wp</span>-content/uploads/<span class="number">2019</span>/<span class="number">10</span>/gratisography-fresh-fish-dinner-<span class="number">900</span>x600.jpg) </span><br><span class="line">![](http<span class="variable">s:</span>//gratisography.<span class="keyword">com</span>/<span class="keyword">wp</span>-content/uploads/<span class="number">2019</span>/<span class="number">10</span>/gratisography-mountain-cloud -landscape-<span class="number">900</span>x600.jpg) </span><br><span class="line">![](http<span class="variable">s:</span>//picjumbo.<span class="keyword">com</span>/<span class="keyword">wp</span>-content/uploads/iphone-free-stock-photos-<span class="number">2210</span>x3315.jpg) </span><br><span class="line">![](http<span class="variable">s:</span>//picjumbo.<span class="keyword">com</span>/<span class="keyword">wp</span> -content/uploads/young-millennial-girl-drinking-lemonade-<span class="built_in">and</span>-overlooking-the-city-<span class="number">2210</span>x1473.jpg) </span><br><span class="line">![](http<span class="variable">s:</span>//picjumbo.<span class="keyword">com</span>/<span class="keyword">wp</span>-content/uploads/modern-graphic-designer -essentials _free_ stock _photos_ picjumbo_HNCK4919-<span class="number">2210</span>x1474.jpg) </span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h1 id="gallery-相册图库"><a class="markdownIt-Anchor" href="#gallery-相册图库"></a> Gallery 相册图库</h1><p>配合<code>Gallery 相册</code>一起使用</p><p>写法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span> </span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">galleryGroup</span> name description link img-url %&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">galleryGroup</span> name description link img-url %&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">galleryGroup</span> name description link img-url %&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：连接到对应相册的地址</li><li>img-url：图库封面的地址</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"gallery-group-main"</span>&gt; </span><br><span class="line">&#123;% galleryGroup <span class="string">'壁纸'</span> <span class="string">'收藏的一些壁纸'</span> <span class="string">'/Gallery/wallpaper'</span> https:<span class="regexp">//i</span>.loli.net<span class="regexp">/2019/</span><span class="number">11</span><span class="regexp">/10/</span>T7Mu8Aod3egmC4Q.png % &#125; </span><br><span class="line">&#123;% galleryGroup <span class="string">'漫威'</span> <span class="string">'关于漫威的图片'</span> <span class="string">'/Gallery/marvel'</span> https:<span class="regexp">//i</span>.loli.net<span class="regexp">/2019/</span><span class="number">12</span><span class="regexp">/25/</span><span class="number">8</span>t97aVlp4hgyBGu.jpg %&#125; </span><br><span class="line">&#123;% galleryGroup <span class="string">'OH MY GIRL'</span> <span class="string">'关于OH MY GIRL的图片'</span> <span class="string">'/Gallery/ohmygirl'</span> https:<span class="regexp">//i</span>.loli.net<span class="regexp">/2019/</span><span class="number">12</span><span class="regexp">/25/</span>hOqbQ3BIwa6KWpo.jpg %&#125; </span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h1 id="mermaid"><a class="markdownIt-Anchor" href="#mermaid"></a> mermaid</h1><p>使用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具体可以查看<a href="https://mermaid-js.github.io/mermaid/#/" target="_blank" rel="noopener">mermaid文档</a></p><p>写法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">mermaid</span> %&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="xml">内容</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125; </span><br><span class="line">pie </span><br><span class="line">    title Key elements <span class="keyword">in</span> Product X </span><br><span class="line">    <span class="string">"Calcium"</span> : 42.96 </span><br><span class="line">    <span class="string">"Potassium"</span> : 50.05 </span><br><span class="line">    <span class="string">"Magnesium"</span> : 10.01 </span><br><span class="line">    <span class="string">"Iron"</span> : 5</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><h1 id="更改域名需要改动的地方"><a class="markdownIt-Anchor" href="#更改域名需要改动的地方"></a> 更改域名，需要改动的地方</h1><p><strong>仅仅是我自己记录一下我更改域名哪些地方要改变</strong></p><blockquote><ul><li><code>_config.yml</code></li><li><code>butterfly.yml</code></li><li><code>robots.txt</code></li><li><code>CNAME</code></li><li><code>sw.js</code></li><li><code>leancloud.cn</code></li><li><code>google收录</code></li><li><code>百度收录</code></li><li><code>_post/</code></li><li><code>coding_ci</code></li></ul></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      butterfly主题的优化
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Valine配置评论提醒服务</title>
    <link href="https://gyh.im/posts/caa4f244/"/>
    <id>https://gyh.im/posts/caa4f244/</id>
    <published>2020-02-09T13:04:05.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a>是一款支持匿名的评论系统，已经集成到了hexo上面。<a href="https://deserts.io/valine-admin-document/" target="_blank" rel="noopener">Valine Admin</a>则是对 Valine 评论系统的拓展应用，可增强 Valine 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 <code>通知站长</code> 和 <code>@ 通知</code> 的功能，而且还支持自定义邮件通知模板。</p><h1 id="部署"><a class="markdownIt-Anchor" href="#部署"></a> 部署</h1><ul><li><p>在这之前你已经在你的hexo上部署好了Valine，如果没有请参考<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">这里</a></p></li><li><p>然后进入 <a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">Leancloud</a> 对应的 Valine 应用中。</p></li><li><p>点击 <code>云引擎 -&gt; 设置</code>填写代码库并保存：<code>https://github.com/zhaojun1998/Valine-Admin</code><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209231806.png"  alt=""></p></li><li><p>在设置页面，设置环境变量以及 Web 二级域名。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209231807.png"  alt=""><br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209231808.png"  alt=""></p></li></ul><table><thead><tr><th style="text-align:center">变量</th><th style="text-align:center">示例</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">SITE_NAME</td><td style="text-align:center">Deserts</td><td style="text-align:center">必填]博客名称</td></tr><tr><td style="text-align:center">SITE_URL</td><td style="text-align:center"><a href="https://panjunwen.com" target="_blank" rel="noopener">https://panjunwen.com</a></td><td style="text-align:center">[必填]首页地址</td></tr><tr><td style="text-align:center">SMTP_SERVICE</td><td style="text-align:center">QQ</td><td style="text-align:center">[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 更多</td></tr><tr><td style="text-align:center">SMTP_USER</td><td style="text-align:center"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td style="text-align:center">[必填]SMTP登录用户</td></tr><tr><td style="text-align:center">SMTP_PASS</td><td style="text-align:center">ccxxxxxxxxch</td><td style="text-align:center">[必填]SMTP登录密码(QQ邮箱需要获取独立密码)</td></tr><tr><td style="text-align:center">SENDER_NAME</td><td style="text-align:center">Deserts</td><td style="text-align:center">[必填]发件人</td></tr><tr><td style="text-align:center">SENDER_EMAIL</td><td style="text-align:center"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td style="text-align:center">[必填]发件邮箱</td></tr><tr><td style="text-align:center">ADMIN_URL</td><td style="text-align:center"><a href="https://xxx.leanapp.cn/" target="_blank" rel="noopener">https://xxx.leanapp.cn/</a></td><td style="text-align:center">[建议]Web主机二级域名，用于自动唤醒</td></tr><tr><td style="text-align:center">BLOGGER_EMAIL</td><td style="text-align:center"><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td style="text-align:center">[可选]博主通知收件地址，默认使用SENDER_EMAIL</td></tr><tr><td style="text-align:center">AKISMET_KEY</td><td style="text-align:center">xxxxxxxxxxxx</td><td style="text-align:center">[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td></tr><tr><td style="text-align:center">MAIL_SUBJECT</td><td style="text-align:center">见下文</td><td style="text-align:center">[可选]@通知邮件主题（标题）模板</td></tr><tr><td style="text-align:center">MAIL_TEMPLATE</td><td style="text-align:center">见下文</td><td style="text-align:center">[可选]@通知邮件内容模板</td></tr><tr><td style="text-align:center">MAIL_SUBJECT_ADMIN</td><td style="text-align:center">见下文</td><td style="text-align:center">[可选]博主邮件通知主题模板</td></tr><tr><td style="text-align:center">MAIL_TEMPLATE_ADMIN</td><td style="text-align:center">见下文</td><td style="text-align:center">[可选]博主邮件通知内容模板</td></tr></tbody></table><p><strong>参数解释</strong></p><hr><ul><li>ADMIN_URL：二级域名用于评论后台管理，如https://xxxx.leanapp.cn 。<br>Web主机二级域名，用于自动唤醒，会默认分配给你一个二级域名（<code>云引擎 -&gt; 设置路径下</code>），当然你也可以绑定一个<strong>已备案</strong>的域名，如图：<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209232739.png"  alt=""></li></ul><p><strong>垃圾评论检测</strong></p><blockquote><p>Akismet (Automattic Kismet)是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的WordPress 创始人 Matt Mullenweg，Akismet也是WordPress默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言Spam。有了Akismet之后，基本上不用担心垃圾留言的烦恼了。<br>启用Akismet后，当博客再收到留言会自动将其提交到Akismet并与Akismet上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p></blockquote><ul><li>AKISMET_KEY：如果还没有Akismet Key，你可以去 <a href="https://akismet.com/development/" target="_blank" rel="noopener">AKISMET FOR DEVELOPERS</a> 免费申请一个,此时你会获取一串AKISMET API密钥，填入变量值中；当AKISMET_KEY设为MANUAL_REVIEW时，开启人工审核模式；如果你不需要反垃圾评论，Akismet Key 环境变量可以忽略。</li><li>MAIL_SUBJECT: @通知邮件主题模板，请设置为: <code>${PARENT_NICK}，您在${SITE_NAME}上的评论收到了回复</code></li><li>MAIL_TEMPLATE：@通知邮件内容模板,请设置为:</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #ffffff;"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的留言有新回复啦！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;PARENT_COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;#comments"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span>                <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>MAIL_SUBJECT_ADMIN: 博主邮件通知主题模板,请设置为: <code>${SITE_NAME}上有新评论了</code></li><li>MAIL_TEMPLATE_ADMIN：博主邮件通知内容模板,请设置为:</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #12ADDB;"</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;SITE_URL&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>$</span><span class="template-variable">&#123;SITE_NAME&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的文章有了新的评论<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$</span><span class="template-variable">&#123;NICK&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>回复说：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $</span><span class="template-variable">&#123;COMMENT&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;POST_URL&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>如果你还想自定义邮件通知模板,以及上面四个参数的具体值（这里的代码它会自动渲染，看不到源代码，哈哈哈哈，大家还是去看他的博客文档吧） <a href="https://deserts.io/valine-admin-document/#%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5%E6%A8%A1%E6%9D%BF" target="_blank" rel="noopener">参考这里</a></p><hr><ul><li>切换到部署标签页，分支使用 master，点击部署即可:<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209234211.png"  alt=""></li></ul><p>第一次会很慢，可能会出错。如果出现依赖错误，请勾选 <strong>下载最新依赖</strong></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209234307.png"  alt=""></p><ul><li>评论管理。访问设置的二级域名https://二级域名.leanapp.cn/sign-up，注册管理员登录信息，如：<a href="https://xxxx.leanapp.cn/sign-up" target="_blank" rel="noopener">https://xxxx.leanapp.cn/sign-up</a></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209234648.png"  alt=""></p><p>此后，可以通过<code>https://二级域名.leanapp.cn/</code> 管理评论。</p><ul><li>定时任务设置<br>目前实现了两种云函数定时任务：(1)自动唤醒，定时访问Web APP二级域名防止云引擎休眠；(2)每天定时检查24小时内漏发的邮件通知。<strong>两个都要设置</strong></li></ul><p>进入云引擎-定时任务中，创建定时器，创建两个定时任务。</p><p>选择self-wake云函数，Cron表达式为<code>0 0/30 7-23 * * ?</code>，表示每天早6点到晚23点每隔30分钟访问云引擎，<code>ADMIN_URL</code>环境变量务必设置正确：</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209234835.png"  alt=""></p><p>选择resend-mails云函数，Cron表达式为 <code>0 0 8 * * ?</code> ，表示每天早8点检查过去24小时内漏发的通知邮件并补发：</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209234935.png"  alt=""></p><ul><li>添加定时器后记得点击启动方可生效。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200209235059.png"  alt=""></p><ul><li>至此全部结束，可打开https://二级域名.leanapp.cn/管理评论</li></ul><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ul><li><a href="https://github.com/zhaojun1998/Valine-Admin" target="_blank" rel="noopener">Valine Admin 文档</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      基于Valine Admin的评论提醒服务
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
      <category term="LeanCloud" scheme="https://gyh.im/tags/LeanCloud/"/>
    
      <category term="Valine" scheme="https://gyh.im/tags/Valine/"/>
    
  </entry>
  
  <entry>
    <title>hexo中的一些小插件</title>
    <link href="https://gyh.im/posts/58a32e43/"/>
    <id>https://gyh.im/posts/58a32e43/</id>
    <published>2020-02-09T06:42:08.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="hexo-abbrlink"><a class="markdownIt-Anchor" href="#hexo-abbrlink"></a> Hexo-abbrlink</h1><p>在做次优化之前，hexo文章链接默认的生成规则是：:year/:month/:day/:title，是按照年、月、日、标题来生成的。<br>比如：<code>https://www.xxx.com/2019/08/12/hello-world/</code>这样，如果文章标题是中文的话，URL链接是也会是中文，</p><p>为了让url地址不变，有了接下来这个插件<code>hexo-abbrlink</code></p><p>详情见这篇文章<a href="/posts/553fb3c9/" title="Hexo-abbrlink生成唯一永久文章链接">Hexo-abbrlink生成唯一永久文章链接</a></p><h1 id="hexo-generator-feed"><a class="markdownIt-Anchor" href="#hexo-generator-feed"></a> hexo-generator-feed</h1><p>这是一款生成rss订阅文件的插件</p><p>详情见这篇文章<a href="/posts/b5427f21/" title="博客SEO优化">博客SEO优化</a></p><h1 id="hexo-generator-sitemap-和-hexo-generator-baidu-sitemap"><a class="markdownIt-Anchor" href="#hexo-generator-sitemap-和-hexo-generator-baidu-sitemap"></a> hexo-generator-sitemap 和 hexo-generator-baidu-sitemap</h1><p>这是生成站点地图的插件</p><p>详情见这篇文章<a href="/posts/b5427f21/" title="博客SEO优化">博客SEO优化</a></p><h1 id="hexo-baidu-url-submit"><a class="markdownIt-Anchor" href="#hexo-baidu-url-submit"></a> hexo-baidu-url-submit</h1><p>百度自动提交，推送自己网站的插件，你在输入 <code>hexo d</code> 就会自动提交你的url</p><p>详情见这篇文章<a href="/posts/b5427f21/" title="博客SEO优化">博客SEO优化</a></p><h1 id="hexo-tag-aplayer"><a class="markdownIt-Anchor" href="#hexo-tag-aplayer"></a> hexo-tag-aplayer</h1><p>hexo-tag-aplayer是将aplay嵌入博客页面的hexo插件<br>原先 hexo-tag-aplayer 不支持 MetingJS，使得需要图片url，音乐url等等参数，操作起来都很麻烦，需要去音乐网站扒音乐播放链接或者下载下来存储在七牛云或本地。but, now…</p><p>MeingJS 支持 (3.0 新功能)<br>MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>详情见这篇文章<a href="/posts/6b33fe6/" title="Hexo添加音乐播放功能">Hexo添加音乐播放功能</a></p><h1 id="hexo-helper-live2d"><a class="markdownIt-Anchor" href="#hexo-helper-live2d"></a> hexo-helper-live2d</h1><p>详情见这篇文章<a href="/posts/2805db8d/" title="hexo博客添加live2d看板娘">hexo博客添加live2d看板娘</a></p><h1 id="hexo-generator-index-pin-top"><a class="markdownIt-Anchor" href="#hexo-generator-index-pin-top"></a> hexo-generator-index-pin-top</h1><p>这是一款文章置顶插件<br>在butterfly主题中，你需要<code>sudo npm uninstall hexo-generator-index --save</code> 然后 <code>sudo npm install hexo-generator-index-pin-top --save</code></p><p>你要在文章的front-matter区域里添加top: True属性来把这篇文章置顶。</p><p>你可以参考 <a href="https://github.com/netcan/hexo-generator-index-pin-top" target="_blank" rel="noopener">hexo-generator-index-pin-top</a>这个仓库来了解更多细节。</p><h1 id="hexo-neat"><a class="markdownIt-Anchor" href="#hexo-neat"></a> hexo-neat</h1><p>这是一款Hexo 页面静态资源压缩插件<br>我们自己添加的 css 和 js 文件为了可读性，往往会有很多换行和空格，这些对于浏览器来说是没有用的，甚至还会降低渲染页面的速度。同时，由于 Markdown 转成 html 的 bug，会导致页面存在大量的空白，我们可以通过查看页面源代码发现这些大量的空白符，这也会造成页面渲染的性能问题。</p><p>因此，我们需要对页面的静态资源进行压缩，包括 css、js 和 html 等文件。</p><h2 id="安装hexo-neat"><a class="markdownIt-Anchor" href="#安装hexo-neat"></a> 安装<a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a></h2><p>在博客根目录下输入<br><code>sudo npm install hexo-neat --save</code></p><h2 id="站点配置文件添加相关配置"><a class="markdownIt-Anchor" href="#站点配置文件添加相关配置"></a> 站点配置文件添加相关配置</h2><p>然后我们需要在站点配置文件<code>_config.yml</code> 中添加以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 博文压缩</span></span><br><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 压缩html</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line"><span class="comment"># 压缩css  </span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/*.min.css'</span></span><br><span class="line"><span class="comment"># 压缩js</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/*.min.js'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/jquery.fancybox.pack.js'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/index.js'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/fireworks.js'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/js/main.js'</span></span><br></pre></td></tr></table></figure><h2 id="几个小问题"><a class="markdownIt-Anchor" href="#几个小问题"></a> 几个小问题</h2><h3 id="跳过压缩文件的正确配置方式"><a class="markdownIt-Anchor" href="#跳过压缩文件的正确配置方式"></a> 跳过压缩文件的正确配置方式</h3><p>如果按照官方插件的文档说明来配置 exclude，你会发现完全不起作用。这是因为配置的文件路径不对，压缩时找不到你配置的文件，自然也就无法跳过了。你需要给这些文件指定正确的路径，万能的配置方式如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'**/*.min.css'</span></span><br></pre></td></tr></table></figure><h3 id="压缩-html-时不要跳过-markdown-文件"><a class="markdownIt-Anchor" href="#压缩-html-时不要跳过-markdown-文件"></a> 压缩 html 时不要跳过 Markdown 文件</h3><p>如果跳过压缩<code>.md</code> 文件，而你又刚好在文章中使用到了自带的 tab 标签，那么当 Hexo 在生成静态页面时就会发生解析错误。这会导致使用到了 tab 标签的页面生成失败而无法访问。</p><h3 id="压缩-html-时不要跳过swig-文件"><a class="markdownIt-Anchor" href="#压缩-html-时不要跳过swig-文件"></a> 压缩 html 时不要跳过.swig 文件</h3><p><code>.swig</code> 文件是模板引擎文件，简单的说 Hexo 可以通过这些文件来生成对应的页面。如果跳过这些文件，那么你将会发现，你的所有页面完全没有起到压缩的效果，页面源代码里依然存在着一大堆空白。</p><h3 id="页面加载性能测试"><a class="markdownIt-Anchor" href="#页面加载性能测试"></a> 页面加载性能测试</h3><p>现在我们可以测试下页面加载性能。</p><p>Google PageSpeed Insights 可用于帮助分析网页加载速度瓶颈，该网站将会针对指定域名进行在线测试，并提供一份详细的页面加载分析报告，报告中还会根据页面资源加载情况给出合理的优化建议及预期优化效果，因此用户可以有的放矢的进行性能优化专项整改。</p><p><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">Google PageSpeed Insights</a></p><h1 id="hexo-tag-dplayer"><a class="markdownIt-Anchor" href="#hexo-tag-dplayer"></a> hexo-tag-dplayer</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 是<a href="https://github.com/MoePlayer/DPlayer" target="_blank" rel="noopener"> APlayer</a>播放器的 Hexo 标签插件，可以十分方便地在文章内插入视频播放器。</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>安装 hexo-tag-dplayer 插件十分简单，只需要在博客目录执行</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> hexo-tag-dplayer -s</span><br></pre></td></tr></table></figure><p>修改 Hexo 的配置文件 <code>_config.yml</code> ，增加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo-tag-dplayer:</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css</span></span><br><span class="line">  <span class="attr">default:</span> </span><br><span class="line">    <span class="attr">api:</span> <span class="string">https://api.prprpr.me/dplayer/</span></span><br><span class="line">    <span class="attr">loop:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">screenshot:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">autoplay:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 后面还可以接着写其他默认配置</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>使用 hexo-tag-dplayer 非常简单，只需要在 MarkDown 文件中插入正确的标记就可以了。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="meta">%</span> dplayer <span class="string">"url=http://blog.gisersqdai.top/shanghaiurbandevlopment.mp4"</span> <span class="meta">%</span>&#125;</span><br></pre></td></tr></table></figure><p>如果还需要其他配置，尽管在上面写就好，详情可以看<a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">这里</a>，下面有一个简单的示例可以看一下：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="meta">%</span> dplayer <span class="string">"url=http://blog.gisersqdai.top/shanghaiurbandevlopment.mp4"</span> <span class="string">"id=46190A32F63DFF2CF0A3BB0F3293636C"</span> <span class="string">"addition=https://api.prprpr.me/dplayer/v3/bilibili?aid=17150441 "</span> <span class="meta">%</span>&#125;</span><br></pre></td></tr></table></figure><p>可选的一些参数：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">默认值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">url</td><td style="text-align:center">必须值</td><td style="text-align:center">视频地址</td></tr><tr><td style="text-align:center">loop</td><td style="text-align:center">false</td><td style="text-align:center">视频循环播放</td></tr><tr><td style="text-align:center">volume</td><td style="text-align:center">0.7</td><td style="text-align:center">播放器音量</td></tr><tr><td style="text-align:center">hotkey</td><td style="text-align:center">true</td><td style="text-align:center">开启热键</td></tr><tr><td style="text-align:center">autoplay</td><td style="text-align:center">true</td><td style="text-align:center">自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td style="text-align:center">logo</td><td style="text-align:center">-</td><td style="text-align:center">在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置</td></tr><tr><td style="text-align:center">mutex</td><td style="text-align:center">true</td><td style="text-align:center">该选项开启时，如果同页面有其他播放，该播放器会暂停</td></tr><tr><td style="text-align:center">highlight</td><td style="text-align:center">[]</td><td style="text-align:center">自定义进度条提示点</td></tr><tr><td style="text-align:center">preload</td><td style="text-align:center">auto</td><td style="text-align:center">视频文件预载入模式，可选项： none, metadata, auto</td></tr><tr><td style="text-align:center">theme</td><td style="text-align:center">#ad7a86</td><td style="text-align:center">播放器风格色彩设置</td></tr></tbody></table><h3 id="使用弹幕"><a class="markdownIt-Anchor" href="#使用弹幕"></a> 使用弹幕</h3><p>上面的示例中已经写了怎么使用弹幕了，使用弹幕首先需要有一个 ID ，建议使用视频的哈希值作为ID，这样可以尽可能保证 ID 唯一，防止重复，接下来要配置弹幕接口，官方免费的弹幕接口能用，但是不稳定，如果有特殊需求，推荐个人自己搭建弹幕服务器。</p><p>解析 BiliBiLi 弹幕，这个上面的示例也已经有了，同样，免费的服务不一定稳定，有特殊需求的请自己搭建弹幕服务器。</p><p>增加外部弹幕列表，同解析 BiliBiLi 弹幕一样，只要将外部弹幕的地址写进<code>addition</code>就可以了。</p><h3 id="使用字幕"><a class="markdownIt-Anchor" href="#使用字幕"></a> 使用字幕</h3><p>增加参数<code>&quot;subtitle=字幕文件地址&quot;</code>就可以了，如需修改字幕颜色或者字体大小，仿照其他参数写就可以了。</p><h1 id="hexo-pwa"><a class="markdownIt-Anchor" href="#hexo-pwa"></a> hexo-pwa</h1><p>Progressive Web App, 简称PWA，是提升 Web App 的体验的一种新方法，能给用户原生应用的体验。</p><p>PWA 能做到原生应用的体验不是靠特指某一项技术，而是经过应用一些新技术进行改进，在安全、性能和体验三个方面都有很大提升，PWA 本质上是 Web App，借助一些新技术也具备了 Native App 的一些特性，兼具 Web App 和 Native App 的优点。</p><p>详情见这篇文章<a href="/posts/805d5d89/" title="hexo博客开启pwa">hexo博客开启pwa</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      我使用的一些小插件
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客添加live2d看板娘</title>
    <link href="https://gyh.im/posts/2805db8d/"/>
    <id>https://gyh.im/posts/2805db8d/</id>
    <published>2020-02-08T16:14:30.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="下载安装"><a class="markdownIt-Anchor" href="#下载安装"></a> 下载安装</h1><p>在博客根目录输入<code>npm install --save hexo-helper-live2d</code><br>打开博客站点配置文件<code>_config.yml</code> 添加如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-tororo</span> <span class="comment"># 白猫 # npm-module package name</span></span><br><span class="line">    <span class="comment">#live2d-widget-model-hijiki 黑猫</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-50</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure><p>代码含义具体可参考<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">live2d官方文档</a></p><h1 id="添加模型"><a class="markdownIt-Anchor" href="#添加模型"></a> 添加模型</h1><p>做完上面那一步之后，你是见不到你的老婆的（滑稽）<br>还需要下载模型</p><p>进入这个网址<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">预览</a> 有哪些模型</p><p>然后再安装模型<br>参见这个网址去<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">安装</a></p><p>enjoy it！</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">live2d官方文档</a><br>2.<a href="https://rickeeyzhou.github.io/2018/04/30/5-HexoLive2d/" target="_blank" rel="noopener">5.Hexo_基于live2d插件的动态猫猫设置</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      如何拥有个人的免费网站
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="live2d" scheme="https://gyh.im/tags/live2d/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加音乐播放功能</title>
    <link href="https://gyh.im/posts/6b33fe6/"/>
    <id>https://gyh.im/posts/6b33fe6/</id>
    <published>2020-02-08T14:19:51.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a>是将<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">aplay</a>嵌入博客页面的hexo插件<br>原先 hexo-tag-aplayer 不支持 MetingJS，使得需要图片url，音乐url等等参数，操作起来都很麻烦，需要去音乐网站扒音乐播放链接或者下载下来存储在七牛云或本地。but, now…</p><p>MeingJS 支持 (3.0 新功能)<br><a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting" target="_blank" rel="noopener">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><h1 id="安装和配置"><a class="markdownIt-Anchor" href="#安装和配置"></a> 安装和配置</h1><p>在hexo的博客根目录下你只需写入以下代码就可以安装他</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> <span class="comment">--save hexo-tag-aplayer</span></span><br></pre></td></tr></table></figure><p>要想使用它你需要在站点配置文件<code>_config.yml</code>中添加如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h2 id="标签参数"><a class="markdownIt-Anchor" href="#标签参数"></a> 标签参数</h2><ul><li>title : 曲目标题</li><li>author: 曲目作者</li><li>url: 音乐文件 URL 地址</li><li>picture_url: (可选) 音乐对应的图片地址</li><li>narrow: （可选）播放器袖珍风格</li><li>autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li>width:xxx: (可选) 播放器宽度 (默认: 100%)</li><li>lrc:xxx: （可选）歌词文件 URL 地址</li></ul><p>当开启 Hexo 的 文章资源文件夹 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="meta">%</span> aplayer <span class="string">"Caffeine"</span> <span class="string">"Jeff Williams"</span> <span class="string">"caffeine.mp3"</span> <span class="string">"picture.jpg"</span> <span class="string">"lrc:caffeine.txt"</span> <span class="meta">%</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="歌词标签"><a class="markdownIt-Anchor" href="#歌词标签"></a> 歌词标签</h2><p>除了使用标签 lrc 选项来设定歌词，你也可以直接使用 aplayerlrc 标签来直接插入歌词文本在博客中：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlrc <span class="string">"title"</span> <span class="string">"author"</span> <span class="string">"url"</span> <span class="string">"autoplay"</span> %&#125;</span><br><span class="line">[<span class="number">00</span>:<span class="number">00.00</span>]lrc here</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure><h2 id="播放列表"><a class="markdownIt-Anchor" href="#播放列表"></a> 播放列表</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"narrow"</span>: <span class="keyword">false</span>,                          <span class="regexp">//</span> （可选）播放器袖珍风格</span><br><span class="line">    <span class="string">"autoplay"</span>: <span class="keyword">true</span>,                         <span class="regexp">//</span> （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"random"</span>,                         <span class="regexp">//</span> （可选）曲目循环类型，有 <span class="string">'random'</span>（随机播放）, <span class="string">'single'</span> (单曲播放), <span class="string">'circulation'</span> (循环播放), <span class="string">'order'</span> (列表播放)， 默认：<span class="string">'circulation'</span> </span><br><span class="line">    <span class="string">"showlrc"</span>: <span class="number">3</span>,                             <span class="regexp">//</span> （可选）歌词显示配置项，可选项有：<span class="number">1,2</span>,<span class="number">3</span></span><br><span class="line">    <span class="string">"mutex"</span>: <span class="keyword">true</span>,                            <span class="regexp">//</span> （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    <span class="string">"theme"</span>: <span class="string">"#e6d0b2"</span>,                      <span class="regexp">//</span> （可选）播放器风格色彩设置，默认：<span class="comment">#b7daff</span></span><br><span class="line">    <span class="string">"preload"</span>: <span class="string">"metadata"</span>,                    <span class="regexp">//</span> （可选）音乐文件预载入模式，可选项： <span class="string">'none'</span> <span class="string">'metadata'</span> <span class="string">'auto'</span>, 默认: <span class="string">'auto'</span></span><br><span class="line">    <span class="string">"listmaxheight"</span>: <span class="string">"513px"</span>,                 <span class="regexp">//</span> (可选) 该播放列表的最大长度</span><br><span class="line">    <span class="string">"music"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"CoCo"</span>,</span><br><span class="line">            <span class="string">"author"</span>: <span class="string">"Jeff Williams"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"caffeine.mp3"</span>,</span><br><span class="line">            <span class="string">"pic"</span>: <span class="string">"caffeine.jpeg"</span>,</span><br><span class="line">            <span class="string">"lrc"</span>: <span class="string">"caffeine.txt"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"アイロニ"</span>,</span><br><span class="line">            <span class="string">"author"</span>: <span class="string">"鹿乃"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"irony.mp3"</span>,</span><br><span class="line">            <span class="string">"pic"</span>: <span class="string">"irony.jpg"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><h1 id="meingjs-支持-30-新功能"><a class="markdownIt-Anchor" href="#meingjs-支持-30-新功能"></a> MeingJS 支持 (3.0 新功能)</h1><p>例如打开网易云音乐网站找到这首<code>coldplay</code>的《Viva la Vida》，复制他的分享链接，从url中可以得到其id为3986040，按下面格式即可使用</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting <span class="string">"3986040"</span> <span class="string">"netease"</span> <span class="string">"song"</span> <span class="string">"theme:#555"</span> <span class="string">"mutex:true"</span> <span class="string">"listmaxheight:340px"</span> <span class="string">"preload:auto"</span> %&#125;</span><br></pre></td></tr></table></figure><div id="aplayer-dorhtzbD" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="3986040" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"></div><p>下面是歌单的写法</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting <span class="string">"7334369613"</span> <span class="string">"tencent"</span> <span class="string">"playlist"</span> <span class="string">"theme:#555"</span> <span class="string">"mutex:true"</span> <span class="string">"listmaxheight:340px"</span> <span class="string">"preload:auto"</span> %&#125;</span><br></pre></td></tr></table></figure><div id="aplayer-cotwyfoa" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="7334369613" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"></div><p>我们来看看这里面的参数是什么意思<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208224646.png"  alt=""></p><h1 id="已知问题"><a class="markdownIt-Anchor" href="#已知问题"></a> 已知问题</h1><ul><li><p>有些音乐使用 <code>meting</code> 无法加载出来</p></li><li><p><code>meting</code> 和 <code>aplayer</code> 不能存在一个页面中，否则会出现 <code>aplayer</code>不会出现的情况</p></li></ul><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://blog.csdn.net/hushhw/article/details/88092728" target="_blank" rel="noopener">Hexo主题插入音乐之aplayer音乐播放器</a><br>2.<a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer文档</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      在hexo上添加播放功能
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
      <category term="Aplayer" scheme="https://gyh.im/tags/Aplayer/"/>
    
  </entry>
  
  <entry>
    <title>使用jsDelivr加速GitHub仓库图片</title>
    <link href="https://gyh.im/posts/dc1f1b6b/"/>
    <id>https://gyh.im/posts/dc1f1b6b/</id>
    <published>2020-02-08T07:40:34.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>jsDelivr 是国外的一家优秀的公共 CDN 服务提供商，也是首个「打通中国大陆（网宿公司运营）与海外的免费 CDN 服务。jsDelivr 有一个十分好用的功能——它可以加速 Github 仓库的文件。我们可以借此搭建一个免费、全球访问速度超快的图床。<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208160652.png"  alt="如图"></p><h1 id="github"><a class="markdownIt-Anchor" href="#github"></a> GitHub</h1><h2 id="创建仓库"><a class="markdownIt-Anchor" href="#创建仓库"></a> 创建仓库</h2><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208162726.png"  alt="创建仓库"></p><h2 id="获取token"><a class="markdownIt-Anchor" href="#获取token"></a> 获取token</h2><p>访问<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">这里</a><br>点击创建token<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208163008.png"  alt="生成token"><br>分配token权限<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208163225.png"  alt=""><br>最后拉到最下面，生成token，并复制</p><h1 id="picgo"><a class="markdownIt-Anchor" href="#picgo"></a> PicGo</h1><ol><li>点击<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">此处</a></li><li>打开picgo并配置，点图床设置-&gt;github图床<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208163552.png"  alt=""></li></ol><blockquote><p>设定仓库名：填入你上面创建的仓库名，格式为：用户名/仓库名；<br>设定分支名：一般填写 master 就行了；<br>设定 Token：将 Github 配置中得到的 Token 粘贴进去；<br>指定存储路径：你想要把图片放在仓库的哪个位置，比如我是：/img，Github 对应的是：<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208163835.png"  alt=""></p></blockquote><h1 id="jsdelivr-配置"><a class="markdownIt-Anchor" href="#jsdelivr-配置"></a> jsDelivr 配置</h1><p>我设定的是这样<br><code>https://cdn.jsdelivr.net/gh/imgyh/cdn@master</code></p><blockquote><p>gh表示github,不需要改<br>imgyh 是你自己的用户名<br>cdn表示自己的仓库<br>@master 表示在master分支</p></blockquote><h1 id="imagine"><a class="markdownIt-Anchor" href="#imagine"></a> Imagine</h1><p><a href="https://github.com/meowtec/Imagine" target="_blank" rel="noopener">Imagine</a>是一款用于压缩 PNG 和 JPEG 的桌面应用程序，具有现代友好的 UI。配合之前讲过的 PicGo 我的图片压缩以及上传环节变得极为有效率！</p><ul><li>多格式（JPEG，PNG，WebP）</li><li>格式转换</li><li>跨平台</li><li>GUI</li><li>批量优化</li><li>多语言支持</li><li>功能（支持批量操作：导入、处理、保存）</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200214174405.png"  alt=""></p><p>总的来说压缩率还是很高的。</p><h1 id="enjoy-it"><a class="markdownIt-Anchor" href="#enjoy-it"></a> enjoy it !</h1><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://blog.iljw.me/2019/05/jsdelivr-cdn-github.html" target="_blank" rel="noopener">使用 jsDelivr CDN 加速 Github 仓库的图片，以作为博客的图床</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      搭建自己的图床
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
      <category term="jsDelivr" scheme="https://gyh.im/tags/jsDelivr/"/>
    
  </entry>
  
  <entry>
    <title>博客SEO优化</title>
    <link href="https://gyh.im/posts/b5427f21/"/>
    <id>https://gyh.im/posts/b5427f21/</id>
    <published>2020-02-08T05:00:47.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="安装rss插件生成atomxml"><a class="markdownIt-Anchor" href="#安装rss插件生成atomxml"></a> 安装RSS插件生成atom.xml</h1><p>进入本地hexo目录，输入以下命令:<br><code>sudo npm install hexo-generator-feed</code><br>在博客目录的_config.yml中添加如下代码:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p>因为我使用的是butterfly主题，已经集成了rss功能，所以设置到这一步就可以了。如果你的主题里面没有rss相关设置，也可以添加如下代码：<br><code>rss： /atom.xml</code></p><h1 id="百度google推送"><a class="markdownIt-Anchor" href="#百度google推送"></a> 百度google推送</h1><h2 id="让百度收录"><a class="markdownIt-Anchor" href="#让百度收录"></a> 让百度收录</h2><p>查看百度是否收录可以在百度搜索引擎中输入<code>site:你的域名</code>查看</p><h3 id="验证网站所有权"><a class="markdownIt-Anchor" href="#验证网站所有权"></a> 验证网站所有权</h3><p>登录<a href="https://ziyuan.baidu.com/site/index#/" target="_blank" rel="noopener">百度站长平台</a>, 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为www开头的，不要输入github.io的，因为github是不允许百度的spider爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208170943.jpg"  alt=""><br>在选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：文件验证。html标签验证和cname解析验证，使用哪一种方式都可以，都是比较简单的，但是一定要注意，使用文件验证文件存放的位置需要放在source文件夹下，如果是html文件那么hexo就会将其编译，所以必须要加上的layout:false，这样就不会被hexo编译。（如果验证文件是txt格式的就不需要），其他两种方式也是很简单的，我个人推荐文件验证和cname验证，cname验证最为简单，只需加一条解析就好~<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171049.jpg"  alt=""></p><h3 id="生成网站地图"><a class="markdownIt-Anchor" href="#生成网站地图"></a> 生成网站地图</h3><p>我们需要安装插件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save     </span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>然后修改博客配置文件<br>在根目录配置文件中修改url为你的站点地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://www.gyh.im</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span>  <span class="comment"># :year/:month/:day/:title/</span></span><br><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>执行完之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件</p><blockquote><p>然后我们就可以将我们生成的sitemap文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap</p></blockquote><blockquote><p>通常主动推送&gt;自动推送&gt;sitemap</p></blockquote><h3 id="主动推送"><a class="markdownIt-Anchor" href="#主动推送"></a> 主动推送</h3><p>我们这里介绍主动推送<br>安装插件<code>sudo npm install hexo-baidu-url-submit --save</code><br>在根目录_config.yml中添加如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">100</span> <span class="comment"># 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">gyh.im</span> <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span>  <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><p>加入新的deploy，将原来的deploy改成下面这样的格式，有两个type时要在前面添加<code>-</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">- <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: </span><br><span class="line">        <span class="attribute">github</span>: </span><br><span class="line">        <span class="attribute">coding</span>:</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br><span class="line"></span><br><span class="line">- <span class="attribute">type</span>: baidu_url_submitter</span><br></pre></td></tr></table></figure><p>设置主动推送，这个一般在主题配置文件夹下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#百度推送</span></span><br><span class="line"><span class="attr">baidu_push:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这样执行hexo deploy的时候，新的链接就会被推送了<br>推送成功时,会有如下终端提示,各种不同的推送反馈字段说明在这里查看,一般来说,推送失败都是地址不相符造成的,我们只需对比baidu_url_submit在public中生成的baidu_urls.txt的地址<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171135.png"  alt=""></p><h3 id="sitemap提交"><a class="markdownIt-Anchor" href="#sitemap提交"></a> sitemap提交</h3><p>将我们上一步生成的sitemap文件提交到百度就可以了~<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171207.jpg"  alt=""></p><h2 id="google收录"><a class="markdownIt-Anchor" href="#google收录"></a> google收录</h2><p>登录<a href="https://www.google.com/webmasters" target="_blank" rel="noopener">google站长平台</a> 点添加属性，按要求添加即可</p><p>添加 sitemap : 进入 Google Search Console - 抓取 - 站点地图,点击「添加/测试站点地图」,输入你的博客网址. 若无报错则站点地图提交成功<br>提交 robots.txt:</p><blockquote><p>robots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。<br>具体可参考以下配置，你也可以</p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># hexo robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line"></span><br><span class="line"># 可选</span><br><span class="line">###########################</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /about/</span><br><span class="line"></span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line">###########################</span><br><span class="line"></span><br><span class="line">Sitemap: https:<span class="comment">//gyh.im/sitemap.xml</span></span><br><span class="line">Sitemap: https:<span class="comment">//gyh.im/baidusitemap.xml</span></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h1><p>1.<a href="https://darler.gitee.io/post/livere/" target="_blank" rel="noopener">rss</a><br>2.<a href="https://www.jianshu.com/p/efaf72aab32e" target="_blank" rel="noopener">Hexo 博客从搭建部署到SEO优化等详细教程</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      博客SEO优化
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-abbrlink生成唯一永久文章链接</title>
    <link href="https://gyh.im/posts/553fb3c9/"/>
    <id>https://gyh.im/posts/553fb3c9/</id>
    <published>2020-02-07T11:28:43.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在做次优化之前，hexo文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>，是按照年、月、日、标题来生成的。<br>比如：<code>https://www.xxx.com/2019/08/12/hello-world/</code> 这样，如果文章标题是中文的话，URL链接是也会是中文，</p><p>为了让url地址不变，有了接下来这个插件<a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a></p><h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1><h2 id="安装插件"><a class="markdownIt-Anchor" href="#安装插件"></a> 安装插件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h2 id="修改站点配置文件_configyml"><a class="markdownIt-Anchor" href="#修改站点配置文件_configyml"></a> 修改站点配置文件_config.yml</h2><p>定位到 <code>permalink: :year/:month/:day/:title/</code><br>把这行代码修改成如下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> posts/:abbrlink/</span><br><span class="line"><span class="meta"># abbrlink config</span></span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">  alg:</span> crc32  <span class="meta">#support crc16(default) and crc32</span></span><br><span class="line"><span class="symbol">  rep:</span> hex    <span class="meta">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>修改 alg 和rep参数有四种组合</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">crc16 <span class="meta">&amp; hex</span></span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/66c8.html</span></span><br><span class="line"></span><br><span class="line">crc16 <span class="meta">&amp; dec</span></span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/65535.html</span></span><br><span class="line">crc32 <span class="meta">&amp; hex</span></span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/8ddf18fb.html</span></span><br><span class="line"></span><br><span class="line">crc32 <span class="meta">&amp; dec</span></span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/1690090958.html</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink的GitHub</a><br>2.<a href="https://www.jianshu.com/p/c7de2ae59975" target="_blank" rel="noopener">Hexo-abbrlink生成唯一永久文章链接</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      设置永久url链接
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo在github和coding上双线部署实现百度收录</title>
    <link href="https://gyh.im/posts/bdd85b8e/"/>
    <id>https://gyh.im/posts/bdd85b8e/</id>
    <published>2020-02-07T09:46:41.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在 <a href="/posts/dadde4c0/" title="githubPage搭建hexo博客">githubPage搭建hexo博客</a> 这篇文章中，介绍了如何利用github和hexo部署个人博客。<br>但是众所周知，github在国内访问速度很慢。所以我们在coding上部署一个镜像站点，实现双线访问。</p><h1 id="coding注册"><a class="markdownIt-Anchor" href="#coding注册"></a> coding注册</h1><p>coding 1月20号开始凌晨更新，好多地方和原来不一样了，现在只能注册团队用户</p><ol><li>进入<a href="https://coding.net/" target="_blank" rel="noopener">coding官网</a> 点击免费注册</li><li>创建项目，选择DecOps项目。项目名和项目标识以及仓库名一致</li><li>配置公钥，以实现部署时免密。与github一样，个人设置–&gt;增添公钥，<br>但是你现在没有公钥，使用 <code>ssh-keygen -t rsa -C &quot;yourEmail@example.com&quot;</code> 生成，在用户目录下 .ssh 中到id_rsa.pub文件，复制到框中。</li></ol><p>在命令行输入 <code>ssh -T git@e.coding.net&amp;nbsp</code>;来检查是否配置成功，</p><p>若出现以下提示，则证明配置成功：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Coding 提示: Hello XXX, You've connected <span class="keyword">to</span> <span class="module-access"><span class="module"><span class="identifier">Coding</span>.</span></span>net via SSH. This is a personal key.</span><br><span class="line">XXX，你好，你已经通过 SSH 协议认证 <span class="module-access"><span class="module"><span class="identifier">Coding</span>.</span></span>net 服务，这是一个个人公钥</span><br></pre></td></tr></table></figure><h1 id="配置根目录下的_configyml"><a class="markdownIt-Anchor" href="#配置根目录下的_configyml"></a> 配置根目录下的_config.yml</h1><p>通过修改站点配置文件，实现github和coding的同时部署。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: </span><br><span class="line">        <span class="attribute">github</span>: <span class="attribute">https</span>:<span class="comment">//github.com/imgyh/imgyh.github.io.git</span></span><br><span class="line">        <span class="attribute">coding</span>: <span class="attribute">https</span>:<span class="comment">//e.coding.net/imgyh/imgyh.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>这里可以用SSH的那个链接也就是这种的git@github.com:imgyh/imgyh.github.io.git以及git@e.coding.net:imgyh/imgyh.git<br>这两种好像是配合上面的公钥来使用的，就不用输密码了，<br>但是我没成功，执行<code>sudo hexo d</code>一直在报<code>Permission denied (publickey). fatal: Could not read from remote repository.</code>这个错误<br>后来我换成HTTP后问题又来了，HTTP向远端推送时需要输入用户名和密码，可是coding的已经取消了用户名这样的唯一标识（github用户名唯一）他的用户名变成了邮箱</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Username</span> for <span class="string">'https://e.coding.net'</span>: xxx<span class="variable">@qq</span>.com  </span><br><span class="line">Password for <span class="string">'https://xxx<span class="variable">@qq</span>.com<span class="variable">@e</span>.coding.net'</span>:</span><br></pre></td></tr></table></figure><p>解决了以上问题后，就可以push代码了</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">hexo clean</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">hexo g</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">hexo d</span></span><br></pre></td></tr></table></figure><h1 id="开启coding-page和aliyun解析"><a class="markdownIt-Anchor" href="#开启coding-page和aliyun解析"></a> 开启coding page和aliyun解析</h1><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171438.png"  alt=""><br>再开启自定义域名<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171507.png"  alt=""></p><p>首先要有一个域名，可以去阿里云买<a href="https://wanwang.aliyun.com/?spm=5176.12825654.eofdhaal5.9.2e482c4af1gZ19&amp;aly_as=IC99_D7X" target="_blank" rel="noopener">域名</a><br>然后添加解析<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/imgyh/cdn@master/img/20200208171947.png"  alt=""></p><p>github的域名解析线路选择境外，coding_page域名解析线路选择默认,也可以再添加一个解析线路选择百度，让百度的爬虫去爬</p><h2 id="one-more-thing"><a class="markdownIt-Anchor" href="#one-more-thing"></a> one more thing</h2><p>使用了CNAME需要在hexo本地博客的<code>source</code>文件夹中创建CNAME文件，无后缀。在里面写入自己的域名</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a><br>2.<a href="https://www.cnblogs.com/lfri/p/12260144.html" target="_blank" rel="noopener">Hexo 双线部署以实现百度收录</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      如何拥让百度收录github上的网站
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Coding" scheme="https://gyh.im/tags/Coding/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装openVPN</title>
    <link href="https://gyh.im/posts/66650f51/"/>
    <id>https://gyh.im/posts/66650f51/</id>
    <published>2020-02-07T07:30:00.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="openvpn搭建"><a class="markdownIt-Anchor" href="#openvpn搭建"></a> openVPN搭建</h1><h2 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br><span class="line"></span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install git</span><br></pre></td></tr></table></figure><h2 id="安装openvpn"><a class="markdownIt-Anchor" href="#安装openvpn"></a> 安装openVPN</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/Nyr/openvpn-install.git</span><br></pre></td></tr></table></figure><h2 id="运行openvpn"><a class="markdownIt-Anchor" href="#运行openvpn"></a> 运行openVPN</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">cd openvpn-install/</span><br><span class="line">ls</span><br><span class="line">chmod +x openvpn-install.sh</span><br><span class="line">sudo ./openvpn-install.sh</span><br><span class="line">将收到一些提示，以更改或确认安装的默认设置：</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> this OpenVPN <span class="string">"road warrior"</span> installer!</span><br><span class="line"></span><br><span class="line">I need <span class="keyword">to</span> ask you a few questions before starting the setup.</span><br><span class="line"></span><br><span class="line">You can leave the<span class="built_in"> default </span>options <span class="keyword">and</span> just press enter <span class="keyword">if</span> you are ok with them.</span><br><span class="line"></span><br><span class="line">First, provide the IPv4<span class="built_in"> address </span>of the<span class="built_in"> network interface </span>you want OpenVPN</span><br><span class="line"></span><br><span class="line">listening <span class="keyword">to</span>.</span><br><span class="line"></span><br><span class="line">IP address: 192.168.10.2</span><br><span class="line"></span><br><span class="line">Which protocol <span class="keyword">do</span> you want <span class="keyword">for</span> OpenVPN connections?</span><br><span class="line"></span><br><span class="line">1) UDP (recommended)</span><br><span class="line"></span><br><span class="line">2) TCP</span><br><span class="line"></span><br><span class="line">Protocol [1-2]: 1</span><br><span class="line"></span><br><span class="line">What<span class="built_in"> port </span><span class="keyword">do</span> you want OpenVPN listening <span class="keyword">to</span>?</span><br><span class="line"></span><br><span class="line">Port: 1194</span><br><span class="line"></span><br><span class="line">Which<span class="built_in"> DNS </span><span class="keyword">do</span> you want <span class="keyword">to</span> use with the VPN?</span><br><span class="line"></span><br><span class="line">1) Current<span class="built_in"> system </span>resolvers</span><br><span class="line"></span><br><span class="line">2) 1.1.1.1</span><br><span class="line"></span><br><span class="line">3) Google</span><br><span class="line"></span><br><span class="line">4) OpenDNS</span><br><span class="line"></span><br><span class="line">5) Verisign</span><br><span class="line"></span><br><span class="line">DNS [1-5]: 1</span><br><span class="line"></span><br><span class="line">Finally, tell me your name <span class="keyword">for</span> the<span class="built_in"> client </span>certificate.</span><br><span class="line"></span><br><span class="line">Please, use one word only, <span class="literal">no</span> special characters.</span><br><span class="line"></span><br><span class="line">Client name: client</span><br><span class="line"></span><br><span class="line">Okay, that was all I needed. We are ready <span class="keyword">to</span> <span class="builtin-name">set</span> up your OpenVPN<span class="built_in"> server </span>now.</span><br><span class="line"></span><br><span class="line">Press any key <span class="keyword">to</span> continue<span class="built_in">..</span>. &lt;Enter&gt;</span><br></pre></td></tr></table></figure><p>回答完问题后按enter开始安装成功后，收到成功消息</p><h2 id="创建虚拟接口"><a class="markdownIt-Anchor" href="#创建虚拟接口"></a> 创建虚拟接口</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip ad | grep tun0</span><br><span class="line"></span><br><span class="line">ip<span class="built_in"> route </span>| grep tun0</span><br><span class="line"></span><br><span class="line">测试要安装</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install traceroute</span><br><span class="line"></span><br><span class="line">然后</span><br><span class="line">traceroute 10.8.0.1</span><br></pre></td></tr></table></figure><h2 id="生成配置文件"><a class="markdownIt-Anchor" href="#生成配置文件"></a> 生成配置文件</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./openvpn-<span class="keyword">install</span>.sh</span><br></pre></td></tr></table></figure><p>把配置文件保存到客户端</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      搭建vpn的一种方法
    
    </summary>
    
    
      <category term="技术分享" scheme="https://gyh.im/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="OpenVpn" scheme="https://gyh.im/tags/OpenVpn/"/>
    
  </entry>
  
  <entry>
    <title>51单片机中断详解</title>
    <link href="https://gyh.im/posts/d9d9afd1/"/>
    <id>https://gyh.im/posts/d9d9afd1/</id>
    <published>2020-02-07T07:18:00.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="51单片机中断详解"><a class="markdownIt-Anchor" href="#51单片机中断详解"></a> 51单片机中断详解</h1><h2 id="常用寄存器"><a class="markdownIt-Anchor" href="#常用寄存器"></a> 常用寄存器</h2><h2 id="ie"><a class="markdownIt-Anchor" href="#ie"></a> IE</h2><p><code>EA -– ET2 ES ET1 EX1 ET0 EX0</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">作用:</span><br><span class="line">EA=<span class="number">1</span>,打开总中断。</span><br><span class="line">ES=<span class="number">1</span>,打开串口中断。</span><br><span class="line">ET0/<span class="number">1</span>,打开定时器<span class="number">0</span>/<span class="number">1</span>中断。</span><br><span class="line">EX0/<span class="number">1</span>,打开外部中断<span class="number">0</span>/<span class="number">1</span>。</span><br></pre></td></tr></table></figure><p>中断优先级:从右到左依次递减。</p><h2 id="tmod"><a class="markdownIt-Anchor" href="#tmod"></a> TMOD</h2><p><code>GATE C/T M1 M0 GATE C/T M1 M0</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">作用:</span><br><span class="line">高四位控制定时器<span class="number">1</span>模式，低四位控制定时器<span class="number">0</span>。</span><br><span class="line">GATE=<span class="number">0</span>仅由TR0/<span class="number">1</span>控制，GATE=<span class="number">1</span>由TR0/<span class="number">1</span>和外部中断引脚控制。</span><br><span class="line">C/T=<span class="number">0</span>定时模式。C/T=<span class="number">1</span>计数模式。</span><br><span class="line">M1 M0 为：</span><br><span class="line"><span class="number">00</span> 方式<span class="number">0</span>，<span class="number">13</span>位定时/计数器</span><br><span class="line"><span class="number">01</span> 方式<span class="number">1</span>，<span class="number">16</span>位定时/计数器</span><br><span class="line"><span class="number">10</span> 方式<span class="number">2</span>，<span class="number">8</span>位初值自动重装初值的<span class="number">8</span>位定时/计数器</span><br><span class="line"><span class="number">11</span> 方式<span class="number">3</span>，仅T0,分成两个<span class="number">8</span>位定时/计数器，T1停止</span><br></pre></td></tr></table></figure><h2 id="tcon"><a class="markdownIt-Anchor" href="#tcon"></a> TCON</h2><p><code>TF1 TR1 TF0 TR0 IE1 IT1 IE0 IT0</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TF，定时器溢出标志位，无需操作，硬件控制。</span><br><span class="line">TR，定时器运行控制位。</span><br><span class="line">IE,外部中断溢出标志位。</span><br><span class="line">IT,外部中断允许。IT=<span class="number">1</span>，下降沿触发，IT=<span class="number">0</span>，低电平触发。</span><br></pre></td></tr></table></figure><h2 id="pcon"><a class="markdownIt-Anchor" href="#pcon"></a> PCON</h2><p>8位寄存器，最高位为SMOD=1串行方式123波特率加倍。SMOD=0串行方式123正常波特率。</p><p>上电后初始化PCON=0X00</p><h2 id="scon"><a class="markdownIt-Anchor" href="#scon"></a> SCON</h2><p><code>SM0 SM1 SM2 REN TB8 RB8 TI RI</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SM0 SM1为：</span><br><span class="line"><span class="number">00</span> 方式<span class="number">0</span>，同步移位寄存方式，通常用于扩展I/O</span><br><span class="line"><span class="number">01</span> 方式<span class="number">1</span>，<span class="number">10</span>位异步首发(<span class="number">8</span>位数据)，波特率可调(由定时器<span class="number">1</span>溢出率控制)。</span><br><span class="line"><span class="number">10</span> 方式<span class="number">2</span>，<span class="number">11</span>位异步收发(<span class="number">9</span>位数据)，波特率固定。</span><br><span class="line"><span class="number">11</span> 方式<span class="number">3</span>，<span class="number">11</span>位异步收发(<span class="number">9</span>位数据)，波特率可调(由定时器<span class="number">1</span>溢出率控制)</span><br><span class="line"></span><br><span class="line">SM2 多机通信控制位，用于方式<span class="number">2</span>，<span class="number">3</span></span><br><span class="line"></span><br><span class="line">REN=<span class="number">1</span>，允许串行接受数据</span><br><span class="line"></span><br><span class="line">REN=<span class="number">0</span>,禁止串行接受数据。</span><br><span class="line"></span><br><span class="line">TB8，方式<span class="number">2</span>，<span class="number">3</span>发送第九位数据</span><br><span class="line"></span><br><span class="line">RB0, 方式<span class="number">2</span>，<span class="number">3</span>接受第九位数据</span><br><span class="line"></span><br><span class="line">TI,发送数据中断标志位，由硬件置<span class="number">1</span>，发送中断，需要软件清零，解除中断。</span><br><span class="line"></span><br><span class="line">RI 接受数据中断标志位，由硬件置<span class="number">1</span>，发送中断，需要软件清零，解除中断。</span><br></pre></td></tr></table></figure><h2 id="中断控制写法"><a class="markdownIt-Anchor" href="#中断控制写法"></a> 中断控制写法</h2><h2 id="外部中断01"><a class="markdownIt-Anchor" href="#外部中断01"></a> 外部中断0/1：</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EX0/<span class="number">1</span>=<span class="number">1</span>;  <span class="comment">//打开中断</span></span><br><span class="line">IT0/<span class="number">1</span>=<span class="number">0</span>/<span class="number">1</span>;   <span class="comment">//为0低电平触发，为1下降沿触发</span></span><br><span class="line">EA=<span class="number">1</span>;   <span class="comment">//打开总中断</span></span><br></pre></td></tr></table></figure><h2 id="定时器0方式1"><a class="markdownIt-Anchor" href="#定时器0方式1"></a> 定时器0方式1</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TMOD</span>=<span class="number">0</span>x01<span class="comment">; //确定定时器工作方式和使用哪个定时器。</span></span><br><span class="line"><span class="attr">TH0</span>=(<span class="number">65536</span>-N)/<span class="number">256</span><span class="comment">; //赋初值</span></span><br><span class="line"><span class="attr">TL0</span>=(<span class="number">65536</span>-N)%<span class="number">256</span><span class="comment">;</span></span><br><span class="line"><span class="attr">EA</span>=<span class="number">1</span><span class="comment">;  //打开总中断</span></span><br><span class="line"><span class="attr">ET0</span>=<span class="number">1</span><span class="comment">;   //打开定时器0中断</span></span><br><span class="line"><span class="attr">TR0</span>=<span class="number">1</span><span class="comment">;  //启动定时器</span></span><br></pre></td></tr></table></figure><h2 id="串口通信方式1"><a class="markdownIt-Anchor" href="#串口通信方式1"></a> 串口通信方式1</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TMOD</span>=<span class="number">0</span>x20<span class="comment">;  //定时器1方式2</span></span><br><span class="line"><span class="attr">TH1</span>= <span class="comment">;  //根据波特率计算</span></span><br><span class="line"><span class="attr">TL1</span>=<span class="comment">;</span></span><br><span class="line"><span class="attr">TR1</span>=<span class="number">1</span><span class="comment">; //启动定时器1，不需要ET1=1,不用打开中断</span></span><br><span class="line"><span class="attr">SCON</span>=<span class="number">0</span>x50<span class="comment">;  //确定串行方式1打开REN允许位，这里要对SCON操作，不要对SM1 SM0 REN赋值，有时会出错。</span></span><br><span class="line"><span class="attr">EA</span>=<span class="number">1</span><span class="comment">;  //打开总中断</span></span><br><span class="line"><span class="attr">ES</span>=<span class="number">1</span><span class="comment">;  //打开串口中断</span></span><br></pre></td></tr></table></figure><h2 id="波特率计算"><a class="markdownIt-Anchor" href="#波特率计算"></a> 波特率计算</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">方式<span class="number">0</span>波特率=f/<span class="number">12</span></span><br><span class="line">方式<span class="number">1</span>波特率=(<span class="number">2</span>^SMOD/<span class="number">32</span>)×T1溢出率</span><br><span class="line">方式<span class="number">2</span>波特率=(<span class="number">2</span>^SMOD/<span class="number">64</span>)×f</span><br><span class="line">方式<span class="number">3</span>波特率=(<span class="number">2</span>^SMOD/<span class="number">32</span>)×T1溢出率</span><br><span class="line"></span><br><span class="line">f为晶振频率，SMOD为PCON最高位</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      单片机入门讲解
    
    </summary>
    
    
      <category term="电子技术" scheme="https://gyh.im/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
      <category term="嵌入式" scheme="https://gyh.im/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="嵌入式" scheme="https://gyh.im/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>githubPage搭建hexo博客</title>
    <link href="https://gyh.im/posts/dadde4c0/"/>
    <id>https://gyh.im/posts/dadde4c0/</id>
    <published>2020-02-06T07:31:46.000Z</published>
    <updated>2020-07-14T04:38:59.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- build time:Tue Jul 14 2020 04:39:39 GMT+0000 (Coordinated Universal Time) --><h1 id="安装nodejsnpm和hexo"><a class="markdownIt-Anchor" href="#安装nodejsnpm和hexo"></a> 安装nodejs,npm和hexo</h1><h2 id="安装nvmnpm"><a class="markdownIt-Anchor" href="#安装nvmnpm"></a> 安装nvm，npm</h2><blockquote><p>nvm 全称 <code>Node Version Manager</code> 是 Nodejs 版本管理器，它让我们能方便的对 Nodejs 的版本进行切换。可以在他的<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">github仓库</a>中查看详细信息</p></blockquote><p>在终端执行下面的命令即可安装nvm,安装时会自动安装npm模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装nodejs</h2><p>安装好nvm后就可以使用nvm安装nodejs了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote         <span class="comment">#查看远端仓库中的nodejs版本 </span></span><br><span class="line">nvm ls                <span class="comment">#查看本地安装的nodejs版本</span></span><br><span class="line">nvm install [version] <span class="comment">#安装指定版本的nodejs</span></span><br></pre></td></tr></table></figure><p>查看nodejs有很多版本，我这里选择的是<code>nvm install v12.16.1</code></p><h2 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装hexo</h2><p>执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><blockquote><p>更详细安装教程请查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo文档</a></p></blockquote><h1 id="安装git并配置"><a class="markdownIt-Anchor" href="#安装git并配置"></a> 安装git并配置</h1><h2 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h2 id="github新建仓库"><a class="markdownIt-Anchor" href="#github新建仓库"></a> github新建仓库</h2><p>创建个人仓库格式<a href="https://github.com/imgyh/imgyh.github.io" target="_blank" rel="noopener">username.github.io</a></p><h2 id="生成ssh添加到github"><a class="markdownIt-Anchor" href="#生成ssh添加到github"></a> 生成SSH添加到github</h2><blockquote><p>ssh是非必须的，你可以使用http的方式来推送代码，只是推送代码时需要输入密码</p></blockquote><p>回到bash中,配置git账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">git config --global user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>创建SSH,一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，<br>id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，<br>这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，<br>才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去。</p><h1 id="部署hexo到github"><a class="markdownIt-Anchor" href="#部署hexo到github"></a> 部署hexo到github</h1><h2 id="初始化本地blog"><a class="markdownIt-Anchor" href="#初始化本地blog"></a> 初始化本地blog</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo init myblog</span><br><span class="line"><span class="built_in">cd</span> myblog //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有：</p><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件</p><p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo g </span><br><span class="line">sudo hexo s</span><br></pre></td></tr></table></figure><h2 id="部署到github"><a class="markdownIt-Anchor" href="#部署到github"></a> 部署到github</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 hexo clean清除了你之前生成的东西，也可以不加。<br>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>hexo deploy 部署文章，可以用hexo d缩写</p><p>注意deploy时可能要你输入username和password。</p><p>过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了！！</p><h1 id="hexo基本配置"><a class="markdownIt-Anchor" href="#hexo基本配置"></a> hexo基本配置</h1><p>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方</a>的配置描述。</p><h2 id="新建文章post"><a class="markdownIt-Anchor" href="#新建文章post"></a> 新建文章post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo new paper_name</span><br></pre></td></tr></table></figure><h2 id="新建page"><a class="markdownIt-Anchor" href="#新建page"></a> 新建page</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo new page page_name</span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个page_name文件夹，以及page_name文件夹中的index.md，这样你访问的page_name对应的链接就是http://xxx.xxx/page_name</p><h2 id="新建草稿draft"><a class="markdownIt-Anchor" href="#新建草稿draft"></a> 新建草稿draft</h2><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><p>就会自动把newpage.md发送到post中。</p><h1 id="更换主题"><a class="markdownIt-Anchor" href="#更换主题"></a> 更换主题</h1><p>到这一步，如果你觉得默认的landscape主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。点<a href="https://hexo.io/themes/" target="_blank" rel="noopener">这里</a><br>个人觉得好看的主题<br>1.<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next</a><br>2.<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">matery</a><br>3.<a href="https://jerryc.me/" target="_blank" rel="noopener">butterfly</a><br>4.<a href="https://github.com/honjun/hexo-theme-sakura" target="_blank" rel="noopener">sakura</a><br>具体配置参见各主题readme，我用的<a href="https://jerryc.me/" target="_blank" rel="noopener">butterfly</a>这个主题，文档点<a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">这里</a></p><h1 id="源代码储存"><a class="markdownIt-Anchor" href="#源代码储存"></a> 源代码储存</h1><h2 id="git多分支"><a class="markdownIt-Anchor" href="#git多分支"></a> git多分支</h2><p>问题来了，如果你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者实验室的台式机，发现你电脑里面没有博客的文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？</p><p>在这里我们就可以利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。</p><p>机制是这样的，由于hexo d上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。<br>也就是上传的是在本地目录里自动生成的.deploy_git里面。</p><p>其他文件 ，包括我们写在source 里面的，和配置文件，主题文件，都没有上传到github</p><p>所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。</p><p>首先，先在github上新建一个hexo分支，<br>然后在本地的任意目录下，打开git bash，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure><p>将其克隆到本地，因为默认分支已经设成了hexo，所以clone时只clone了hexo。</p><p>接下来在克隆到本地的username.github.io中，把除了.git 文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了.deploy_git。这里应该说一句，复制过来的源文件应该有一个.gitignore，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.DS_Store</span></span><br><span class="line">Thumbs<span class="number">.</span><span class="built_in">db</span></span><br><span class="line"><span class="built_in">db</span><span class="number">.</span>json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line"><span class="meta">public</span>/</span><br><span class="line"><span class="meta">.deploy</span>*/</span><br></pre></td></tr></table></figure><p>注意，如果你之前克隆过theme中的主题文件，那么应该把主题文件中的.git文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了。</p><p>而后</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit –m <span class="string">"add branch"</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure><p>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中node_modules、public、db.json已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装 。</p><h2 id="建立私有仓库"><a class="markdownIt-Anchor" href="#建立私有仓库"></a> 建立私有仓库</h2><p>如果觉得多分支管理对站点配置文件<code>_config.yml</code> 的隐私保护不是很好，可以考虑新建一个私有仓库，其他操作步骤同上</p><h1 id="更换电脑操作"><a class="markdownIt-Anchor" href="#更换电脑操作"></a> 更换电脑操作</h1><p>和之前一样，安装git，nodejs，npm，hexo，设置sshkey<br>在任意文件夹下克隆hexo分支<br>然后进入克隆到的文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> xxx.github.io</span><br><span class="line">sudo npm install</span><br><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>生成，部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo generate</span><br><span class="line">sudo hexo d</span><br></pre></td></tr></table></figure><p>最好上传一下源文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m <span class="string">"xxxx"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>如果是在已经编辑过的电脑上，已经有clone文件夹了，那么，每次只要和远端同步一下就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>1.<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a><br>2.<a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">hexo-theme-butterfly安装文档</a><br>3.<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">hexo官方文档</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      如何拥有个人的免费网站
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gyh.im/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://gyh.im/tags/Hexo/"/>
    
      <category term="Github" scheme="https://gyh.im/tags/Github/"/>
    
  </entry>
  
</feed>
